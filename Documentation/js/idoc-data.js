const MEMBERS = [
{"signature":"InfinityEngine","childcount":52,"type":"Namespace","name":"InfinityEngine","token":"namespace InfinityEngine","scope":"","comments":{"summary":"The main namespace of the API."}},{"signature":"InfinityEngine.AutoRotate","childcount":4,"type":"Class","name":"AutoRotate","token":"public class AutoRotate : MonoBehaviour ","scope":"InfinityEngine"},{"signature":"InfinityEngine.AutoRotate.speed","childcount":0,"type":"Field","name":"speed","token":"public float speed ","scope":"InfinityEngine.AutoRotate"},{"signature":"InfinityEngine.AutoRotate.rotate","childcount":0,"type":"Field","name":"rotate","token":"public bool rotate ","scope":"InfinityEngine.AutoRotate"},{"signature":"InfinityEngine.AutoRotate.axis","childcount":0,"type":"Field","name":"axis","token":"public Vector3 axis ","scope":"InfinityEngine.AutoRotate"},{"signature":"InfinityEngine.AutoRotate.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"InfinityEngine.AutoRotate"},{"signature":"InfinityEngine.BackButtonManager","childcount":13,"type":"Class","name":"BackButtonManager","token":"public class BackButtonManager : Singleton<BackButtonManager> ","scope":"InfinityEngine","comments":{"summary":"Manages back button pressed event (escape on window , back arrow on mobile)"}},{"signature":"InfinityEngine.BackButtonManager.backClickCount","childcount":0,"type":"Field","name":"backClickCount","token":"private int backClickCount ","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.resetInterval","childcount":0,"type":"Field","name":"resetInterval","token":"private float resetInterval ","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.time","childcount":0,"type":"Field","name":"time","token":"private float time ","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.action","childcount":0,"type":"Field","name":"action","token":"private Action action ","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.Action","childcount":0,"type":"Property","name":"Action","token":"public Action Action { get; set; }","scope":"InfinityEngine.BackButtonManager","comments":{"summary":"Action to do when the button is pressed"}},{"signature":"InfinityEngine.BackButtonManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"InfinityEngine.BackButtonManager"},{"signature":"InfinityEngine.BackButtonManager.GetClickCount()","childcount":0,"type":"Method","name":"GetClickCount","token":"public static int GetClickCount()","scope":"InfinityEngine.BackButtonManager","comments":{"summary":"The number of times that the button is pressed during the last 5 seconds"}},{"signature":"InfinityEngine.BackButtonManager.SetAction(Action)","childcount":0,"type":"Method","name":"SetAction","token":"public static void SetAction(Action action)","scope":"InfinityEngine.BackButtonManager","comments":{"summary":"Create you custom action","param-action":"the action to do when back key is pressed"},"params":{"action":"Action"}},{"signature":"InfinityEngine.BackButtonManager.SetActionExit(string)","childcount":0,"type":"Method","name":"SetActionExit","token":"public static void SetActionExit(string message)","scope":"InfinityEngine.BackButtonManager","comments":{"summary":"Quit Application if user click two times the back button\n         in 5 secs else show the message in screen","param-message":"the message to display if is the first click"},"params":{"message":"string"}},{"signature":"InfinityEngine.BackButtonManager.SetActionLoadLevel(string, string)","childcount":0,"type":"Method","name":"SetActionLoadLevel","token":"public static void SetActionLoadLevel(string level, string message)","scope":"InfinityEngine.BackButtonManager","comments":{"summary":"Load the level in parameter if user click two times the back button\n         in 5 secs else show the message in screen","param-level":"the level to load","param-message":"the message to display if is the first click"},"params":{"level":"string","message":"string"}},{"signature":"InfinityEngine.BackButtonManager._ActionExit(string)","childcount":0,"type":"Method","name":"_ActionExit","token":"private void _ActionExit(string message)","scope":"InfinityEngine.BackButtonManager","params":{"message":"string"}},{"signature":"InfinityEngine.BackButtonManager._ActionLoadLevel(string, string)","childcount":0,"type":"Method","name":"_ActionLoadLevel","token":"private void _ActionLoadLevel(string level, string message)","scope":"InfinityEngine.BackButtonManager","params":{"level":"string","message":"string"}},{"signature":"InfinityEngine.EditorCoroutine","childcount":9,"type":"Class","name":"EditorCoroutine","token":"public class EditorCoroutine ","scope":"InfinityEngine","comments":{"summary":"Provides a way to use coroutines in editor mode."}},{"signature":"InfinityEngine.EditorCoroutine.routine","childcount":0,"type":"Field","name":"routine","token":"private readonly IEnumerator routine = ","scope":"InfinityEngine.EditorCoroutine"},{"signature":"InfinityEngine.EditorCoroutine.current","childcount":0,"type":"Field","name":"current","token":"private object current ","scope":"InfinityEngine.EditorCoroutine"},{"signature":"InfinityEngine.EditorCoroutine.IsRunning","childcount":0,"type":"Property","name":"IsRunning","token":"public bool IsRunning { get; set; }","scope":"InfinityEngine.EditorCoroutine","comments":{"summary":"Gets a value indicating whether the coroutine is running"}},{"signature":"InfinityEngine.EditorCoroutine.EditorCoroutine(IEnumerator)","childcount":0,"type":"Constructor","name":"EditorCoroutine","token":"private  EditorCoroutine(IEnumerator routine)","scope":"InfinityEngine.EditorCoroutine","params":{"routine":"IEnumerator"}},{"signature":"InfinityEngine.EditorCoroutine.Start(IEnumerator)","childcount":0,"type":"Method","name":"Start","token":"public static EditorCoroutine Start(IEnumerator routine)","scope":"InfinityEngine.EditorCoroutine","comments":{"summary":"Starts the coroutine","returns":"An object of type EditorCoroutine","param-routine":"The coroutine"},"params":{"routine":"IEnumerator"}},{"signature":"InfinityEngine.EditorCoroutine.Stop()","childcount":0,"type":"Method","name":"Stop","token":"public void Stop()","scope":"InfinityEngine.EditorCoroutine","comments":{"summary":"Stops the coroutine"}},{"signature":"InfinityEngine.EditorCoroutine.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"InfinityEngine.EditorCoroutine"},{"signature":"InfinityEngine.EditorCoroutine.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"InfinityEngine.EditorCoroutine"},{"signature":"InfinityEngine.EditorCoroutine.Next()","childcount":0,"type":"Method","name":"Next","token":"private void Next()","scope":"InfinityEngine.EditorCoroutine"},{"signature":"InfinityEngine.EditorWaitForSeconds","childcount":3,"type":"Class","name":"EditorWaitForSeconds","token":"public class EditorWaitForSeconds : CustomYieldInstruction ","scope":"InfinityEngine","comments":{"summary":"Class used to suspends the execution of a coroutine inside the editor."}},{"signature":"InfinityEngine.EditorWaitForSeconds.waitTime","childcount":0,"type":"Field","name":"waitTime","token":"private readonly float waitTime = ","scope":"InfinityEngine.EditorWaitForSeconds"},{"signature":"InfinityEngine.EditorWaitForSeconds.keepWaiting","childcount":0,"type":"Property","name":"keepWaiting","token":"public override bool keepWaiting { get; }","scope":"InfinityEngine.EditorWaitForSeconds","comments":{"summary":"Gets a value indicating whether the coroutine should be suspended"}},{"signature":"InfinityEngine.EditorWaitForSeconds.EditorWaitForSeconds(float)","childcount":0,"type":"Constructor","name":"EditorWaitForSeconds","token":"public  EditorWaitForSeconds(float time)","scope":"InfinityEngine.EditorWaitForSeconds","comments":{"summary":"Suspends the execution of a coroutine for the given time in seconds","param-time":"The time to suspends the coroutine"},"params":{"time":"float"}},{"signature":"InfinityEngine.Helper","childcount":4,"type":"Class","name":"Helper","token":"public class Helper : MonoBehaviour ","scope":"InfinityEngine","comments":{"summary":"Script that contains useful functions usable with the buttons in unity inspector."}},{"signature":"InfinityEngine.Helper.Quit()","childcount":0,"type":"Method","name":"Quit","token":"public void Quit()","scope":"InfinityEngine.Helper","comments":{"summary":"Quit application"}},{"signature":"InfinityEngine.Helper.OpenUrl(string)","childcount":0,"type":"Method","name":"OpenUrl","token":"public void OpenUrl(string url)","scope":"InfinityEngine.Helper","comments":{"summary":"Open a app link in parameter","param-url":"link"},"params":{"url":"string"}},{"signature":"InfinityEngine.Helper.OpenAndroidMarketUrl(string)","childcount":0,"type":"Method","name":"OpenAndroidMarketUrl","token":"public void OpenAndroidMarketUrl(string packageName)","scope":"InfinityEngine.Helper","comments":{"summary":"Open the page of the android application identified by the given package name in android market","param-packageName":"The name of package (com.cpmpany.product..)"},"params":{"packageName":"string"}},{"signature":"InfinityEngine.Helper.PlaySound(AudioClip)","childcount":0,"type":"Method","name":"PlaySound","token":"public void PlaySound(AudioClip clip)","scope":"InfinityEngine.Helper","comments":{"summary":"Plays the given audio clip","param-clip":"The audio to play"},"params":{"clip":"AudioClip"}},{"signature":"InfinityEngine.IAccessor","childcount":0,"type":"Interface","name":"IAccessor","token":"public interface IAccessor ","scope":"InfinityEngine","comments":{"summary":"Marker interface for all Accessor classes. \r\n     \r\n         You typically use this interface with a list or dictionary to make references to the methods encapsulated by Accessor classes."}},{"signature":"InfinityEngine.Accessor<TResult>","childcount":3,"type":"Class","name":"Accessor<TResult>","token":"public class Accessor<TResult> : IAccessor ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 0 parameter and which returns a value.","remarks":"There is 4 variations of this class : <br/>\r\n         - <see cref=\"Accessor{T, TResult}\"/> <br/>\r\n         - <see cref=\"Accessor{T1, T2, TResult}\"/> <br/>\r\n         - <see cref=\"Accessor{T1, T2, T3, TResult}\"/> <br/>\r\n         - <see cref=\"Accessor{T1, T2, T3, T4, TResult}\"/> <br/>\r\n        \r\n     All theses classes allow to encapasulate functions with a more parameters","typeparam-TResult":"Type of the value returned by the encapsulated function"}},{"signature":"InfinityEngine.Accessor<TResult>.func","childcount":0,"type":"Field","name":"func","token":"private Func<TResult> func ","scope":"InfinityEngine.Accessor<TResult>"},{"signature":"InfinityEngine.Accessor<TResult>.Accessor(Func<TResult>)","childcount":0,"type":"Constructor","name":"Accessor","token":"public  Accessor(Func<TResult> func)","scope":"InfinityEngine.Accessor<TResult>","comments":{"summary":"Create new instance of this class","param-func":"The method to encapsulate"},"params":{"func":"Func<TResult>"}},{"signature":"InfinityEngine.Accessor<TResult>.Invoke()","childcount":0,"type":"Method","name":"Invoke","token":"public TResult Invoke()","scope":"InfinityEngine.Accessor<TResult>","comments":{"summary":"Invokes the encapsulated function.","returns":"An object of type <c>TResult</c>"}},{"signature":"InfinityEngine.Accessor<T, TResult>","childcount":3,"type":"Class","name":"Accessor<T, TResult>","token":"public class Accessor<T, TResult> : IAccessor ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 1 parameter and which returns a value.","typeparam-T":"Type of the parameter of the encapsulated function","typeparam-TResult":"Type of the value returned by the encapsulated function"}},{"signature":"InfinityEngine.Accessor<T, TResult>.func","childcount":0,"type":"Field","name":"func","token":"private Func<T, TResult> func ","scope":"InfinityEngine.Accessor<T, TResult>"},{"signature":"InfinityEngine.Accessor<T, TResult>.Accessor(Func<T, TResult>)","childcount":0,"type":"Constructor","name":"Accessor","token":"public  Accessor(Func<T, TResult> func)","scope":"InfinityEngine.Accessor<T, TResult>","comments":{"summary":"Creates new instance of this class","param-func":"The method to encapsulate"},"params":{"func":"Func<T, TResult>"}},{"signature":"InfinityEngine.Accessor<T, TResult>.Invoke(T)","childcount":0,"type":"Method","name":"Invoke","token":"public TResult Invoke(T arg)","scope":"InfinityEngine.Accessor<T, TResult>","comments":{"summary":"Invokes the encapsulated function.","returns":"An object of type <c>TResult</c>","param-arg":"the parameter of the encapsulated function"},"params":{"arg":"T"}},{"signature":"InfinityEngine.Accessor<T1, T2, TResult>","childcount":3,"type":"Class","name":"Accessor<T1, T2, TResult>","token":"public class Accessor<T1, T2, TResult> : IAccessor ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 2 parameter and which returns a value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function","typeparam-TResult":"Type of the value returned by the encapsulated function"}},{"signature":"InfinityEngine.Accessor<T1, T2, TResult>.func","childcount":0,"type":"Field","name":"func","token":"private Func<T1, T2, TResult> func ","scope":"InfinityEngine.Accessor<T1, T2, TResult>"},{"signature":"InfinityEngine.Accessor<T1, T2, TResult>.Accessor(Func<T1, T2, TResult>)","childcount":0,"type":"Constructor","name":"Accessor","token":"public  Accessor(Func<T1, T2, TResult> func)","scope":"InfinityEngine.Accessor<T1, T2, TResult>","comments":{"summary":"Creates new instance of this class","param-func":"The method to encapsulate"},"params":{"func":"Func<T1, T2, TResult>"}},{"signature":"InfinityEngine.Accessor<T1, T2, TResult>.Invoke(T1, T2)","childcount":0,"type":"Method","name":"Invoke","token":"public TResult Invoke(T1 arg1, T2 arg2)","scope":"InfinityEngine.Accessor<T1, T2, TResult>","comments":{"summary":"Invokes the encapsulated function.","returns":"An object of type <c>TResult</c>","param-arg1":"the first parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, TResult>","childcount":3,"type":"Class","name":"Accessor<T1, T2, T3, TResult>","token":"public class Accessor<T1, T2, T3, TResult> : IAccessor ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 2 parameter and which returns a value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function","typeparam-T3":"Type of the third parameter of the encapsulated function","typeparam-TResult":"Type of the value returned by the encapsulated function"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, TResult>.func","childcount":0,"type":"Field","name":"func","token":"private Func<T1, T2, T3, TResult> func ","scope":"InfinityEngine.Accessor<T1, T2, T3, TResult>"},{"signature":"InfinityEngine.Accessor<T1, T2, T3, TResult>.Accessor(Func<T1, T2, T3, TResult>)","childcount":0,"type":"Constructor","name":"Accessor","token":"public  Accessor(Func<T1, T2, T3, TResult> func)","scope":"InfinityEngine.Accessor<T1, T2, T3, TResult>","comments":{"summary":"Creates new instance of this class","param-func":"The method to encapsulate"},"params":{"func":"Func<T1, T2, T3, TResult>"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, TResult>.Invoke(T1, T2, T3)","childcount":0,"type":"Method","name":"Invoke","token":"public TResult Invoke(T1 arg1, T2 arg2, T3 arg3)","scope":"InfinityEngine.Accessor<T1, T2, T3, TResult>","comments":{"summary":"Invokes the encapsulated function.","returns":"An object of type <c>TResult</c>","param-arg1":"the first parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function","param-arg3":"the third parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2","arg3":"T3"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>","childcount":3,"type":"Class","name":"Accessor<T1, T2, T3, T4, TResult>","token":"public class Accessor<T1, T2, T3, T4, TResult> : IAccessor ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 2 parameter and which returns a value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function","typeparam-T3":"Type of the third parameter of the encapsulated function","typeparam-T4":"Type of the fourth parameter of the encapsulated function","typeparam-TResult":"Type of the value returned by the encapsulated function"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>.func","childcount":0,"type":"Field","name":"func","token":"private Func<T1, T2, T3, T4, TResult> func ","scope":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>"},{"signature":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>.Accessor(Func<T1, T2, T3, T4, TResult>)","childcount":0,"type":"Constructor","name":"Accessor","token":"public  Accessor(Func<T1, T2, T3, T4, TResult> func)","scope":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>","comments":{"summary":"Creates new instance of this class","param-func":"The method to encapsulate"},"params":{"func":"Func<T1, T2, T3, T4, TResult>"}},{"signature":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)","childcount":0,"type":"Method","name":"Invoke","token":"public TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)","scope":"InfinityEngine.Accessor<T1, T2, T3, T4, TResult>","comments":{"summary":"Invokes the encapsulated function.","returns":"An object of type <c>TResult</c>","param-arg1":"the first parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function","param-arg3":"the third parameter of the encapsulated function","param-arg4":"the fourth parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2","arg3":"T3","arg4":"T4"}},{"signature":"InfinityEngine.IMutator","childcount":0,"type":"Interface","name":"IMutator","token":"public interface IMutator ","scope":"InfinityEngine","comments":{"summary":"This is a marker interface for all Mutator classes.\r\n     \r\n     You typically use this interface with a list or dictionary to make references to the methods encapsulated by Mutator classes."}},{"signature":"InfinityEngine.Mutator","childcount":3,"type":"Class","name":"Mutator","token":"public class Mutator : IMutator ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 0 parameter and which returns no value.","remarks":"There is 4 variations of this class :<br/>\r\n         - <see cref=\"Mutator{T}\"/><br/>\r\n         - <see cref=\"Mutator{T1, T2}\"/><br/>\r\n         - <see cref=\"Mutator{T1, T2, T3}\"/><br/>\r\n         - <see cref=\"Mutator{T1, T2, T3, T4}\"/><br/>\r\n     \r\n     All theses classes allow to encapasulate  functions with a more parameters"}},{"signature":"InfinityEngine.Mutator.action","childcount":0,"type":"Field","name":"action","token":"private Action action ","scope":"InfinityEngine.Mutator"},{"signature":"InfinityEngine.Mutator.Mutator(Action)","childcount":0,"type":"Constructor","name":"Mutator","token":"public  Mutator(Action action)","scope":"InfinityEngine.Mutator","comments":{"summary":"Creates new instance of this class","param-action":"The method to encapsulate"},"params":{"action":"Action"}},{"signature":"InfinityEngine.Mutator.Invoke()","childcount":0,"type":"Method","name":"Invoke","token":"public void Invoke()","scope":"InfinityEngine.Mutator","comments":{"summary":"Invokes the encapsulated function."}},{"signature":"InfinityEngine.Mutator<T>","childcount":3,"type":"Class","name":"Mutator<T>","token":"public class Mutator<T> : IMutator ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 1 parameter and which returns no value.","typeparam-T":"Type of the parameter of the encapsulated function"}},{"signature":"InfinityEngine.Mutator<T>.action","childcount":0,"type":"Field","name":"action","token":"private Action<T> action ","scope":"InfinityEngine.Mutator<T>"},{"signature":"InfinityEngine.Mutator<T>.Mutator(Action<T>)","childcount":0,"type":"Constructor","name":"Mutator","token":"public  Mutator(Action<T> action)","scope":"InfinityEngine.Mutator<T>","comments":{"summary":"Create new instance of this class","param-action":"The method to encapsulate"},"params":{"action":"Action<T>"}},{"signature":"InfinityEngine.Mutator<T>.Invoke(T)","childcount":0,"type":"Method","name":"Invoke","token":"public void Invoke(T arg)","scope":"InfinityEngine.Mutator<T>","comments":{"summary":"Invokes the encapsulated function.","param-arg":"the parameter of the encapsulated function"},"params":{"arg":"T"}},{"signature":"InfinityEngine.Mutator<T1, T2>","childcount":3,"type":"Class","name":"Mutator<T1, T2>","token":"public class Mutator<T1, T2> : IMutator ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 2 parameters and which returns no value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function"}},{"signature":"InfinityEngine.Mutator<T1, T2>.action","childcount":0,"type":"Field","name":"action","token":"private Action<T1, T2> action ","scope":"InfinityEngine.Mutator<T1, T2>"},{"signature":"InfinityEngine.Mutator<T1, T2>.Mutator(Action<T1, T2>)","childcount":0,"type":"Constructor","name":"Mutator","token":"public  Mutator(Action<T1, T2> action)","scope":"InfinityEngine.Mutator<T1, T2>","comments":{"summary":"Creates new instance of this class","param-action":"The method to encapsulate"},"params":{"action":"Action<T1, T2>"}},{"signature":"InfinityEngine.Mutator<T1, T2>.Invoke(T1, T2)","childcount":0,"type":"Method","name":"Invoke","token":"public void Invoke(T1 arg1, T2 arg2)","scope":"InfinityEngine.Mutator<T1, T2>","comments":{"summary":"Invokes the encapsulated function.","param-arg1":"the fist parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3>","childcount":3,"type":"Class","name":"Mutator<T1, T2, T3>","token":"public class Mutator<T1, T2, T3> : IMutator ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 3 parameters and which returns no value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function","typeparam-T3":"Type of the third parameter of the encapsulated function"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3>.action","childcount":0,"type":"Field","name":"action","token":"private Action<T1, T2, T3> action ","scope":"InfinityEngine.Mutator<T1, T2, T3>"},{"signature":"InfinityEngine.Mutator<T1, T2, T3>.Mutator(Action<T1, T2, T3>)","childcount":0,"type":"Constructor","name":"Mutator","token":"public  Mutator(Action<T1, T2, T3> action)","scope":"InfinityEngine.Mutator<T1, T2, T3>","comments":{"summary":"Creates new instance of this class","param-action":"The method to encapsulate"},"params":{"action":"Action<T1, T2, T3>"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3>.Invoke(T1, T2, T3)","childcount":0,"type":"Method","name":"Invoke","token":"public void Invoke(T1 arg1, T2 arg2, T3 arg3)","scope":"InfinityEngine.Mutator<T1, T2, T3>","comments":{"summary":"Invokes the encapsulated function.","param-arg1":"the fist parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function","param-arg3":"the third parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2","arg3":"T3"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3, T4>","childcount":3,"type":"Class","name":"Mutator<T1, T2, T3, T4>","token":"public class Mutator<T1, T2, T3, T4> : IMutator ","scope":"InfinityEngine","comments":{"summary":"Encapsulates a method with takes 4 parameters and which returns no value.","typeparam-T1":"Type of the first parameter of the encapsulated function","typeparam-T2":"Type of the second parameter of the encapsulated function","typeparam-T3":"Type of the third parameter of the encapsulated function","typeparam-T4":"Type of the fourth parameter of the encapsulated function"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3, T4>.action","childcount":0,"type":"Field","name":"action","token":"private Action<T1, T2, T3, T4> action ","scope":"InfinityEngine.Mutator<T1, T2, T3, T4>"},{"signature":"InfinityEngine.Mutator<T1, T2, T3, T4>.Mutator(Action<T1, T2, T3, T4>)","childcount":0,"type":"Constructor","name":"Mutator","token":"public  Mutator(Action<T1, T2, T3, T4> action)","scope":"InfinityEngine.Mutator<T1, T2, T3, T4>","comments":{"summary":"Creates new instance of this class","param-action":"The method to encapsulate"},"params":{"action":"Action<T1, T2, T3, T4>"}},{"signature":"InfinityEngine.Mutator<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)","childcount":0,"type":"Method","name":"Invoke","token":"public void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)","scope":"InfinityEngine.Mutator<T1, T2, T3, T4>","comments":{"summary":"Invoke the encapsulated function.","param-arg1":"the fist parameter of the encapsulated function","param-arg2":"the second parameter of the encapsulated function","param-arg3":"the third parameter of the encapsulated function","param-arg4":"the fouth parameter of the encapsulated function"},"params":{"arg1":"T1","arg2":"T2","arg3":"T3","arg4":"T4"}},{"signature":"InfinityEngine.Infinity","childcount":47,"type":"Class","name":"Infinity","token":"public class Infinity : Singleton<Infinity> ","scope":"InfinityEngine","comments":{"summary":"The core of <c>InfinityEngine API</c>.\n         This class is an singleton, you should not instantiate it or place it manually on Unity inspector inside the editor.<para> </para>\n         It uses the principe of facade design pattern to provides a static access to many features and plugins of the framework."}},{"signature":"InfinityEngine.Infinity.Version","childcount":0,"type":"Field","name":"Version","token":"public const string Version = \"1.2.0\";","scope":"InfinityEngine.Infinity","comments":{"summary":"The version of the api"}},{"signature":"InfinityEngine.Infinity.editorTimeSinceStartup","childcount":0,"type":"Field","name":"editorTimeSinceStartup","token":"private static PropertyInfo editorTimeSinceStartup ","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.LoggingType","childcount":0,"type":"Field","name":"LoggingType","token":"public static LogType LoggingType ","scope":"InfinityEngine.Infinity","comments":{"summary":"Type of the logging."}},{"signature":"InfinityEngine.Infinity.onSceneChanged","childcount":0,"type":"Field","name":"onSceneChanged","token":"public static Action onSceneChanged ","scope":"InfinityEngine.Infinity","comments":{"summary":"Callback invoked <b>ONLY</b> when you change the application scene thanks to <see cref=\"M:InfinityEngine.Infinity.LoadLevelAfterDelay(System.String,System.Single)\" />."}},{"signature":"InfinityEngine.Infinity.editorUpdate","childcount":0,"type":"Field","name":"editorUpdate","token":"public static Action editorUpdate ","scope":"InfinityEngine.Infinity","comments":{"summary":"Delegate for EditorApplication.update"}},{"signature":"InfinityEngine.Infinity.mInterpolationManager","childcount":0,"type":"Field","name":"mInterpolationManager","token":"private InterpolationManager mInterpolationManager ","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.isStarted","childcount":0,"type":"Field","name":"isStarted","token":"private bool isStarted ","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.isPaused","childcount":0,"type":"Field","name":"isPaused","token":"private bool isPaused ","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.EnableLog","childcount":0,"type":"Property","name":"EnableLog","token":"public static bool EnableLog { get; set; }","scope":"InfinityEngine.Infinity","comments":{"summary":"The log functions of the class <see cref=\"T:InfinityEngine.Utils.Debugger\" /> works only if this value is set to <c>true</c>.<para> </para> \n         This value is always set to <c>false</c> when the application is not running on Unity Editor.\n         and <c>true</c> by default when the application is running on Unity Editor."}},{"signature":"InfinityEngine.Infinity.IsPaused","childcount":0,"type":"Property","name":"IsPaused","token":"public static bool IsPaused { get; }","scope":"InfinityEngine.Infinity","comments":{"summary":"Gets a value indicating wheter the application is paused (<c>Time</c>.time scale sets to)."}},{"signature":"InfinityEngine.Infinity.EditorDeltaTime","childcount":0,"type":"Property","name":"EditorDeltaTime","token":"public static float EditorDeltaTime { get; }","scope":"InfinityEngine.Infinity","comments":{"summary":"Gets the time the editor took in seconds to update."}},{"signature":"InfinityEngine.Infinity.EditorTimeSinceStartup","childcount":0,"type":"Property","name":"EditorTimeSinceStartup","token":"public static float EditorTimeSinceStartup { get; }","scope":"InfinityEngine.Infinity","comments":{"summary":"Gets the time since the editor was started (EditorApplication.timeSinceStartup)"}},{"signature":"InfinityEngine.Infinity.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.Clear()","childcount":0,"type":"Method","name":"Clear","token":"public static void Clear()","scope":"InfinityEngine.Infinity","comments":{"summary":"Stops all coroutines and call the garbage collector.","remarks":"When you call this function, all asynchronous methods (like <see cref=\"M:InfinityEngine.Infinity.For(System.Single,System.Action,System.Action)\" />) that are currently invoked will be stopped."}},{"signature":"InfinityEngine.Infinity.StartEngine()","childcount":0,"type":"Method","name":"StartEngine","token":"internal static void StartEngine()","scope":"InfinityEngine.Infinity"},{"signature":"InfinityEngine.Infinity.To<T>(T, T, float, Action<T>)","childcount":0,"type":"Method","name":"To<T>","token":"public static Interpolation<T> To<T>(T startValue, T endValue, float duration, Action<T> setter)","scope":"InfinityEngine.Infinity","comments":{"summary":"Interpolates smoothly the value of the variable of type <typeparamref name=\"T\" /> between <paramref name=\"startValue\" /> and \n         <paramref name=\"endValue\" /> in <paramref name=\"duration\" /> seconds thanks to <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> class.","example":"The following code is an example of use of this method :    \n              <code>\n                 using UnityEngine;\n                 using UnityEngine.UI;\n                 using InfinityEngine;\n        \n                 public class ExampleClass : MonoBehaviour {        \n        \n                     // reference to a Text object (must be specified in the inspector panel of the editor)\n                     public Text label;\n                     // reference to a Image object (must be specified in the inspector panel of the editor)\n                     public Image progressBar;\n        \n                     void Start()\n                     {\n                         Infinity.To(0.0f, 1.0f, 2, value =&gt; {\n                             // Change the text of the label during the interpolation \n                             label.text = (int)(value * 100) + \"%\";\n                             // Change the fill amount of the progressBar image\n                             progressBar.fillAmount = value;\n        \n                             }).Start(); // Starts the interpolation\n                     }\n                 }   \n             </code>\n              This code produces the following result : <br />\n              <img src=\"images/Infinity/Infinity.To_example.gif\" />","remarks":"- You must call the method <see cref=\"M:InfinityEngine.Interpolations.Interpolable.Start\" />  to launch the interpolation.<br />\n          - It is possible to add options to the interpolations thanks to the chained methods of <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> interface.<br />\n          - You cannot use any data type with this function, see <see cref=\"F:InfinityEngine.Interpolations.Interpolation`1.SupportedTypes\" /> to know what data type interpolate thanks this function.<br />\n          - A lot of pre-maded interpolations are created for unity components and you can use them thanks to extension methods of <see cref=\"N:InfinityEngine.Extensions\" /> namespace \n           or thanks to the plugin <a href=\"http://u3d.as/GRf\"> ISI Interpolation </a><br />.","returns":"An object of type <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","exception-T:System.ArgumentException":"Throwed when the type of the generic argument <typeparamref name=\"T\" /> is not in <see cref=\"F:InfinityEngine.Interpolations.Interpolation`1.SupportedTypes\" />.","typeparam-T":"The type of the data to interpolate.","param-startValue":"The starts value of the data.","param-endValue":"The ends value of the data.","param-duration":"The duration of the interpolation.","param-setter":"The action to do with current value during the interpolation."},"params":{"startValue":"T","endValue":"T","duration":"float","setter":"Action<T>"}},{"signature":"InfinityEngine.Infinity.To<T>(T, Action<T>, T, float)","childcount":0,"type":"Method","name":"To<T>","token":"public static Interpolation<T> To<T>(T startValue, Action<T> setter, T endValue, float duration)","scope":"InfinityEngine.Infinity","comments":{"summary":"Interpolates smoothly the value of the variable of type <typeparamref name=\"T\" /> between <paramref name=\"startValue\" /> and \n         <paramref name=\"endValue\" /> in <paramref name=\"duration\" /> seconds thanks to <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> class.","remarks":"This code is the same as <see cref=\"M:InfinityEngine.Infinity.To``1(``0,``0,System.Single,System.Action{``0})\" /> excepts that the parameters are not in the same order.","returns":"An object of type <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />.","exception-T:System.ArgumentException":"Throwed when the type of the generic argument <typeparamref name=\"T\" /> is not in <see cref=\"F:InfinityEngine.Interpolations.Interpolation`1.SupportedTypes\" />.","typeparam-T":"The type of the data to interpolate.","param-startValue":"The starts value of the data.","param-setter":"The action to do with current value during the interpolation.","param-endValue":"The ends value of the data.","param-duration":"The duration of the interpolation."},"params":{"startValue":"T","setter":"Action<T>","endValue":"T","duration":"float"}},{"signature":"InfinityEngine.Infinity.StartInterpolation<T>(Interpolation<T>)","childcount":0,"type":"Method","name":"StartInterpolation<T>","token":"internal static void StartInterpolation<T>(Interpolation<T> interpolation)","scope":"InfinityEngine.Infinity","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Infinity.RecycleInterpolation<T>(Interpolation<T>)","childcount":0,"type":"Method","name":"RecycleInterpolation<T>","token":"internal static void RecycleInterpolation<T>(Interpolation<T> interpolation)","scope":"InfinityEngine.Infinity","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Infinity._StartInterpolation<T>(Interpolation<T>)","childcount":0,"type":"Method","name":"_StartInterpolation<T>","token":"private static IEnumerator _StartInterpolation<T>(Interpolation<T> interpolation)","scope":"InfinityEngine.Infinity","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Infinity._EditorStartInterpolation<T>(Interpolation<T>)","childcount":0,"type":"Method","name":"_EditorStartInterpolation<T>","token":"private static IEnumerator _EditorStartInterpolation<T>(Interpolation<T> interpolation)","scope":"InfinityEngine.Infinity","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Infinity.For(float, Action, Action)","childcount":0,"type":"Method","name":"For","token":"public static void For(float duration, Action action, Action callback = null)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do asynchronously the given <paramref name=\"action\" /> during '<paramref name=\"duration\" />' seconds\n          using scaled time (the function does not run if the game is paused 'Time.deltaTime sets to 0'). \n         Unlike a conventional for loop, this program runs asynchronously and does not block the program.","example":"Example 1. <br />\n        \n         The following code is an example of use of this method without callback action : <br />\n         <code>\n         Infinity.For(5, ()=&gt;{\n             if(!Input.GetKey(KeyCode.Space))\n                 Debug.Log(\"Please keep your finger in space key\");\n         });\n         </code>\n        \n         This code checks during 5 seconds if user press on space key and print a message if the user don't press space key.<br />\n        \n         Example 2. <br />\n        \n         The following code is an example of use of this method with callback action : <br />\n                     <code>\n         Infinity.For(\n                 duration:5,\n                 action:()=&gt;{\n                     if(!Input.GetKey(KeyCode.Space))\n                         Debug.Log(\"Please keep your finger in space key\");\n                 },\n                 callback:()=&gt;{\n                     Debug.Log(\"This is a callback message showed after 5 seconds\");\n                 }\n             );\n                     </code>\n           This code do the same think that the first except that it show a callback message after 5 seconds.","remarks":"The action is not executed only one time.","param-duration":"The duration of the action","param-action":"The action","param-callback":"Optional callback action at the end"},"params":{"duration":"float","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity.ForRealTime(float, Action, Action)","childcount":0,"type":"Method","name":"ForRealTime","token":"public static void ForRealTime(float duration, Action action, Action callback = null)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do asynchronously the given <paramref name=\"action\" /> during '<paramref name=\"duration\" />' seconds using unscaled time\n         (the function run even if the game is paused 'Time.deltaTime sets to 0'). \n         Unlike a conventional for loop, this program runs asynchronously and does not block the program.","remarks":"The action is not executed only one time.","param-duration":"The duration of the action","param-action":"The action","param-callback":"Optional callback action at the end"},"params":{"duration":"float","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity._DoFor(float, Action, Action)","childcount":0,"type":"Method","name":"_DoFor","token":"private IEnumerator _DoFor(float time, Action action, Action callback)","scope":"InfinityEngine.Infinity","params":{"time":"float","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity._DoForRealTime(float, Action, Action)","childcount":0,"type":"Method","name":"_DoForRealTime","token":"private IEnumerator _DoForRealTime(float time, Action action, Action callback)","scope":"InfinityEngine.Infinity","params":{"time":"float","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity.After(float, Action)","childcount":0,"type":"Method","name":"After","token":"public static void After(float delay, Action action)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do the given <paramref name=\"action\" /> after '<paramref name=\"delay\" />' seconds\n         using scaled time (the function does not run if the game is paused 'Time.deltaTime sets to 0').","example":"The following code is an example of use of this method : \n                     <code>\n            Infinity.After(5, ()=&gt;{\n                Debug.Log(\"This is a message showed after 5 seconds\");\n            });\n                     </code>\n                     This code shows the message 'This is a message showed after 5 seconds' after 5 seconds.","remarks":"You can use this method in a single line like : \n         <code> \n             Infinity.After(5 ,() =&gt; Debug.Log(\"This is a message showed after 5 seconds\") ); \n         </code>","param-delay":"Action delay","param-action":"Action to do after the delay"},"params":{"delay":"float","action":"Action"}},{"signature":"InfinityEngine.Infinity.AfterRealTime(float, Action)","childcount":0,"type":"Method","name":"AfterRealTime","token":"public static void AfterRealTime(float delay, Action action)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do the given <paramref name=\"action\" /> after '<paramref name=\"delay\" />' seconds \n         using unscaled time (the function run even if the game is paused 'Time.deltaTime sets to 0').","param-delay":"Action delay","param-action":"Action to do after the delay"},"params":{"delay":"float","action":"Action"}},{"signature":"InfinityEngine.Infinity._DoAfter(float, Action)","childcount":0,"type":"Method","name":"_DoAfter","token":"private IEnumerator _DoAfter(float delay, Action action)","scope":"InfinityEngine.Infinity","params":{"delay":"float","action":"Action"}},{"signature":"InfinityEngine.Infinity._DoAfterRealTime(float, Action)","childcount":0,"type":"Method","name":"_DoAfterRealTime","token":"private IEnumerator _DoAfterRealTime(float delay, Action action)","scope":"InfinityEngine.Infinity","params":{"delay":"float","action":"Action"}},{"signature":"InfinityEngine.Infinity.While(Func<bool>, Action, Action)","childcount":0,"type":"Method","name":"While","token":"public static void While(Func<bool> predicate, Action action, Action callback = null)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do asynchronously the given <paramref name=\"action\" /> while the given <paramref name=\"predicate\" /> is <c>true</c>.\n         Unlike a conventional while loop, this program runs asynchronously and does not block the program.","example":"The following code is an example of use of this method : \n             <code>    \n                 Infinity.While(\n                     predicate:()=&gt;{ return !Input.GetKey(KeyCode.Space); }, \n                     action:()=&gt;{\n                         Debug.Log(\"Please press on space key to exit\");\n                     }, \n                     callback:()=&gt;{\n                          Application.Quit();\n                     });\n             </code>\n         This code displays \"Please press on space key to exit\" while the space key is not pressed and quit the application when the key is pressed.","remarks":"You can use this method in a single line like : \n         <code> \n             Infinity.While(() =&gt; !Input.GetKey(KeyCode.Space) ,() =&gt; Debug.Log(\"Please press on space key to exit\"), Application.Quit ); \n         </code>\n         Like <see cref=\"M:InfinityEngine.Infinity.For(System.Single,System.Action,System.Action)\" /> method, you can use a <paramref name=\"callback\" /> action after the end of this method.","param-predicate":"The given predicate","param-action":"Action to do","param-callback":"Optional callback action"},"params":{"predicate":"Func<bool>","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity._DoWhile(Func<bool>, Action, Action)","childcount":0,"type":"Method","name":"_DoWhile","token":"private IEnumerator _DoWhile(Func<bool> predicate, Action action, Action callback)","scope":"InfinityEngine.Infinity","params":{"predicate":"Func<bool>","action":"Action","callback":"Action"}},{"signature":"InfinityEngine.Infinity.When(Func<bool>, Action)","childcount":0,"type":"Method","name":"When","token":"public static void When(Func<bool> predicate, Action action)","scope":"InfinityEngine.Infinity","comments":{"summary":"Checks asynchronously when the given <paramref name=\"predicate\" /> is <c>true</c>. an do the given <paramref name=\"action\" /> when the predicate is <c>true</c>.","example":"The following code is an example of use of this method : \n             <code>    \n                 Infinity.When(\n                     predicate:()=&gt;{ return Input.GetKey(KeyCode.Space); }, \n                     action:()=&gt;{\n                         Debug.Log(\"The game is started\");\n                     });\n             </code>\n         This code displays \"The game is started\" when the space key is pressed.\n         <remarks>\n         You can use this method in a single line like : \n         <code> \n             Infinity.When(() =&gt; Input.GetKey(KeyCode.Space) ,() =&gt; Debug.Log(\"The game is started\") ); \n         </code>\n         </remarks>","param-predicate":"The given predicate","param-action":"Action to do"},"params":{"predicate":"Func<bool>","action":"Action"}},{"signature":"InfinityEngine.Infinity._DoWhen(Func<bool>, Action)","childcount":0,"type":"Method","name":"_DoWhen","token":"private IEnumerator _DoWhen(Func<bool> predicate, Action action)","scope":"InfinityEngine.Infinity","params":{"predicate":"Func<bool>","action":"Action"}},{"signature":"InfinityEngine.Infinity.SlowMotion(float, int, Action)","childcount":0,"type":"Method","name":"SlowMotion","token":"public static void SlowMotion(float duration, int scaleFactor = 2, Action callback = null)","scope":"InfinityEngine.Infinity","comments":{"summary":"Makes a slow motion effect by changing the time scale of the application.","param-duration":"Slow motion duration","param-scaleFactor":"Time scale will be divided by this value (2 by default)","param-callback":"Optional callback action"},"params":{"duration":"float","scaleFactor":"int","callback":"Action"}},{"signature":"InfinityEngine.Infinity.RandomColor()","childcount":0,"type":"Method","name":"RandomColor","token":"public static Color RandomColor()","scope":"InfinityEngine.Infinity","comments":{"summary":"Returns a random color","returns":"Random color"}},{"signature":"InfinityEngine.Infinity.RandomColor(float, float, float, float)","childcount":0,"type":"Method","name":"RandomColor","token":"public static Color RandomColor(float maxR, float maxG, float maxB, float minA = 1f)","scope":"InfinityEngine.Infinity","comments":{"summary":"Returns a random color","returns":"Random Color","param-maxR":"Max random value for red in the range [0, 1]","param-maxG":"Max random value for green in the range [0, 1]","param-maxB":"Max random value for blue in the range [0, 1]","param-minA":"Max random value for alpha in the range [0, 1]"},"params":{"maxR":"float","maxG":"float","maxB":"float","minA":"float"}},{"signature":"InfinityEngine.Infinity.RandomNumberLessValue(int, int, int)","childcount":0,"type":"Method","name":"RandomNumberLessValue","token":"public static int RandomNumberLessValue(int min, int max, int prohibedValue)","scope":"InfinityEngine.Infinity","comments":{"summary":"Generates a random number in the range [min, max] different from the given <paramref name=\"prohibedValue\" />.","example":"The following code is an example of use of this method : \n             <code>\n                 var random Infinity.RandomNumberLessValue(0, 10, 4);\n                 Debug.Log(random);\n             </code>\n             This code print a random number in the range [0, 10] different from 4","remarks":"This code return 0 if <paramref name=\"min\" /> == <paramref name=\"max\" /> == <paramref name=\"prohibedValue\" />","returns":"random  number different from the given prohibed value.","param-min":"min value (inclusive)","param-max":"max value (inclusive)","param-prohibedValue":"prohihed value to generate"},"params":{"min":"int","max":"int","prohibedValue":"int"}},{"signature":"InfinityEngine.Infinity.RandomNumberLessValues(int, int, List<int>)","childcount":0,"type":"Method","name":"RandomNumberLessValues","token":"public static int RandomNumberLessValues(int min, int max, List<int> prohibedValues)","scope":"InfinityEngine.Infinity","comments":{"summary":"Generates a random number in the range [min, max] different from the values that are in the given <paramref name=\"prohibedValues\" /> list.","example":"The following code is an example of use of this method : \n             <code>\n                 var random = Infinity.RandomNumberLessValues(0, 10, new List&lt;int&gt;(){1,3,5,7,9});\n                 Debug.Log(random);\n             </code>\n             This code print a random number that is even between [0, 10]","remarks":"This code return 0 if <paramref name=\"min\" /> == <paramref name=\"max\" /> or if all number in the range [min, max] are in <paramref name=\"prohibedValues\" /> list.","returns":"random number different from the given prohibed values.","param-min":"min value (inclusive)","param-max":"max value (inclusive)","param-prohibedValues":"list of prohibed values"},"params":{"min":"int","max":"int","prohibedValues":"List<int>"}},{"signature":"InfinityEngine.Infinity.DOCoroutine(IEnumerator)","childcount":0,"type":"Method","name":"DOCoroutine","token":"public static void DOCoroutine(IEnumerator arg)","scope":"InfinityEngine.Infinity","comments":{"summary":"Starts the given coroutine","param-arg":"Coroutine to start"},"params":{"arg":"IEnumerator"}},{"signature":"InfinityEngine.Infinity.DOEditorCoroutine(IEnumerator)","childcount":0,"type":"Method","name":"DOEditorCoroutine","token":"public static EditorCoroutine DOEditorCoroutine(IEnumerator arg)","scope":"InfinityEngine.Infinity","comments":{"summary":"Starts the given coroutine in editor mode","param-arg":"Coroutine to start"},"params":{"arg":"IEnumerator"}},{"signature":"InfinityEngine.Infinity.HexToColor(string)","childcount":0,"type":"Method","name":"HexToColor","token":"public static Color HexToColor(string hex)","scope":"InfinityEngine.Infinity","comments":{"summary":"Creates new Color from the given hexadecimal code","returns":"New <c>Color</c> object from the given hexadecimal code if the hexadecimal code is valid <c>Color</c>.black otherwise.","param-hex":"The hexadecimal code (FFFFFF or #FFFFFF)"},"params":{"hex":"string"}},{"signature":"InfinityEngine.Infinity.IsOnPause()","childcount":0,"type":"Method","name":"IsOnPause","token":"public static bool IsOnPause()","scope":"InfinityEngine.Infinity","comments":{"summary":"Checks if the application is on pause.","remarks":"This method checks if the value of <c>Time.timeScale</c>  is set to 0:","returns":"<c>true</c> if <c>Time.timeScale</c> is set to 0 <c>false</c> otherwise."}},{"signature":"InfinityEngine.Infinity.LoadLevelAfterDelay(string, float)","childcount":0,"type":"Method","name":"LoadLevelAfterDelay","token":"public static void LoadLevelAfterDelay(string level, float delay)","scope":"InfinityEngine.Infinity","comments":{"summary":"Loads the level in parameter after <paramref name=\"delay\" /> seconds","param-level":"the name of the level to load","param-delay":"loading delay"},"params":{"level":"string","delay":"float"}},{"signature":"InfinityEngine.Infinity._LoadLevelAfterDelays(string, float)","childcount":0,"type":"Method","name":"_LoadLevelAfterDelays","token":"private static IEnumerator _LoadLevelAfterDelays(string level, float delay)","scope":"InfinityEngine.Infinity","params":{"level":"string","delay":"float"}},{"signature":"InfinityEngine.Infinity.AddPauseListener(Button, Action, Action)","childcount":0,"type":"Method","name":"AddPauseListener","token":"public static void AddPauseListener(Button pauseBtn, Action onPauseIn, Action onPauseOut)","scope":"InfinityEngine.Infinity","comments":{"summary":"Adds an event listener to <paramref name=\"pauseBtn\" />.<para> </para>\n          When the button is clicked, the function invokes the delegate <paramref name=\"onPauseIn\" /> if <see cref=\"P:InfinityEngine.Infinity.IsPaused\" /> return <c>true</c><para> </para>\n          otherwise it invokes the delegate <paramref name=\"onPauseOut\" />.","param-pauseBtn":"The button which will pause the game","param-onPauseIn":"Action to do when the application is on pause","param-onPauseOut":"Action to do when the pause finish"},"params":{"pauseBtn":"Button","onPauseIn":"Action","onPauseOut":"Action"}},{"signature":"InfinityEngine.Infinity.AddPauseListener(Button, Button, Action, Action)","childcount":0,"type":"Method","name":"AddPauseListener","token":"public static void AddPauseListener(Button pauseBtn, Button resumeBtn, Action onPauseIn, Action onPauseOut)","scope":"InfinityEngine.Infinity","comments":{"summary":"Adds an event listener to <paramref name=\"pauseBtn\" /> and <paramref name=\"resumeBtn\" />.<para> </para>\n          When the <paramref name=\"pauseBtn\" /> is clicked, the function invokes the delegate <paramref name=\"onPauseIn\" />.<para> </para>\n          When the <paramref name=\"resumeBtn\" /> is clicked,it invokes the delegate <paramref name=\"onPauseOut\" />.","param-pauseBtn":"Pause button","param-resumeBtn":"Resume button","param-onPauseIn":"Action to do when the application is on pause","param-onPauseOut":"Action to do when the pause finish"},"params":{"pauseBtn":"Button","resumeBtn":"Button","onPauseIn":"Action","onPauseOut":"Action"}},{"signature":"InfinityEngine.Infinity.TestPerformance(int, Action)","childcount":0,"type":"Method","name":"TestPerformance","token":"public static float TestPerformance(int iteration, Action task)","scope":"InfinityEngine.Infinity","comments":{"summary":"Do the given <paramref name=\"task\" /> <paramref name=\"iteration\" /> times and return the time taken by the tasks.","returns":"The time taken by the task","param-iteration":"The number of time to do the task","param-task":"The task"},"params":{"iteration":"int","task":"Action"}},{"signature":"InfinityEngine.InputManager","childcount":29,"type":"Class","name":"InputManager","token":"public class InputManager : Singleton<InputManager> ","scope":"InfinityEngine","comments":{"summary":"Class in charge to handle input in the game"}},{"signature":"InfinityEngine.InputManager.TouchLeft()","childcount":0,"type":"Method","name":"TouchLeft","token":"public delegate void TouchLeft()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.TouchRight()","childcount":0,"type":"Method","name":"TouchRight","token":"public delegate void TouchRight()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.TouchUp()","childcount":0,"type":"Method","name":"TouchUp","token":"public delegate void TouchUp()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.TouchDown()","childcount":0,"type":"Method","name":"TouchDown","token":"public delegate void TouchDown()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.TouchScreen()","childcount":0,"type":"Method","name":"TouchScreen","token":"public delegate void TouchScreen()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.MobileInput","childcount":2,"type":"Enum","name":"MobileInput","token":"public enum MobileInput ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.MobileInput.SWIP","childcount":0,"type":"EnumValue","name":"SWIP","token":"SWIP","scope":"InfinityEngine.InputManager.MobileInput"},{"signature":"InfinityEngine.InputManager.MobileInput.TAP","childcount":0,"type":"EnumValue","name":"TAP","token":"TAP","scope":"InfinityEngine.InputManager.MobileInput"},{"signature":"InfinityEngine.InputManager.BLOCK_INPUT","childcount":0,"type":"Field","name":"BLOCK_INPUT","token":"public bool BLOCK_INPUT ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.mobileInput","childcount":0,"type":"Field","name":"mobileInput","token":"private MobileInput mobileInput ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.firstTouch","childcount":0,"type":"Field","name":"firstTouch","token":"private Vector3 firstTouch ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.lastTouch","childcount":0,"type":"Field","name":"lastTouch","token":"private Vector3 lastTouch ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.dragDistance","childcount":0,"type":"Field","name":"dragDistance","token":"private float dragDistance ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.touchPositions","childcount":0,"type":"Field","name":"touchPositions","token":"private List<Vector3> touchPositions ","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.OnTouchLeft","childcount":0,"type":"Field","name":"OnTouchLeft","token":"public static event TouchLeft OnTouchLeft ","scope":"InfinityEngine.InputManager","comments":{"summary":"Event trigger when touching the screen on the left part"}},{"signature":"InfinityEngine.InputManager.OnTouchRight","childcount":0,"type":"Field","name":"OnTouchRight","token":"public static event TouchRight OnTouchRight ","scope":"InfinityEngine.InputManager","comments":{"summary":"Event trigger when touching the screen on the right part"}},{"signature":"InfinityEngine.InputManager.OnTouchUp","childcount":0,"type":"Field","name":"OnTouchUp","token":"public static event TouchUp OnTouchUp ","scope":"InfinityEngine.InputManager","comments":{"summary":"Event trigger when touching the screen on the top part (not used here but you can use it )"}},{"signature":"InfinityEngine.InputManager.OnTouchDown","childcount":0,"type":"Field","name":"OnTouchDown","token":"public static event TouchDown OnTouchDown ","scope":"InfinityEngine.InputManager","comments":{"summary":"Event trigger when touching the screen on the top part (not used here but you can use it )"}},{"signature":"InfinityEngine.InputManager.OnTouchScreen","childcount":0,"type":"Field","name":"OnTouchScreen","token":"public static event TouchScreen OnTouchScreen ","scope":"InfinityEngine.InputManager","comments":{"summary":"Event trigger when touching the screen"}},{"signature":"InfinityEngine.InputManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.Update()","childcount":0,"type":"Method","name":"Update","token":"private void Update()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.SwipDetection()","childcount":0,"type":"Method","name":"SwipDetection","token":"private void SwipDetection()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.TapDetection()","childcount":0,"type":"Method","name":"TapDetection","token":"private void TapDetection()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager._OnTouchScreen()","childcount":0,"type":"Method","name":"_OnTouchScreen","token":"private void _OnTouchScreen()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager._OnTouchLeft()","childcount":0,"type":"Method","name":"_OnTouchLeft","token":"private void _OnTouchLeft()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager._OnTouchRight()","childcount":0,"type":"Method","name":"_OnTouchRight","token":"private void _OnTouchRight()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager._OnTouchUp()","childcount":0,"type":"Method","name":"_OnTouchUp","token":"private void _OnTouchUp()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager._OnTouchDown()","childcount":0,"type":"Method","name":"_OnTouchDown","token":"private void _OnTouchDown()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.SetMobileInputType(MobileInput)","childcount":0,"type":"Method","name":"SetMobileInputType","token":"public static void SetMobileInputType(MobileInput type)","scope":"InfinityEngine.InputManager","params":{"type":"MobileInput"}},{"signature":"InfinityEngine.InputManager.OnGameStarted()","childcount":0,"type":"Method","name":"OnGameStarted","token":"private void OnGameStarted()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.InputManager.OnGameEnded()","childcount":0,"type":"Method","name":"OnGameEnded","token":"private void OnGameEnded()","scope":"InfinityEngine.InputManager"},{"signature":"InfinityEngine.IKeyValue","childcount":3,"type":"Interface","name":"IKeyValue","token":"public interface IKeyValue ","scope":"InfinityEngine","comments":{"summary":"Base interface of all KeyValue classes."}},{"signature":"InfinityEngine.IKeyValue.Key","childcount":0,"type":"Property","name":"Key","token":"string Key { get; set; }","scope":"InfinityEngine.IKeyValue","comments":{"summary":"The key of the encapsulated object."}},{"signature":"InfinityEngine.IKeyValue.Obj","childcount":0,"type":"Property","name":"Obj","token":"object Obj { get; }","scope":"InfinityEngine.IKeyValue","comments":{"summary":"The encapsulated object . (You have to cast it)"}},{"signature":"InfinityEngine.IKeyValue.IsMissing","childcount":0,"type":"Property","name":"IsMissing","token":"bool IsMissing { get; }","scope":"InfinityEngine.IKeyValue","comments":{"summary":"Checks if the encapsulated object is missing"}},{"signature":"InfinityEngine.KeyValue<T>","childcount":8,"type":"Class","name":"KeyValue<T>","token":"public class KeyValue<T> : IKeyValue ","scope":"InfinityEngine"},{"signature":"InfinityEngine.KeyValue<T>.key","childcount":0,"type":"Field","name":"key","token":"private string key ","scope":"InfinityEngine.KeyValue<T>"},{"signature":"InfinityEngine.KeyValue<T>.value","childcount":0,"type":"Field","name":"value","token":"private T value ","scope":"InfinityEngine.KeyValue<T>"},{"signature":"InfinityEngine.KeyValue<T>.Key","childcount":0,"type":"Property","name":"Key","token":"public string Key { get; set; }","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"The key"}},{"signature":"InfinityEngine.KeyValue<T>.Obj","childcount":0,"type":"Property","name":"Obj","token":"public object Obj { get; }","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"The encapsulated object. (You must cast it)"}},{"signature":"InfinityEngine.KeyValue<T>.IsMissing","childcount":0,"type":"Property","name":"IsMissing","token":"public bool IsMissing { get; }","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"Checks if the object linked to this is missing"}},{"signature":"InfinityEngine.KeyValue<T>.Value","childcount":0,"type":"Property","name":"Value","token":"public T Value { get; set; }","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"The encapsulated object"}},{"signature":"InfinityEngine.KeyValue<T>.KeyValue(string, T)","childcount":0,"type":"Constructor","name":"KeyValue","token":"public  KeyValue(string key, T value)","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"Creates new instance of <c>KeyPair</c>","param-key":"the key","param-value":"the value"},"params":{"key":"string","value":"T"}},{"signature":"InfinityEngine.KeyValue<T>.operator T(KeyValue<T>)","childcount":0,"type":"Operator","name":"operator T","token":"public static implicit operator T(KeyValue<T> arg)","scope":"InfinityEngine.KeyValue<T>","comments":{"summary":"Cast implicitly this object as an object of type T","param-arg":"this"},"params":{"arg":"KeyValue<T>"}},{"signature":"InfinityEngine.IntKV","childcount":2,"type":"Class","name":"IntKV","token":"public class IntKV : KeyValue<int> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.IntKV.IntKV(string, int)","childcount":0,"type":"Constructor","name":"IntKV","token":"public  IntKV(string key, int value): base(key, value)","scope":"InfinityEngine.IntKV","comments":{"summary":"Creates new instance of <c>IntKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"int"}},{"signature":"InfinityEngine.IntKV.operator int(IntKV)","childcount":0,"type":"Operator","name":"operator int","token":"public static implicit operator int(IntKV arg)","scope":"InfinityEngine.IntKV","comments":{"summary":"Allows to use this object like an integer object (only for get purpose)","param-arg":"this"},"params":{"arg":"IntKV"}},{"signature":"InfinityEngine.FloatKV","childcount":1,"type":"Class","name":"FloatKV","token":"public class FloatKV : KeyValue<float> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.FloatKV.FloatKV(string, float)","childcount":0,"type":"Constructor","name":"FloatKV","token":"public  FloatKV(string key, float value): base(key, value)","scope":"InfinityEngine.FloatKV","comments":{"summary":"Creates new instance of <c>FloatKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"float"}},{"signature":"InfinityEngine.LongKV","childcount":1,"type":"Class","name":"LongKV","token":"public class LongKV : KeyValue<long> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.LongKV.LongKV(string, long)","childcount":0,"type":"Constructor","name":"LongKV","token":"public  LongKV(string key, long value): base(key, value)","scope":"InfinityEngine.LongKV","comments":{"summary":"Creates new instance of <c>LongKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"long"}},{"signature":"InfinityEngine.BoolKV","childcount":2,"type":"Class","name":"BoolKV","token":"public class BoolKV : KeyValue<bool> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.BoolKV.BoolKV(string, bool)","childcount":0,"type":"Constructor","name":"BoolKV","token":"public  BoolKV(string key, bool value): base(key, value)","scope":"InfinityEngine.BoolKV","comments":{"summary":"Creates new instance of <c>BoolKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"bool"}},{"signature":"InfinityEngine.BoolKV.operator bool(BoolKV)","childcount":0,"type":"Operator","name":"operator bool","token":"public static implicit operator bool(BoolKV arg)","scope":"InfinityEngine.BoolKV","comments":{"summary":"Allows to use this object like an bool object (only for get purpose)","param-arg":"this"},"params":{"arg":"BoolKV"}},{"signature":"InfinityEngine.StringKV","childcount":1,"type":"Class","name":"StringKV","token":"public class StringKV : KeyValue<string> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.StringKV.StringKV(string, string)","childcount":0,"type":"Constructor","name":"StringKV","token":"public  StringKV(string key, string value): base(key, value)","scope":"InfinityEngine.StringKV","comments":{"summary":"Creates new instance of <c>StringKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"string"}},{"signature":"InfinityEngine.Vector2KV","childcount":1,"type":"Class","name":"Vector2KV","token":"public class Vector2KV : KeyValue<Vector2> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Vector2KV.Vector2KV(string, Vector2)","childcount":0,"type":"Constructor","name":"Vector2KV","token":"public  Vector2KV(string key, Vector2 value): base(key, value)","scope":"InfinityEngine.Vector2KV","comments":{"summary":"Creates new instance of <c>Vector2KeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"Vector2"}},{"signature":"InfinityEngine.Vector3KV","childcount":1,"type":"Class","name":"Vector3KV","token":"public class Vector3KV : KeyValue<Vector3> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Vector3KV.Vector3KV(string, Vector3)","childcount":0,"type":"Constructor","name":"Vector3KV","token":"public  Vector3KV(string key, Vector3 value): base(key, value)","scope":"InfinityEngine.Vector3KV","comments":{"summary":"Creates new instance of <c>Vector3KeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"Vector3"}},{"signature":"InfinityEngine.Vector4KV","childcount":1,"type":"Class","name":"Vector4KV","token":"public class Vector4KV : KeyValue<Vector4> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Vector4KV.Vector4KV(string, Vector4)","childcount":0,"type":"Constructor","name":"Vector4KV","token":"public  Vector4KV(string key, Vector4 value): base(key, value)","scope":"InfinityEngine.Vector4KV","comments":{"summary":"Creates new instance of <c>Vector4KeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"Vector4"}},{"signature":"InfinityEngine.QuaternionKV","childcount":1,"type":"Class","name":"QuaternionKV","token":"public class QuaternionKV : KeyValue<Quaternion> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.QuaternionKV.QuaternionKV(string, Quaternion)","childcount":0,"type":"Constructor","name":"QuaternionKV","token":"public  QuaternionKV(string key, Quaternion value): base(key, value)","scope":"InfinityEngine.QuaternionKV","comments":{"summary":"Creates new instance of <c>QuaternionKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"Quaternion"}},{"signature":"InfinityEngine.ColorKV","childcount":1,"type":"Class","name":"ColorKV","token":"public class ColorKV : KeyValue<Color> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.ColorKV.ColorKV(string, Color)","childcount":0,"type":"Constructor","name":"ColorKV","token":"public  ColorKV(string key, Color value): base(key, value)","scope":"InfinityEngine.ColorKV","comments":{"summary":"Creates new instance of <c>ColorKeyPair</c>","param-key":"this key","param-value":"this value"},"params":{"key":"string","value":"Color"}},{"signature":"InfinityEngine.AnimationClipKV","childcount":1,"type":"Class","name":"AnimationClipKV","token":"public class AnimationClipKV : KeyValue<AnimationClip> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.AnimationClipKV.AnimationClipKV(string, AnimationClip)","childcount":0,"type":"Constructor","name":"AnimationClipKV","token":"public  AnimationClipKV(string name, AnimationClip value): base(name, value)","scope":"InfinityEngine.AnimationClipKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"AnimationClip"}},{"signature":"InfinityEngine.AudioClipKV","childcount":1,"type":"Class","name":"AudioClipKV","token":"public class AudioClipKV : KeyValue<AudioClip> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.AudioClipKV.AudioClipKV(string, AudioClip)","childcount":0,"type":"Constructor","name":"AudioClipKV","token":"public  AudioClipKV(string name, AudioClip value): base(name, value)","scope":"InfinityEngine.AudioClipKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"AudioClip"}},{"signature":"InfinityEngine.FontKV","childcount":1,"type":"Class","name":"FontKV","token":"public class FontKV : KeyValue<Font> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.FontKV.FontKV(string, Font)","childcount":0,"type":"Constructor","name":"FontKV","token":"public  FontKV(string name, Font value): base(name, value)","scope":"InfinityEngine.FontKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Font"}},{"signature":"InfinityEngine.GameObjectKV","childcount":1,"type":"Class","name":"GameObjectKV","token":"public class GameObjectKV : KeyValue<GameObject> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.GameObjectKV.GameObjectKV(string, GameObject)","childcount":0,"type":"Constructor","name":"GameObjectKV","token":"public  GameObjectKV(string name, GameObject value): base(name, value)","scope":"InfinityEngine.GameObjectKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"GameObject"}},{"signature":"InfinityEngine.GUISkinKV","childcount":1,"type":"Class","name":"GUISkinKV","token":"public class GUISkinKV : KeyValue<GUISkin> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.GUISkinKV.GUISkinKV(string, GUISkin)","childcount":0,"type":"Constructor","name":"GUISkinKV","token":"public  GUISkinKV(string name, GUISkin value): base(name, value)","scope":"InfinityEngine.GUISkinKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"GUISkin"}},{"signature":"InfinityEngine.MaterialKV","childcount":1,"type":"Class","name":"MaterialKV","token":"public class MaterialKV : KeyValue<Material> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.MaterialKV.MaterialKV(string, Material)","childcount":0,"type":"Constructor","name":"MaterialKV","token":"public  MaterialKV(string name, Material value): base(name, value)","scope":"InfinityEngine.MaterialKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Material"}},{"signature":"InfinityEngine.MeshKV","childcount":1,"type":"Class","name":"MeshKV","token":"public class MeshKV : KeyValue<Mesh> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.MeshKV.MeshKV(string, Mesh)","childcount":0,"type":"Constructor","name":"MeshKV","token":"public  MeshKV(string name, Mesh value): base(name, value)","scope":"InfinityEngine.MeshKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Mesh"}},{"signature":"InfinityEngine.PhysicMaterialKV","childcount":1,"type":"Class","name":"PhysicMaterialKV","token":"public class PhysicMaterialKV : KeyValue<PhysicMaterial> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.PhysicMaterialKV.PhysicMaterialKV(string, PhysicMaterial)","childcount":0,"type":"Constructor","name":"PhysicMaterialKV","token":"public  PhysicMaterialKV(string name, PhysicMaterial value): base(name, value)","scope":"InfinityEngine.PhysicMaterialKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"PhysicMaterial"}},{"signature":"InfinityEngine.PhysicsMaterial2DKV","childcount":1,"type":"Class","name":"PhysicsMaterial2DKV","token":"public class PhysicsMaterial2DKV : KeyValue<PhysicsMaterial2D> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.PhysicsMaterial2DKV.PhysicsMaterial2DKV(string, PhysicsMaterial2D)","childcount":0,"type":"Constructor","name":"PhysicsMaterial2DKV","token":"public  PhysicsMaterial2DKV(string name, PhysicsMaterial2D value): base(name, value)","scope":"InfinityEngine.PhysicsMaterial2DKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"PhysicsMaterial2D"}},{"signature":"InfinityEngine.ShaderKV","childcount":1,"type":"Class","name":"ShaderKV","token":"public class ShaderKV : KeyValue<Shader> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.ShaderKV.ShaderKV(string, Shader)","childcount":0,"type":"Constructor","name":"ShaderKV","token":"public  ShaderKV(string name, Shader value): base(name, value)","scope":"InfinityEngine.ShaderKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Shader"}},{"signature":"InfinityEngine.SpriteKV","childcount":1,"type":"Class","name":"SpriteKV","token":"public class SpriteKV : KeyValue<Sprite> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.SpriteKV.SpriteKV(string, Sprite)","childcount":0,"type":"Constructor","name":"SpriteKV","token":"public  SpriteKV(string name, Sprite value): base(name, value)","scope":"InfinityEngine.SpriteKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Sprite"}},{"signature":"InfinityEngine.TextAssetKV","childcount":1,"type":"Class","name":"TextAssetKV","token":"public class TextAssetKV : KeyValue<TextAsset> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.TextAssetKV.TextAssetKV(string, TextAsset)","childcount":0,"type":"Constructor","name":"TextAssetKV","token":"public  TextAssetKV(string name, TextAsset value): base(name, value)","scope":"InfinityEngine.TextAssetKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"TextAsset"}},{"signature":"InfinityEngine.Texture2DKV","childcount":1,"type":"Class","name":"Texture2DKV","token":"public class Texture2DKV : KeyValue<Texture2D> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Texture2DKV.Texture2DKV(string, Texture2D)","childcount":0,"type":"Constructor","name":"Texture2DKV","token":"public  Texture2DKV(string name, Texture2D value): base(name, value)","scope":"InfinityEngine.Texture2DKV","comments":{"summary":"Creates new instance of this class.","param-name":"The name of the resource","param-value":"The object linked to this resource."},"params":{"name":"string","value":"Texture2D"}},{"signature":"InfinityEngine.MinMax","childcount":2,"type":"Struct","name":"MinMax","token":"public struct MinMax ","scope":"InfinityEngine"},{"signature":"InfinityEngine.MinMax.min","childcount":0,"type":"Field","name":"min","token":"public float min ","scope":"InfinityEngine.MinMax"},{"signature":"InfinityEngine.MinMax.max","childcount":0,"type":"Field","name":"max","token":"public float max ","scope":"InfinityEngine.MinMax"},{"signature":"InfinityEngine.Scene","childcount":3,"type":"Class","name":"Scene","token":"public class Scene ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Scene.sceneAsset","childcount":0,"type":"Field","name":"sceneAsset","token":"private Object sceneAsset ","scope":"InfinityEngine.Scene"},{"signature":"InfinityEngine.Scene.SceneName","childcount":0,"type":"Property","name":"SceneName","token":"public string SceneName { get; }","scope":"InfinityEngine.Scene","comments":{"summary":"The name of the scene"}},{"signature":"InfinityEngine.Scene.operator string(Scene)","childcount":0,"type":"Operator","name":"operator string","token":"public static implicit operator string(Scene scene)","scope":"InfinityEngine.Scene","comments":{"summary":"Convert automatically this <see cref=\"T:InfinityEngine.Scene\" /> object to string object \n         (allows to use this object with Unity <see cref=\"T:UnityEngine.SceneManagement.SceneManager\" /> methods."},"params":{"scene":"Scene"}},{"signature":"InfinityEngine.SceneLoader","childcount":6,"type":"Class","name":"SceneLoader","token":"public class SceneLoader : MonoBehaviour ","scope":"InfinityEngine","comments":{"summary":"Simple scene loader script"}},{"signature":"InfinityEngine.SceneLoader.scene","childcount":0,"type":"Field","name":"scene","token":"public Scene scene ","scope":"InfinityEngine.SceneLoader","comments":{"summary":"The scene to load"}},{"signature":"InfinityEngine.SceneLoader.delay","childcount":0,"type":"Field","name":"delay","token":"public float delay ","scope":"InfinityEngine.SceneLoader","comments":{"summary":"Scene loading delay"}},{"signature":"InfinityEngine.SceneLoader.loadOnStart","childcount":0,"type":"Field","name":"loadOnStart","token":"public bool loadOnStart ","scope":"InfinityEngine.SceneLoader","comments":{"summary":"Load the scene on start"}},{"signature":"InfinityEngine.SceneLoader.Load()","childcount":0,"type":"Method","name":"Load","token":"public void Load()","scope":"InfinityEngine.SceneLoader","comments":{"summary":"Load the scene"}},{"signature":"InfinityEngine.SceneLoader.OnValidate()","childcount":0,"type":"Method","name":"OnValidate","token":"private void OnValidate()","scope":"InfinityEngine.SceneLoader"},{"signature":"InfinityEngine.SceneLoader.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"InfinityEngine.SceneLoader"},{"signature":"InfinityEngine.SoundManager","childcount":40,"type":"Class","name":"SoundManager","token":"public class SoundManager : Singleton<SoundManager> ","scope":"InfinityEngine"},{"signature":"InfinityEngine.SoundManager.MusicOnPref","childcount":0,"type":"Field","name":"MusicOnPref","token":"private const string MusicOnPref = \"___MUSIC_ON___\";","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.MusicVolumePref","childcount":0,"type":"Field","name":"MusicVolumePref","token":"private const string MusicVolumePref = \"___MUSIC_VOLUME___\";","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.EffectOnPref","childcount":0,"type":"Field","name":"EffectOnPref","token":"private const string EffectOnPref = \"___EFFECT_ON___\";","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.EffectVolumePref","childcount":0,"type":"Field","name":"EffectVolumePref","token":"private const string EffectVolumePref = \"___EFFECT_VOLUME___\";","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.CurrentMusicPref","childcount":0,"type":"Field","name":"CurrentMusicPref","token":"private const string CurrentMusicPref = \"___CURRENT_MUSIC___\";","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.CurrentMusicIndex","childcount":0,"type":"Field","name":"CurrentMusicIndex","token":"private static int CurrentMusicIndex ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.mSonoreEffectSource","childcount":0,"type":"Field","name":"mSonoreEffectSource","token":"private AudioSource mSonoreEffectSource ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.mMusicSource","childcount":0,"type":"Field","name":"mMusicSource","token":"private AudioSource mMusicSource ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.musics","childcount":0,"type":"Field","name":"musics","token":"private List<AudioClip> musics ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.isPlayingOnAwake","childcount":0,"type":"Field","name":"isPlayingOnAwake","token":"private bool isPlayingOnAwake ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.isLoop","childcount":0,"type":"Field","name":"isLoop","token":"private bool isLoop ","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.MusicVolume","childcount":0,"type":"Property","name":"MusicVolume","token":"public static float MusicVolume { get; set; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"The volume of the musics <c>AudioSource</c>"}},{"signature":"InfinityEngine.SoundManager.EffectVolume","childcount":0,"type":"Property","name":"EffectVolume","token":"public static float EffectVolume { get; set; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"The volume of the sonore effects <c>AudioSource</c>"}},{"signature":"InfinityEngine.SoundManager.HasMusic","childcount":0,"type":"Property","name":"HasMusic","token":"private bool HasMusic { get; set; }","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.HasEffect","childcount":0,"type":"Property","name":"HasEffect","token":"private bool HasEffect { get; set; }","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.IsPlayingMusic","childcount":0,"type":"Property","name":"IsPlayingMusic","token":"public static bool IsPlayingMusic { get; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"The current playing status of the musics <c>AudioSource</c>."}},{"signature":"InfinityEngine.SoundManager.IsPlayingEffect","childcount":0,"type":"Property","name":"IsPlayingEffect","token":"public static bool IsPlayingEffect { get; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"The current playing status of the effect <c>AudioSource</c>."}},{"signature":"InfinityEngine.SoundManager.MusicCount","childcount":0,"type":"Property","name":"MusicCount","token":"public static int MusicCount { get; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"The number of musics available."}},{"signature":"InfinityEngine.SoundManager.CurrentMusic","childcount":0,"type":"Property","name":"CurrentMusic","token":"public static AudioClip CurrentMusic { get; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"Music that is playing currently."}},{"signature":"InfinityEngine.SoundManager.Loop","childcount":0,"type":"Property","name":"Loop","token":"public static bool Loop { get; set; }","scope":"InfinityEngine.SoundManager","comments":{"summary":"Is the musics are played in loop?"}},{"signature":"InfinityEngine.SoundManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.OnApplicationQuit()","childcount":0,"type":"Method","name":"OnApplicationQuit","token":"private void OnApplicationQuit()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.OnApplicationPause(bool)","childcount":0,"type":"Method","name":"OnApplicationPause","token":"private void OnApplicationPause(bool pause)","scope":"InfinityEngine.SoundManager","params":{"pause":"bool"}},{"signature":"InfinityEngine.SoundManager.AddListeners(Toggle, Slider, Toggle, Slider)","childcount":0,"type":"Method","name":"AddListeners","token":"public static void AddListeners(Toggle musicToggle, Slider musicSlider, Toggle effectToggle, Slider effectSlider)","scope":"InfinityEngine.SoundManager","comments":{"summary":"Add Listeners to the given buttons","param-musicToggle":"Toggle to control music enable state","param-musicSlider":"Slider to control music volume","param-effectToggle":"Toggle to control effects enable state","param-effectSlider":"Slider to control effects volume"},"params":{"musicToggle":"Toggle","musicSlider":"Slider","effectToggle":"Toggle","effectSlider":"Slider"}},{"signature":"InfinityEngine.SoundManager.AddMusicSource()","childcount":0,"type":"Method","name":"AddMusicSource","token":"private void AddMusicSource()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.PlayMusic()","childcount":0,"type":"Method","name":"PlayMusic","token":"public static void PlayMusic()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Begins Play music if there is music."}},{"signature":"InfinityEngine.SoundManager.AddMusic(AudioClip)","childcount":0,"type":"Method","name":"AddMusic","token":"public static void AddMusic(AudioClip clip)","scope":"InfinityEngine.SoundManager","comments":{"summary":"Add new music","param-clip":"The music"},"params":{"clip":"AudioClip"}},{"signature":"InfinityEngine.SoundManager.PlayMusic(int)","childcount":0,"type":"Method","name":"PlayMusic","token":"public static void PlayMusic(int index)","scope":"InfinityEngine.SoundManager","comments":{"summary":"Play the music at the given index if it exists.","param-index":"index of the music"},"params":{"index":"int"}},{"signature":"InfinityEngine.SoundManager.StopMusic()","childcount":0,"type":"Method","name":"StopMusic","token":"public static void StopMusic()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Stop playing music"}},{"signature":"InfinityEngine.SoundManager.PauseMusic()","childcount":0,"type":"Method","name":"PauseMusic","token":"public static void PauseMusic()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Pause current music if the there a music that is playing."}},{"signature":"InfinityEngine.SoundManager.ResumeMusic()","childcount":0,"type":"Method","name":"ResumeMusic","token":"public static void ResumeMusic()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Disable pause and resume the current music if there is a music."}},{"signature":"InfinityEngine.SoundManager.ShuffleMusics()","childcount":0,"type":"Method","name":"ShuffleMusics","token":"public static void ShuffleMusics()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Shuffle music if there is a musics."}},{"signature":"InfinityEngine.SoundManager.AutoPlay()","childcount":0,"type":"Method","name":"AutoPlay","token":"private IEnumerator AutoPlay()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.DOOnMusic()","childcount":0,"type":"Method","name":"DOOnMusic","token":"private void DOOnMusic()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.DOOffMusic()","childcount":0,"type":"Method","name":"DOOffMusic","token":"private void DOOffMusic()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.AddEffectSource()","childcount":0,"type":"Method","name":"AddEffectSource","token":"private void AddEffectSource()","scope":"InfinityEngine.SoundManager"},{"signature":"InfinityEngine.SoundManager.PlayEffect(AudioClip)","childcount":0,"type":"Method","name":"PlayEffect","token":"public static void PlayEffect(AudioClip clip)","scope":"InfinityEngine.SoundManager","comments":{"summary":"Play the given <paramref name=\"clip\"/> AudioClip","param-clip":"AudioClip to play"},"params":{"clip":"AudioClip"}},{"signature":"InfinityEngine.SoundManager.PlayEffect(AudioClip, Vector3)","childcount":0,"type":"Method","name":"PlayEffect","token":"public static void PlayEffect(AudioClip clip, Vector3 position)","scope":"InfinityEngine.SoundManager","comments":{"summary":"Play the given <paramref name=\"clip\"/> AudioClip in 3D space.","param-clip":"AudioClip to play","param-position":"Position"},"params":{"clip":"AudioClip","position":"Vector3"}},{"signature":"InfinityEngine.SoundManager.DOOnEffects()","childcount":0,"type":"Method","name":"DOOnEffects","token":"private void DOOnEffects()","scope":"InfinityEngine.SoundManager","comments":{"summary":"On sonore effect audio source"}},{"signature":"InfinityEngine.SoundManager.DOOffEffects()","childcount":0,"type":"Method","name":"DOOffEffects","token":"private void DOOffEffects()","scope":"InfinityEngine.SoundManager","comments":{"summary":"Off sonore effect audio source"}},{"signature":"InfinityEngine.SoundManagerUI","childcount":3,"type":"Class","name":"SoundManagerUI","token":"public class SoundManagerUI : MonoBehaviour ","scope":"InfinityEngine","comments":{"summary":"<see cref=\"T:InfinityEngine.SoundManager\" /> user interface."}},{"signature":"InfinityEngine.SoundManagerUI.musicSlider","childcount":0,"type":"Field","name":"musicSlider","token":"public Slider musicSlider ","scope":"InfinityEngine.SoundManagerUI","comments":{"summary":"Music volume slider"}},{"signature":"InfinityEngine.SoundManagerUI.effectSlider","childcount":0,"type":"Field","name":"effectSlider","token":"public Slider effectSlider ","scope":"InfinityEngine.SoundManagerUI","comments":{"summary":"Sonore effects volume slider"}},{"signature":"InfinityEngine.SoundManagerUI.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"InfinityEngine.SoundManagerUI"},{"signature":"InfinityEngine.TimerType","childcount":2,"type":"Enum","name":"TimerType","token":"public enum TimerType ","scope":"InfinityEngine","comments":{"summary":"Timer type"}},{"signature":"InfinityEngine.TimerType.Timer","childcount":0,"type":"EnumValue","name":"Timer","token":"Timer","scope":"InfinityEngine.TimerType","comments":{"summary":"Timer"}},{"signature":"InfinityEngine.TimerType.ProgressBar","childcount":0,"type":"EnumValue","name":"ProgressBar","token":"ProgressBar","scope":"InfinityEngine.TimerType","comments":{"summary":"ProgressBar"}},{"signature":"InfinityEngine.Timer","childcount":28,"type":"Class","name":"Timer","token":"public class Timer : MonoBehaviour ","scope":"InfinityEngine"},{"signature":"InfinityEngine.Timer.__help__","childcount":0,"type":"Field","name":"__help__","token":"private bool __help__ ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.type","childcount":0,"type":"Field","name":"type","token":"private TimerType type ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.progressBar","childcount":0,"type":"Field","name":"progressBar","token":"private Image progressBar ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.label","childcount":0,"type":"Field","name":"label","token":"private Text label ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.maxValue","childcount":0,"type":"Field","name":"maxValue","token":"private float maxValue ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.reverse","childcount":0,"type":"Field","name":"reverse","token":"private bool reverse ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.startOnAwake","childcount":0,"type":"Field","name":"startOnAwake","token":"private bool startOnAwake ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.autoRestart","childcount":0,"type":"Field","name":"autoRestart","token":"private bool autoRestart ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.changeColor","childcount":0,"type":"Field","name":"changeColor","token":"private bool changeColor ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.startsColor","childcount":0,"type":"Field","name":"startsColor","token":"private Color startsColor ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.endsColor","childcount":0,"type":"Field","name":"endsColor","token":"private Color endsColor ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.remainingTime","childcount":0,"type":"Field","name":"remainingTime","token":"private float remainingTime ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.rate","childcount":0,"type":"Field","name":"rate","token":"private float rate ","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.onEnd","childcount":0,"type":"Field","name":"onEnd","token":"public Action onEnd ","scope":"InfinityEngine.Timer","comments":{"summary":"Action to do when the timer finish"}},{"signature":"InfinityEngine.Timer.RemainingTime","childcount":0,"type":"Property","name":"RemainingTime","token":"public float RemainingTime { get; }","scope":"InfinityEngine.Timer","comments":{"summary":"The remaning time"}},{"signature":"InfinityEngine.Timer.Type","childcount":0,"type":"Property","name":"Type","token":"public TimerType Type { get; set; }","scope":"InfinityEngine.Timer","comments":{"summary":"The type of the timer"}},{"signature":"InfinityEngine.Timer.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Timer.NewTimer(Image, float, bool)","childcount":0,"type":"Method","name":"NewTimer","token":"public static Timer NewTimer(Image progress, float maxValue, bool reverse = false)","scope":"InfinityEngine.Timer","comments":{"summary":"Creates new timer","returns":"new Timer","param-progress":"Progress bar image (Must be filled type)","param-maxValue":"Timer max value","param-reverse":"if set to <c>true</c> timer start value will be the max value"},"params":{"progress":"Image","maxValue":"float","reverse":"bool"}},{"signature":"InfinityEngine.Timer.NewTimer(Image, float, Text, bool)","childcount":0,"type":"Method","name":"NewTimer","token":"public static Timer NewTimer(Image progress, float maxValue, Text label, bool reverse = false)","scope":"InfinityEngine.Timer","comments":{"summary":"Creates new timer","returns":"new Timer","param-progress":"Progress bar image (Must be filled type)","param-maxValue":"Timer max value","param-label":"Label that display timer value","param-reverse":"if set to <c>true</c> timer start value will be the max value"},"params":{"progress":"Image","maxValue":"float","label":"Text","reverse":"bool"}},{"signature":"InfinityEngine.Timer.NewTimer(Image, float, Text, Action, bool)","childcount":0,"type":"Method","name":"NewTimer","token":"public static Timer NewTimer(Image progress, float maxValue, Text label, Action callback, bool reverse = false)","scope":"InfinityEngine.Timer","comments":{"summary":"Creates new timer","returns":"new Timer","param-progress":"Progress bar image (Must be filled type)","param-maxValue":"Timer max value","param-label":"Label that display timer value","param-callback":"En callback action","param-reverse":"if set to <c>true</c> timer start value will be the max value"},"params":{"progress":"Image","maxValue":"float","label":"Text","callback":"Action","reverse":"bool"}},{"signature":"InfinityEngine.Timer.StartTimer()","childcount":0,"type":"Method","name":"StartTimer","token":"public void StartTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Starts the timer"}},{"signature":"InfinityEngine.Timer.StopTimer()","childcount":0,"type":"Method","name":"StopTimer","token":"public void StopTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Stops the timer"}},{"signature":"InfinityEngine.Timer.RestartTimer()","childcount":0,"type":"Method","name":"RestartTimer","token":"public void RestartTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Restarts the timer"}},{"signature":"InfinityEngine.Timer.PauseTimer()","childcount":0,"type":"Method","name":"PauseTimer","token":"public void PauseTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Pauses the timer"}},{"signature":"InfinityEngine.Timer.ResumeTimer()","childcount":0,"type":"Method","name":"ResumeTimer","token":"public void ResumeTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Resumes the timer"}},{"signature":"InfinityEngine.Timer.ResetTimer()","childcount":0,"type":"Method","name":"ResetTimer","token":"public void ResetTimer()","scope":"InfinityEngine.Timer","comments":{"summary":"Resets the timer"}},{"signature":"InfinityEngine.Timer.ResetTimer(float)","childcount":0,"type":"Method","name":"ResetTimer","token":"public void ResetTimer(float value)","scope":"InfinityEngine.Timer","comments":{"summary":"Resets the timer","param-value":"new max value"},"params":{"value":"float"}},{"signature":"InfinityEngine.Timer.DoTickTimer()","childcount":0,"type":"Method","name":"DoTickTimer","token":"private IEnumerator DoTickTimer()","scope":"InfinityEngine.Timer"},{"signature":"InfinityEngine.Toast","childcount":18,"type":"Class","name":"Toast","token":"public class Toast : Singleton<Toast> ","scope":"InfinityEngine","comments":{"summary":"Displays message on screen."}},{"signature":"InfinityEngine.Toast.Position","childcount":9,"type":"Enum","name":"Position","token":"public enum Position ","scope":"InfinityEngine.Toast","comments":{"summary":"Screen positions."}},{"signature":"InfinityEngine.Toast.Position.TopLeft","childcount":0,"type":"EnumValue","name":"TopLeft","token":"TopLeft","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.TopRight","childcount":0,"type":"EnumValue","name":"TopRight","token":"TopRight","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.TopCenter","childcount":0,"type":"EnumValue","name":"TopCenter","token":"TopCenter","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.BottomLeft","childcount":0,"type":"EnumValue","name":"BottomLeft","token":"BottomLeft","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.BottomRight","childcount":0,"type":"EnumValue","name":"BottomRight","token":"BottomRight","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.BottomCenter","childcount":0,"type":"EnumValue","name":"BottomCenter","token":"BottomCenter","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.Center","childcount":0,"type":"EnumValue","name":"Center","token":"Center","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.CenterLeft","childcount":0,"type":"EnumValue","name":"CenterLeft","token":"CenterLeft","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.Position.CenterRight","childcount":0,"type":"EnumValue","name":"CenterRight","token":"CenterRight","scope":"InfinityEngine.Toast.Position"},{"signature":"InfinityEngine.Toast.LENGHT_SHORT","childcount":0,"type":"Field","name":"LENGHT_SHORT","token":"public const float LENGHT_SHORT = 3f;","scope":"InfinityEngine.Toast","comments":{"summary":"short duration"}},{"signature":"InfinityEngine.Toast.LENGHT_LONG","childcount":0,"type":"Field","name":"LENGHT_LONG","token":"public const float LENGHT_LONG = 5f;","scope":"InfinityEngine.Toast","comments":{"summary":"long duration"}},{"signature":"InfinityEngine.Toast._Position","childcount":0,"type":"Field","name":"_Position","token":"private Position _Position ","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.position","childcount":0,"type":"Field","name":"position","token":"private Rect position ","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.text","childcount":0,"type":"Field","name":"text","token":"private string text ","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.show","childcount":0,"type":"Field","name":"show","token":"private bool show ","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.style","childcount":0,"type":"Field","name":"style","token":"private GUIStyle style ","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.IsVisible","childcount":0,"type":"Property","name":"IsVisible","token":"public static bool IsVisible { get; }","scope":"InfinityEngine.Toast","comments":{"summary":"Gets a value indicating if the toast is visible on screen."}},{"signature":"InfinityEngine.Toast.Style","childcount":0,"type":"Property","name":"Style","token":"public static GUIStyle Style { get; set; }","scope":"InfinityEngine.Toast","comments":{"summary":"Toast style"}},{"signature":"InfinityEngine.Toast.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.OnGUI()","childcount":0,"type":"Method","name":"OnGUI","token":"private void OnGUI()","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.FindScreenPosition()","childcount":0,"type":"Method","name":"FindScreenPosition","token":"private void FindScreenPosition()","scope":"InfinityEngine.Toast"},{"signature":"InfinityEngine.Toast.MakeText(string)","childcount":0,"type":"Method","name":"MakeText","token":"public static void MakeText(string text)","scope":"InfinityEngine.Toast","comments":{"summary":"Display a message in screen at Bottom-center during 3 secs"},"params":{"text":"string"}},{"signature":"InfinityEngine.Toast.MakeText(string, float)","childcount":0,"type":"Method","name":"MakeText","token":"public static void MakeText(string text, float duration)","scope":"InfinityEngine.Toast","comments":{"summary":"Display a message in screen","param-text":"the message","param-duration":"the message duration"},"params":{"text":"string","duration":"float"}},{"signature":"InfinityEngine.Toast.MakeText(string, Position)","childcount":0,"type":"Method","name":"MakeText","token":"public static void MakeText(string text, Position position)","scope":"InfinityEngine.Toast","comments":{"summary":"Display a message in screen","param-text":"the message","param-position":"message position on screen"},"params":{"text":"string","position":"Position"}},{"signature":"InfinityEngine.Toast.MakeText(string, float, Position)","childcount":0,"type":"Method","name":"MakeText","token":"public static void MakeText(string text, float duration, Position position)","scope":"InfinityEngine.Toast","comments":{"summary":"Display a message in screen","param-text":"the message","param-duration":"the duration","param-position":"message position on screen"},"params":{"text":"string","duration":"float","position":"Position"}},{"signature":"InfinityEngine.Toast.Dispose()","childcount":0,"type":"Method","name":"Dispose","token":"public static void Dispose()","scope":"InfinityEngine.Toast","comments":{"summary":"Hide the current text"}},{"signature":"InfinityEngine.Attributes","childcount":22,"type":"Namespace","name":"InfinityEngine.Attributes","token":"namespace InfinityEngine.Attributes","scope":"","comments":{"summary":"This namespace provides access to custom attributes."}},{"signature":"InfinityEngine.Attributes.AccordionAttribute","childcount":6,"type":"Class","name":"AccordionAttribute","token":"public class AccordionAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.AccordionAttribute.Title","childcount":0,"type":"Property","name":"Title","token":"public string Title { get; set; }","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"The title of the accordion"}},{"signature":"InfinityEngine.Attributes.AccordionAttribute.DrawOrder","childcount":0,"type":"Property","name":"DrawOrder","token":"public int DrawOrder { get; set; }","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"Gets the draw order of the accordion"}},{"signature":"InfinityEngine.Attributes.AccordionAttribute.IsSingleMode","childcount":0,"type":"Property","name":"IsSingleMode","token":"public bool IsSingleMode { get; set; }","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"Gets a value indicating whether only one accordion can be expanded at the same time."}},{"signature":"InfinityEngine.Attributes.AccordionAttribute.AccordionAttribute(string)","childcount":0,"type":"Constructor","name":"AccordionAttribute","token":"public  AccordionAttribute(string title)","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"Draws the decorated field inside of an accordion named with the given title","param-title":"The title of the accordion"},"params":{"title":"string"}},{"signature":"InfinityEngine.Attributes.AccordionAttribute.AccordionAttribute(string, int)","childcount":0,"type":"Constructor","name":"AccordionAttribute","token":"public  AccordionAttribute(string title, int drawOrder)","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"Draws the decorated field inside of an accordion named with the given title and specify\n         the draw order of the accordion (use this constructor for one of the fields inside of the same accordion)","param-title":"The title of the accordion","param-drawOrder":"Used to specify the draw order of the accordion\n         (use this parameter only for one of the fields with the accordion)"},"params":{"title":"string","drawOrder":"int"}},{"signature":"InfinityEngine.Attributes.AccordionAttribute.AccordionAttribute(string, bool, int)","childcount":0,"type":"Constructor","name":"AccordionAttribute","token":"public  AccordionAttribute(string title, bool singleMode, int drawOrder)","scope":"InfinityEngine.Attributes.AccordionAttribute","comments":{"summary":"Draws the decorated field inside of an accordion named with the given title and specify\n         the draw order of the accordion (use this constructor for one of the fields inside of the same accordion)","param-title":"The title of the accordion","param-singleMode":"A value indicating whether only one accordion can be expanded at the same time","param-drawOrder":"Used to specify the draw order of the accordion\n         (use this parameter only for one of the fields with the accordion)"},"params":{"title":"string","singleMode":"bool","drawOrder":"int"}},{"signature":"InfinityEngine.Attributes.CustomDrawerAttribute","childcount":0,"type":"Class","name":"CustomDrawerAttribute","token":"public class CustomDrawerAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.DecoratorField","childcount":0,"type":"Struct","name":"DecoratorField","token":"public struct DecoratorField ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.DisplayAsAttribute","childcount":2,"type":"Class","name":"DisplayAsAttribute","token":"public class DisplayAsAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.DisplayAsAttribute.DisplayName","childcount":0,"type":"Property","name":"DisplayName","token":"public string DisplayName { get; set; }","scope":"InfinityEngine.Attributes.DisplayAsAttribute","comments":{"summary":"Gets the display name of the field"}},{"signature":"InfinityEngine.Attributes.DisplayAsAttribute.DisplayAsAttribute(string)","childcount":0,"type":"Constructor","name":"DisplayAsAttribute","token":"public  DisplayAsAttribute(string name)","scope":"InfinityEngine.Attributes.DisplayAsAttribute","comments":{"summary":"Displays the decorated field with the given name","param-name":"The name to display in the inspector"},"params":{"name":"string"}},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","childcount":5,"type":"Class","name":"DontDrawInspectorIfAttribute","token":"public class DontDrawInspectorIfAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute.MethodName","childcount":0,"type":"Property","name":"MethodName","token":"public string MethodName { get; set; }","scope":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","comments":{"summary":"Gets the name of the method to which returns a value indicating whether the inspector can be drawed"}},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute.Message","childcount":0,"type":"Property","name":"Message","token":"public string Message { get; set; }","scope":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","comments":{"summary":"The message to show when the method return <c>false</c>"}},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute.IsMissingFunction","childcount":0,"type":"Property","name":"IsMissingFunction","token":"internal bool IsMissingFunction { get; set; }","scope":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","comments":{"summary":"Gets a value indicating whether the method with the name <see cref=\"P:InfinityEngine.Attributes.DontDrawInspectorIfAttribute.MethodName\" /> is missing"}},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute.DontDrawInspectorIfAttribute(string, string)","childcount":0,"type":"Constructor","name":"DontDrawInspectorIfAttribute","token":"public  DontDrawInspectorIfAttribute(string methodName, string message)","scope":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","comments":{"summary":"Draws the inspector of the monobehaviour  only if the method with the name <paramref name=\"methodName\" /> returns <c>false</c>","param-methodName":"The name of the method to which returns a value indicating whether the inspector can be drawed","param-message":"The message to show when the method return <c>false</c>"},"params":{"methodName":"string","message":"string"}},{"signature":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute.TryFindInvalidAttribute(object, DontDrawInspectorIfAttribute)","childcount":0,"type":"Method","name":"TryFindInvalidAttribute","token":"internal static bool TryFindInvalidAttribute(object targetClass, out DontDrawInspectorIfAttribute invalidAttribute)","scope":"InfinityEngine.Attributes.DontDrawInspectorIfAttribute","params":{"targetClass":"object","invalidAttribute":"DontDrawInspectorIfAttribute"}},{"signature":"InfinityEngine.Attributes.DrawOrderAttribute","childcount":2,"type":"Class","name":"DrawOrderAttribute","token":"public class DrawOrderAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.DrawOrderAttribute.Order","childcount":0,"type":"Property","name":"Order","token":"public int Order { get; set; }","scope":"InfinityEngine.Attributes.DrawOrderAttribute","comments":{"summary":"Gets the draw order of the decorated field"}},{"signature":"InfinityEngine.Attributes.DrawOrderAttribute.DrawOrderAttribute(int)","childcount":0,"type":"Constructor","name":"DrawOrderAttribute","token":"public  DrawOrderAttribute(int drawOrder)","scope":"InfinityEngine.Attributes.DrawOrderAttribute","comments":{"summary":"Specify a custom draw order for the decorated field","param-drawOrder":"The draw order of the field"},"params":{"drawOrder":"int"}},{"signature":"InfinityEngine.Attributes.InfinityHeaderAttribute","childcount":3,"type":"Class","name":"InfinityHeaderAttribute","token":"public class InfinityHeaderAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.InfinityHeaderAttribute.OnlineDocUrl","childcount":0,"type":"Property","name":"OnlineDocUrl","token":"public string OnlineDocUrl { get; set; }","scope":"InfinityEngine.Attributes.InfinityHeaderAttribute","comments":{"summary":"Gets the url of the online doc"}},{"signature":"InfinityEngine.Attributes.InfinityHeaderAttribute.InfinityHeaderAttribute()","childcount":0,"type":"Constructor","name":"InfinityHeaderAttribute","token":"public  InfinityHeaderAttribute()","scope":"InfinityEngine.Attributes.InfinityHeaderAttribute","comments":{"summary":"Display the default header."}},{"signature":"InfinityEngine.Attributes.InfinityHeaderAttribute.InfinityHeaderAttribute(string)","childcount":0,"type":"Constructor","name":"InfinityHeaderAttribute","token":"public  InfinityHeaderAttribute(string onlineDocUrl)","scope":"InfinityEngine.Attributes.InfinityHeaderAttribute","comments":{"summary":"Display a header with a button allowing to open an online doc","param-onlineDocUrl":"The url of the online doc"},"params":{"onlineDocUrl":"string"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute","childcount":10,"type":"Class","name":"InspectorButtonAttribute","token":"public class InspectorButtonAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.MethodName","childcount":0,"type":"Property","name":"MethodName","token":"public string MethodName { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets the name of the method"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.Label","childcount":0,"type":"Property","name":"Label","token":"public string Label { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets the text of the button (the name of the method by default)"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.Center","childcount":0,"type":"Property","name":"Center","token":"public bool Center { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets a value indicating whether the button is centered"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.Width","childcount":0,"type":"Property","name":"Width","token":"public int Width { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets the width of the button"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.Height","childcount":0,"type":"Property","name":"Height","token":"public int Height { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets the height of the button"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.Location","childcount":0,"type":"Property","name":"Location","token":"public InspectorButtonLocations Location { get; set; }","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","comments":{"summary":"Gets the location of the button"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.InspectorButtonAttribute(string, InspectorButtonLocations)","childcount":0,"type":"Constructor","name":"InspectorButtonAttribute","token":"public  InspectorButtonAttribute(string method, InspectorButtonLocations location = InspectorButtonLocations.Bottom)","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","params":{"method":"string","location":"InspectorButtonLocations"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.InspectorButtonAttribute(string, string, InspectorButtonLocations)","childcount":0,"type":"Constructor","name":"InspectorButtonAttribute","token":"public  InspectorButtonAttribute(string method, string label, InspectorButtonLocations location = InspectorButtonLocations.Bottom)","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","params":{"method":"string","label":"string","location":"InspectorButtonLocations"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.InspectorButtonAttribute(string, int, int, bool, InspectorButtonLocations)","childcount":0,"type":"Constructor","name":"InspectorButtonAttribute","token":"public  InspectorButtonAttribute(string method, int width, int height, bool center = false, InspectorButtonLocations location = InspectorButtonLocations.Bottom)","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","params":{"method":"string","width":"int","height":"int","center":"bool","location":"InspectorButtonLocations"}},{"signature":"InfinityEngine.Attributes.InspectorButtonAttribute.InspectorButtonAttribute(string, string, int, int, bool, InspectorButtonLocations)","childcount":0,"type":"Constructor","name":"InspectorButtonAttribute","token":"public  InspectorButtonAttribute(string method, string label, int width, int height, bool center = false, InspectorButtonLocations location = InspectorButtonLocations.Bottom)","scope":"InfinityEngine.Attributes.InspectorButtonAttribute","params":{"method":"string","label":"string","width":"int","height":"int","center":"bool","location":"InspectorButtonLocations"}},{"signature":"InfinityEngine.Attributes.InspectorButtonLocations","childcount":4,"type":"Enum","name":"InspectorButtonLocations","token":"public enum InspectorButtonLocations ","scope":"InfinityEngine.Attributes","comments":{"summary":"Specify the location of a button in a inspector."}},{"signature":"InfinityEngine.Attributes.InspectorButtonLocations.Top","childcount":0,"type":"EnumValue","name":"Top","token":"Top","scope":"InfinityEngine.Attributes.InspectorButtonLocations","comments":{"summary":"Draws the button at the top of the field"}},{"signature":"InfinityEngine.Attributes.InspectorButtonLocations.Right","childcount":0,"type":"EnumValue","name":"Right","token":"Right","scope":"InfinityEngine.Attributes.InspectorButtonLocations","comments":{"summary":"Draws the button at the right of the field"}},{"signature":"InfinityEngine.Attributes.InspectorButtonLocations.Bottom","childcount":0,"type":"EnumValue","name":"Bottom","token":"Bottom","scope":"InfinityEngine.Attributes.InspectorButtonLocations","comments":{"summary":"Draws the button at the bottom of the field"}},{"signature":"InfinityEngine.Attributes.InspectorButtonLocations.Left","childcount":0,"type":"EnumValue","name":"Left","token":"Left","scope":"InfinityEngine.Attributes.InspectorButtonLocations","comments":{"summary":"Draws the button at the top of the field"}},{"signature":"InfinityEngine.Attributes.MemberTypes","childcount":3,"type":"Enum","name":"MemberTypes","token":"public enum MemberTypes ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MemberTypes.Field","childcount":0,"type":"EnumValue","name":"Field","token":"Field","scope":"InfinityEngine.Attributes.MemberTypes"},{"signature":"InfinityEngine.Attributes.MemberTypes.Property","childcount":0,"type":"EnumValue","name":"Property","token":"Property","scope":"InfinityEngine.Attributes.MemberTypes"},{"signature":"InfinityEngine.Attributes.MemberTypes.Method","childcount":0,"type":"EnumValue","name":"Method","token":"Method","scope":"InfinityEngine.Attributes.MemberTypes"},{"signature":"InfinityEngine.Attributes.MessageAttribute","childcount":11,"type":"Class","name":"MessageAttribute","token":"public class MessageAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MessageAttribute.message","childcount":0,"type":"Field","name":"message","token":"internal string message ","scope":"InfinityEngine.Attributes.MessageAttribute"},{"signature":"InfinityEngine.Attributes.MessageAttribute.Message","childcount":0,"type":"Property","name":"Message","token":"public string Message { get; set; }","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"The message to display"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.MessageType","childcount":0,"type":"Property","name":"MessageType","token":"public MessageTypes MessageType { get; set; }","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"The type of the message"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.MemberName","childcount":0,"type":"Property","name":"MemberName","token":"public string MemberName { get; set; }","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"The name of a function that returns a boolean indicating whether the message should be displayed"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.MemberType","childcount":0,"type":"Property","name":"MemberType","token":"public MemberTypes MemberType { get; set; }","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"Gets the type of the reflected member"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.HasCondition","childcount":0,"type":"Property","name":"HasCondition","token":"public bool HasCondition { get; set; }","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"Gets a value indicating whether the message is linked to a condition"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.MessageAttribute(string, MessageTypes)","childcount":0,"type":"Constructor","name":"MessageAttribute","token":"public  MessageAttribute(string message, MessageTypes messageType)","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"Creates new instance of <c>MessageAttribute</c>","param-message":"The message","param-messageType":"The type of the member"},"params":{"message":"string","messageType":"MessageTypes"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.MessageAttribute(string, MessageTypes, string, MemberTypes)","childcount":0,"type":"Constructor","name":"MessageAttribute","token":"public  MessageAttribute(string message, MessageTypes messageType, string memberName, MemberTypes memberType)","scope":"InfinityEngine.Attributes.MessageAttribute","comments":{"summary":"Creates new instance of <c>MessageAttribute</c>","param-message":"The message","param-messageType":"The type of the message","param-memberName":"The name of a function that returns a boolean indicating whether the message should be displayed","param-memberType":"The type of the member"},"params":{"message":"string","messageType":"MessageTypes","memberName":"string","memberType":"MemberTypes"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.HasProblem(object, FieldInfo, Func<MemberInfo, bool>)","childcount":0,"type":"Method","name":"HasProblem","token":"internal bool HasProblem(object target, FieldInfo field, Func<MemberInfo, bool> condition)","scope":"InfinityEngine.Attributes.MessageAttribute","params":{"target":"object","field":"FieldInfo","condition":"Func<MemberInfo, bool>"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.HasProblem(object, FieldInfo)","childcount":0,"type":"Method","name":"HasProblem","token":"internal virtual bool HasProblem(object target, FieldInfo field)","scope":"InfinityEngine.Attributes.MessageAttribute","params":{"target":"object","field":"FieldInfo"}},{"signature":"InfinityEngine.Attributes.MessageAttribute.TryFindInvalidAttribute(object, FieldInfo, MessageAttribute)","childcount":0,"type":"Method","name":"TryFindInvalidAttribute","token":"internal static bool TryFindInvalidAttribute(object target, FieldInfo field, out MessageAttribute invalidAttribute)","scope":"InfinityEngine.Attributes.MessageAttribute","params":{"target":"object","field":"FieldInfo","invalidAttribute":"MessageAttribute"}},{"signature":"InfinityEngine.Attributes.MessageIfEmptyAttribute","childcount":2,"type":"Class","name":"MessageIfEmptyAttribute","token":"public class MessageIfEmptyAttribute : MessageAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MessageIfEmptyAttribute.MessageIfEmptyAttribute(string, MessageTypes)","childcount":0,"type":"Constructor","name":"MessageIfEmptyAttribute","token":"public  MessageIfEmptyAttribute(string message, MessageTypes messageType): base(message, messageType)","scope":"InfinityEngine.Attributes.MessageIfEmptyAttribute","comments":{"summary":"Displays a message when the value of decorated array of list field is empty.","param-message":"The message to display","param-messageType":"The type of the message"},"params":{"message":"string","messageType":"MessageTypes"}},{"signature":"InfinityEngine.Attributes.MessageIfEmptyAttribute.HasProblem(object, FieldInfo)","childcount":0,"type":"Method","name":"HasProblem","token":"internal override bool HasProblem(object target, FieldInfo field)","scope":"InfinityEngine.Attributes.MessageIfEmptyAttribute","params":{"target":"object","field":"FieldInfo"}},{"signature":"InfinityEngine.Attributes.MessageIfEqualsAttribute","childcount":3,"type":"Class","name":"MessageIfEqualsAttribute","token":"public class MessageIfEqualsAttribute : MessageAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MessageIfEqualsAttribute.expectedValue","childcount":0,"type":"Field","name":"expectedValue","token":"private object expectedValue ","scope":"InfinityEngine.Attributes.MessageIfEqualsAttribute"},{"signature":"InfinityEngine.Attributes.MessageIfEqualsAttribute.MessageIfEqualsAttribute(object, string, MessageTypes)","childcount":0,"type":"Constructor","name":"MessageIfEqualsAttribute","token":"public  MessageIfEqualsAttribute(object expectedValue, string message, MessageTypes messageType): base(message, messageType)","scope":"InfinityEngine.Attributes.MessageIfEqualsAttribute","comments":{"summary":"Displays a message when the value of decorated field is equals to <paramref name=\"expectedValue\" />","param-expectedValue":"The expected value","param-message":"The message to display","param-messageType":"The type of the message"},"params":{"expectedValue":"object","message":"string","messageType":"MessageTypes"}},{"signature":"InfinityEngine.Attributes.MessageIfEqualsAttribute.HasProblem(object, FieldInfo)","childcount":0,"type":"Method","name":"HasProblem","token":"internal override bool HasProblem(object target, FieldInfo field)","scope":"InfinityEngine.Attributes.MessageIfEqualsAttribute","params":{"target":"object","field":"FieldInfo"}},{"signature":"InfinityEngine.Attributes.MessageTypes","childcount":3,"type":"Enum","name":"MessageTypes","token":"public enum MessageTypes ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MessageTypes.Info","childcount":0,"type":"EnumValue","name":"Info","token":"Info","scope":"InfinityEngine.Attributes.MessageTypes"},{"signature":"InfinityEngine.Attributes.MessageTypes.Warning","childcount":0,"type":"EnumValue","name":"Warning","token":"Warning","scope":"InfinityEngine.Attributes.MessageTypes"},{"signature":"InfinityEngine.Attributes.MessageTypes.Error","childcount":0,"type":"EnumValue","name":"Error","token":"Error","scope":"InfinityEngine.Attributes.MessageTypes"},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute","childcount":11,"type":"Class","name":"MinMaxRangeAttribute","token":"public class MinMaxRangeAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.minLimit","childcount":0,"type":"Field","name":"minLimit","token":"public float minLimit ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"The limit of the min value"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.maxLimit","childcount":0,"type":"Field","name":"maxLimit","token":"public float maxLimit ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"The limit of the max value"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.minLimitGetterFunction","childcount":0,"type":"Field","name":"minLimitGetterFunction","token":"public string minLimitGetterFunction ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"The name of the getter function which changes dynamically the value of <see cref=\"F:InfinityEngine.Attributes.MinMaxRangeAttribute.minLimit\" />"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.maxLimitGetterFunction","childcount":0,"type":"Field","name":"maxLimitGetterFunction","token":"public string maxLimitGetterFunction ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"The name of the getter function which changes dynamically the value of <see cref=\"F:InfinityEngine.Attributes.MinMaxRangeAttribute.maxLimit\" />"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.isIntegerRange","childcount":0,"type":"Field","name":"isIntegerRange","token":"public bool isIntegerRange ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"Gets a value indicating whether the min and max value of the decorated <see cref=\"T:InfinityEngine.MinMax\" /> object must be casted to an integer"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.isDynamic","childcount":0,"type":"Field","name":"isDynamic","token":"public bool isDynamic ","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"Gets a value indicating whether the limit can be changed dynamically"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.MinMaxRangeAttribute(float, float)","childcount":0,"type":"Constructor","name":"MinMaxRangeAttribute","token":"public  MinMaxRangeAttribute(float minLimit, float maxLimit)","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"Restricts the min and max value of the <see cref=\"T:InfinityEngine.MinMax\" /> object between two float values","param-minLimit":"The minimum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object","param-maxLimit":"The maximum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object"},"params":{"minLimit":"float","maxLimit":"float"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.MinMaxRangeAttribute(int, int)","childcount":0,"type":"Constructor","name":"MinMaxRangeAttribute","token":"public  MinMaxRangeAttribute(int minLimit, int maxLimit)","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"Restricts the min and max value of the <see cref=\"T:InfinityEngine.MinMax\" /> object between two integers values","param-minLimit":"The minimum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object","param-maxLimit":"The maximum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object"},"params":{"minLimit":"int","maxLimit":"int"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.MinMaxRangeAttribute(string, string)","childcount":0,"type":"Constructor","name":"MinMaxRangeAttribute","token":"public  MinMaxRangeAttribute(string minLimitGetterFunction, string maxLimitGetterFunction)","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","comments":{"summary":"Restricts the min and max value of the <see cref=\"T:InfinityEngine.MinMax\" /> object between two values provided dynamically by 2 getter functions","example":"using UnityEngine;\n         using InfinityEngine;\n         using InfinityEngine.Attributes;\n        \n         public class TestClass : MonoBehaviour{\n        \n             [MinMaxRange(\"GetMin\", \"GetMax\")]\n             public MinMax minMax;\n        \n             public CustomClass customClass;\n        \n             public int GetMin(){ return 0; }\n        \n             public int GetMax(){ return 10; }\n        \n         }\n        \n         public class CustomClass{\n        \n             // As you can see  the functions are defined in the TestClass not in this class\n             [MinMaxRange(\"GetMin\", \"GetMax\")]\n             public MinMax customClassMinMax;\n         }","param-minLimitGetterFunction":"The name of the getter function which returns the minimum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object","param-maxLimitGetterFunction":"The name of the getter function which returns the maximum value allowed for the min value of the <see cref=\"T:InfinityEngine.MinMax\" /> object"},"params":{"minLimitGetterFunction":"string","maxLimitGetterFunction":"string"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.MinMaxRangeAttribute(float, string)","childcount":0,"type":"Constructor","name":"MinMaxRangeAttribute","token":"public  MinMaxRangeAttribute(float minLimit, string maxLimitGetterFunction)","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","params":{"minLimit":"float","maxLimitGetterFunction":"string"}},{"signature":"InfinityEngine.Attributes.MinMaxRangeAttribute.MinMaxRangeAttribute(string, float)","childcount":0,"type":"Constructor","name":"MinMaxRangeAttribute","token":"public  MinMaxRangeAttribute(string minLimitGetterFunction, float maxLimit)","scope":"InfinityEngine.Attributes.MinMaxRangeAttribute","params":{"minLimitGetterFunction":"string","maxLimit":"float"}},{"signature":"InfinityEngine.Attributes.OverrideInspectorAttribute","childcount":1,"type":"Class","name":"OverrideInspectorAttribute","token":"public class OverrideInspectorAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.OverrideInspectorAttribute.OverrideInspectorAttribute()","childcount":0,"type":"Constructor","name":"OverrideInspectorAttribute","token":"public  OverrideInspectorAttribute()","scope":"InfinityEngine.Attributes.OverrideInspectorAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute","childcount":7,"type":"Class","name":"PopupAttribute","token":"public class PopupAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.PopupAttribute.separator","childcount":0,"type":"Field","name":"separator","token":"public readonly char separator = ',';","scope":"InfinityEngine.Attributes.PopupAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute.values","childcount":0,"type":"Field","name":"values","token":"public readonly string values = ","scope":"InfinityEngine.Attributes.PopupAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute.enableSearch","childcount":0,"type":"Field","name":"enableSearch","token":"public readonly bool enableSearch = ","scope":"InfinityEngine.Attributes.PopupAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute.valueType","childcount":0,"type":"Field","name":"valueType","token":"public readonly PopupValueTypes valueType = ","scope":"InfinityEngine.Attributes.PopupAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute.selectedIndex","childcount":0,"type":"Field","name":"selectedIndex","token":"public int selectedIndex ","scope":"InfinityEngine.Attributes.PopupAttribute"},{"signature":"InfinityEngine.Attributes.PopupAttribute.PopupAttribute(string, PopupValueTypes, bool)","childcount":0,"type":"Constructor","name":"PopupAttribute","token":"public  PopupAttribute(string values, PopupValueTypes valueType, bool enableSearch = false)","scope":"InfinityEngine.Attributes.PopupAttribute","comments":{"summary":"Display a pop-up window that will specify the value of the string variable.","param-values":"Must be the name of a field, a simple const string or the name of a player pref","param-valueType":"The way in which the 'values' parameter of the function is processed depends on this value.","param-enableSearch":"If sets to <c>true</c>, a search option will be enable"},"params":{"values":"string","valueType":"PopupValueTypes","enableSearch":"bool"}},{"signature":"InfinityEngine.Attributes.PopupAttribute.PopupAttribute(string, char, PopupValueTypes, bool)","childcount":0,"type":"Constructor","name":"PopupAttribute","token":"public  PopupAttribute(string values, char separator, PopupValueTypes valueType, bool enableSearch = false)","scope":"InfinityEngine.Attributes.PopupAttribute","comments":{"summary":"Display a pop-up window that will specify the value of the string variable.","param-values":"Must be the name of a field, a simple const string or the name of a player pref","param-separator":"The separator char which separates the values","param-valueType":"The way in which the 'values' parameter of the function is processed depends on this value.","param-enableSearch":"If sets to <c>true</c>, a search option will be enable"},"params":{"values":"string","separator":"char","valueType":"PopupValueTypes","enableSearch":"bool"}},{"signature":"InfinityEngine.Attributes.PopupValueTypes","childcount":3,"type":"Enum","name":"PopupValueTypes","token":"public enum PopupValueTypes ","scope":"InfinityEngine.Attributes","comments":{"summary":"The type of way popup values are stored"}},{"signature":"InfinityEngine.Attributes.PopupValueTypes.String","childcount":0,"type":"EnumValue","name":"String","token":"String","scope":"InfinityEngine.Attributes.PopupValueTypes","comments":{"summary":"Used to specify that the parameter 'values' of the contructor of <see cref=\"T:InfinityEngine.Attributes.PopupAttribute\" /> is a constant string with the values separated by a given separator char.<para> </para>\n         Example : [PopupAttribute(\"AA,BB,CC\", PopupValueTypes.String)] or [PopupAttribute(MyClass.MyVariable, PopupValueTypes.String)]"}},{"signature":"InfinityEngine.Attributes.PopupValueTypes.PlayerPref","childcount":0,"type":"EnumValue","name":"PlayerPref","token":"PlayerPref","scope":"InfinityEngine.Attributes.PopupValueTypes","comments":{"summary":"Used to specify that the parameter 'values' of the contructor of <see cref=\"T:InfinityEngine.Attributes.PopupAttribute\" /> is the key of a string playerpref."}},{"signature":"InfinityEngine.Attributes.PopupValueTypes.Method","childcount":0,"type":"EnumValue","name":"Method","token":"Method","scope":"InfinityEngine.Attributes.PopupValueTypes","comments":{"summary":"Used to specify that the parameter 'values' of the contructor of <see cref=\"T:InfinityEngine.Attributes.PopupAttribute\" /> is the name of a function which returns a string or a string array"}},{"signature":"InfinityEngine.Attributes.ProgressBarAttribute","childcount":1,"type":"Class","name":"ProgressBarAttribute","token":"public class ProgressBarAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.ProgressBarAttribute.ProgressBarAttribute()","childcount":0,"type":"Constructor","name":"ProgressBarAttribute","token":"public  ProgressBarAttribute()","scope":"InfinityEngine.Attributes.ProgressBarAttribute"},{"signature":"InfinityEngine.Attributes.ReorderableAttribute","childcount":1,"type":"Class","name":"ReorderableAttribute","token":"public class ReorderableAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.ReorderableAttribute.ReorderableAttribute()","childcount":0,"type":"Constructor","name":"ReorderableAttribute","token":"public  ReorderableAttribute()","scope":"InfinityEngine.Attributes.ReorderableAttribute"},{"signature":"InfinityEngine.Attributes.TabAttribute","childcount":4,"type":"Class","name":"TabAttribute","token":"public class TabAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.TabAttribute.Title","childcount":0,"type":"Property","name":"Title","token":"public string Title { get; set; }","scope":"InfinityEngine.Attributes.TabAttribute","comments":{"summary":"The title of the tab"}},{"signature":"InfinityEngine.Attributes.TabAttribute.DrawOrder","childcount":0,"type":"Property","name":"DrawOrder","token":"public int DrawOrder { get; set; }","scope":"InfinityEngine.Attributes.TabAttribute","comments":{"summary":"Gets the draw order of the tab"}},{"signature":"InfinityEngine.Attributes.TabAttribute.TabAttribute(string)","childcount":0,"type":"Constructor","name":"TabAttribute","token":"public  TabAttribute(string title)","scope":"InfinityEngine.Attributes.TabAttribute","comments":{"summary":"Draws the decorated field inside of an accordion named with the given title","param-title":"The title of the accordion"},"params":{"title":"string"}},{"signature":"InfinityEngine.Attributes.TabAttribute.TabAttribute(string, int)","childcount":0,"type":"Constructor","name":"TabAttribute","token":"public  TabAttribute(string title, int drawOrder)","scope":"InfinityEngine.Attributes.TabAttribute","comments":{"summary":"Draws the decorated field inside of a tab named with the given title and specify\n         the draw order of the tab (use this constructor for one of the fields decorated with the attribute 'Tab')","param-title":"The title of the accordion","param-drawOrder":"Used to specify the draw order of the accordion\n         (use this parameter only for one of the fields decorated with the attribute 'Tab')"},"params":{"title":"string","drawOrder":"int"}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute","childcount":6,"type":"Class","name":"VisibleIfAttribute","token":"public class VisibleIfAttribute : PropertyAttribute ","scope":"InfinityEngine.Attributes"},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.MemberName","childcount":0,"type":"Property","name":"MemberName","token":"public string MemberName { get; set; }","scope":"InfinityEngine.Attributes.VisibleIfAttribute","comments":{"summary":"Gets the name of the member which indicates whether the field decorated by the attribute should be visible."}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.MemberType","childcount":0,"type":"Property","name":"MemberType","token":"public MemberTypes MemberType { get; set; }","scope":"InfinityEngine.Attributes.VisibleIfAttribute","comments":{"summary":"Gets the type of the member which indicates whether the field decorated by the attribute should be visible."}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.Negate","childcount":0,"type":"Property","name":"Negate","token":"public bool Negate { get; set; }","scope":"InfinityEngine.Attributes.VisibleIfAttribute","comments":{"summary":"Gets a value indicating whether the field should be visible only when the negation of the condition is true."}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.VisibleIfAttribute(string, MemberTypes, bool)","childcount":0,"type":"Constructor","name":"VisibleIfAttribute","token":"public  VisibleIfAttribute(string memberName, MemberTypes memberType, bool negate = false)","scope":"InfinityEngine.Attributes.VisibleIfAttribute","comments":{"summary":"Display the field in the inspector only if the value member with the given name is <c>true</c>","param-memberName":"The name of the method","param-memberType":"Gets the type of the member which indicates whether the field decorated by the attribute should be visible.","param-negate":"A value indicating whether the field should be visible only when the negation of the condition is true."},"params":{"memberName":"string","memberType":"MemberTypes","negate":"bool"}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.TryGetReferencedMember(object, MemberInfo)","childcount":0,"type":"Method","name":"TryGetReferencedMember","token":"internal bool TryGetReferencedMember(object target, out MemberInfo member)","scope":"InfinityEngine.Attributes.VisibleIfAttribute","params":{"target":"object","member":"MemberInfo"}},{"signature":"InfinityEngine.Attributes.VisibleIfAttribute.TryFindInvalidAttribute(object, FieldInfo, VisibleIfAttribute)","childcount":0,"type":"Method","name":"TryFindInvalidAttribute","token":"internal static bool TryFindInvalidAttribute(object target, FieldInfo field, out VisibleIfAttribute invalidAttribute)","scope":"InfinityEngine.Attributes.VisibleIfAttribute","params":{"target":"object","field":"FieldInfo","invalidAttribute":"VisibleIfAttribute"}},{"signature":"InfinityEngine.DesignPatterns","childcount":4,"type":"Namespace","name":"InfinityEngine.DesignPatterns","token":"namespace InfinityEngine.DesignPatterns","scope":"","comments":{"summary":"This namespace provides access to the implementation of some design patterns."}},{"signature":"InfinityEngine.DesignPatterns.IObservable","childcount":5,"type":"Interface","name":"IObservable","token":"public interface IObservable ","scope":"InfinityEngine.DesignPatterns","comments":{"summary":"interface implemented by the class <see cref=\"Observable\"/>"}},{"signature":"InfinityEngine.DesignPatterns.IObservable.AddObserver(Observer)","childcount":0,"type":"Method","name":"AddObserver","token":"void AddObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.IObservable","comments":{"summary":"Add new observer to this.","param-obs":"The Observer"},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.IObservable.RemoveObservers()","childcount":0,"type":"Method","name":"RemoveObservers","token":"void RemoveObservers()","scope":"InfinityEngine.DesignPatterns.IObservable","comments":{"summary":"Remove All Observers"}},{"signature":"InfinityEngine.DesignPatterns.IObservable.RemoveObserver(Observer)","childcount":0,"type":"Method","name":"RemoveObserver","token":"void RemoveObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.IObservable","comments":{"summary":"Remove the given observer"},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.IObservable.NotifyObservers()","childcount":0,"type":"Method","name":"NotifyObservers","token":"void NotifyObservers()","scope":"InfinityEngine.DesignPatterns.IObservable","comments":{"summary":"Notify all observers that this object has changed"}},{"signature":"InfinityEngine.DesignPatterns.IObservable.HasObserver(Observer)","childcount":0,"type":"Method","name":"HasObserver","token":"bool HasObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.IObservable","comments":{"summary":"Check if the given <see cref=\"Observer\"/> <paramref name=\"obs\"/> is observing this <see cref=\"IObservable\"/>","returns":"<c>true</c> if the given <see cref=\"Observer\"/> is observing this."},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.Observable","childcount":6,"type":"Class","name":"Observable","token":"public class Observable : MonoBehaviour, IObservable ","scope":"InfinityEngine.DesignPatterns","comments":{"summary":"Model component of MVC Design pattern"}},{"signature":"InfinityEngine.DesignPatterns.Observable.observers","childcount":0,"type":"Field","name":"observers","token":"private readonly List<Observer> observers = new List<Observer>();","scope":"InfinityEngine.DesignPatterns.Observable"},{"signature":"InfinityEngine.DesignPatterns.Observable.AddObserver(Observer)","childcount":0,"type":"Method","name":"AddObserver","token":"public void AddObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.Observable","comments":{"summary":"add the given observer to observers list","param-obs":"the observer to add"},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.Observable.NotifyObservers()","childcount":0,"type":"Method","name":"NotifyObservers","token":"public void NotifyObservers()","scope":"InfinityEngine.DesignPatterns.Observable","comments":{"summary":"Notify all obsevers of the model (the method (OnChange()' of all observers will be invoked)"}},{"signature":"InfinityEngine.DesignPatterns.Observable.RemoveObservers()","childcount":0,"type":"Method","name":"RemoveObservers","token":"public void RemoveObservers()","scope":"InfinityEngine.DesignPatterns.Observable","comments":{"summary":"Removes all observers"}},{"signature":"InfinityEngine.DesignPatterns.Observable.RemoveObserver(Observer)","childcount":0,"type":"Method","name":"RemoveObserver","token":"public void RemoveObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.Observable","comments":{"summary":"remove the given observer","param-obs":"the observer to remove"},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.Observable.HasObserver(Observer)","childcount":0,"type":"Method","name":"HasObserver","token":"public bool HasObserver(Observer obs)","scope":"InfinityEngine.DesignPatterns.Observable","comments":{"summary":"Checks if the given <see cref=\"Observer\"/> <paramref name=\"obs\"/> is observing this <see cref=\"IObservable\"/>","returns":"<c>true</c> if the given <see cref=\"Observer\"/> is observing this."},"params":{"obs":"Observer"}},{"signature":"InfinityEngine.DesignPatterns.Observer","childcount":1,"type":"Interface","name":"Observer","token":"public interface Observer ","scope":"InfinityEngine.DesignPatterns","comments":{"summary":"View component of MVC design pattern"}},{"signature":"InfinityEngine.DesignPatterns.Observer.OnChanged(object)","childcount":0,"type":"Method","name":"OnChanged","token":"void OnChanged(object obj)","scope":"InfinityEngine.DesignPatterns.Observer","comments":{"summary":"Callback method called when the observed model has changed","param-obj":"The observed Model"},"params":{"obj":"object"}},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>","childcount":6,"type":"Class","name":"Singleton<T>","token":"public class Singleton<T> : MonoBehaviour where T : MonoBehaviour ","scope":"InfinityEngine.DesignPatterns","comments":{"summary":"Singleton Manager","typeparam-T":"Singleton type(must inherit from MonoBehaviour)"}},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>._instance","childcount":0,"type":"Field","name":"_instance","token":"private static T _instance ","scope":"InfinityEngine.DesignPatterns.Singleton<T>"},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>._lock","childcount":0,"type":"Field","name":"_lock","token":"private static object _lock ","scope":"InfinityEngine.DesignPatterns.Singleton<T>"},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>.OnEnable()","childcount":0,"type":"Method","name":"OnEnable","token":"protected virtual void OnEnable()","scope":"InfinityEngine.DesignPatterns.Singleton<T>","comments":{"summary":"Unity callback invoked when this gameObject is enable"}},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>.Instance","childcount":0,"type":"Property","name":"Instance","token":"public static T Instance { get; }","scope":"InfinityEngine.DesignPatterns.Singleton<T>","comments":{"summary":"Singleton instance"}},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>.IsMissingInScene","childcount":0,"type":"Property","name":"IsMissingInScene","token":"public static bool IsMissingInScene { get; }","scope":"InfinityEngine.DesignPatterns.Singleton<T>","comments":{"summary":"Checks if there is an instance of this component in the scene"}},{"signature":"InfinityEngine.DesignPatterns.Singleton<T>.DestroySingleton()","childcount":0,"type":"Method","name":"DestroySingleton","token":"public static void DestroySingleton()","scope":"InfinityEngine.DesignPatterns.Singleton<T>","comments":{"summary":"Destroy this singleton instance."}},{"signature":"InfinityEngine.Extensions","childcount":16,"type":"Namespace","name":"InfinityEngine.Extensions","token":"namespace InfinityEngine.Extensions","scope":"","comments":{"summary":"This namespace provides access to extension methods for unity engines components and c# language.\n Some of these extension methods are usable without coding in unity inspector thanks to the reflection."}},{"signature":"InfinityEngine.Extensions.ArrayExtensions","childcount":15,"type":"Class","name":"ArrayExtensions","token":"public static class ArrayExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for array object"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Add<TSource>(TSource[], TSource)","childcount":0,"type":"Method","name":"Add<TSource>","token":"public static TSource[] Add<TSource>(this TSource[] array, TSource elem)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Adds the given element in this array.","example":"Example :\n             <code>\n             var array = new int[]{1, 2, 3};\n             array.Add(4);\n             array.Log();\n             </code>\n             This code produces the following result :\n             1 2 3 4","returns":"This array","typeparam-TSource":"Type of the elements of this array","param-array":"This array","param-elem":"Element to add"},"params":{"array":"TSource[]","elem":"TSource"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.AddIFNot<TSource>(TSource[], TSource)","childcount":0,"type":"Method","name":"AddIFNot<TSource>","token":"public static TSource[] AddIFNot<TSource>(this TSource[] array, TSource element)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Adds the given element into this array if it is not in the array.","example":"Example :\n             <code>\n                 var array = new int[]{1,2,3,4,5};\n                 array.AddIFNot(5);\n                 array.AddIFNot(1);\n                 array.AddIFNot(6);\n                 array.Log();\n             </code>\n             This code produces the following result : \n           \n             1\n             \n             2\n             \n             3\n             \n             4\n             \n             5\n             \n             6","returns":"this array","typeparam-TSource":"Type of the elements of this array","param-array":"This array","param-element":"Element to add"},"params":{"array":"TSource[]","element":"TSource"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.ForEach<TSource>(TSource[], Action<TSource>, Action)","childcount":0,"type":"Method","name":"ForEach<TSource>","token":"public static void ForEach<TSource>(this TSource[] array, Action<TSource> action, Action callback = null)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Apply the same action for each element of this array.","example":"Exemple :  \n             <code>\n             var array = new int[]{1,2,3,4,5};\n             array.ForEach(\n                 action:(element) => {\n                     Debug.Log(element * 2);\n                 },\n                 callback:()=>{\n                     Debug.Log(\"Finish\");\n                 }\n             </code>\n             This code produces the following result : \n             \n             2\n             \n             4\n             \n             6\n             \n             8\n             \n             10 \n             \n             Finish","typeparam-TSource":"Type of the elements of this array","param-array":"This array","param-action":"Action to do with each elements","param-callback":"Optional callback action at the end of the processus"},"params":{"array":"TSource[]","action":"Action<TSource>","callback":"Action"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.ForEach<TSource>(TSource[], Action<TSource, int>, Action)","childcount":0,"type":"Method","name":"ForEach<TSource>","token":"public static void ForEach<TSource>(this TSource[] array, Action<TSource, int> action, Action callback = null)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Apply the same action for each element of this array.","example":"Exemple :  \n             <code>\n             var array = new int[]{1,2,3,4,5};\n             array.ForEach((elem, index) => array[index] *= 2);\n             array.Log();\n             </code>\n             This code produces the following result : \n             \n             2\n             \n             4\n             \n             6\n             \n             8\n             \n             10","typeparam-TSource":"Type of the elements of this array","param-array":"This array","param-action":"Action to do with each elements","param-callback":"Optional callback action at the end of the processus"},"params":{"array":"TSource[]","action":"Action<TSource, int>","callback":"Action"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.IndexOf<TSource>(TSource[], TSource)","childcount":0,"type":"Method","name":"IndexOf<TSource>","token":"public static int IndexOf<TSource>(this TSource[] array, TSource elem)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Find the index of an element in a array","example":"Example :\n             <code>\n             var array = new array[]{5, 1, 64, 7, 8, -1};\n             Debug.Log(array.IndexOf(-1));\n             </code>\n             This code produces the following result : 5","remarks":"This function return the index of the <c>first</c> element. So in the case {1,2,2,3} this function return 1","returns":"Index of the element in the array","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference","param-elem":"Element to find"},"params":{"array":"TSource[]","elem":"TSource"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Last<TSource>(TSource[], Func<TSource, bool>)","childcount":0,"type":"Method","name":"Last<TSource>","token":"public static TSource Last<TSource>(this TSource[] array, Func<TSource, bool> predicate)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Find the last element of this array with the given predicate","example":"Exemple :    \n             <code>\n             var array = new int[]{1,2,4,2,5,2,8};\n             Debug.Log(array.Last(elem => elem &lt; 2));\n             </code>\n             This code produces the following result : 1","returns":"The last element with the given predicate","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference","param-predicate":"The given predicate"},"params":{"array":"TSource[]","predicate":"Func<TSource, bool>"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Last<TSource>(TSource[])","childcount":0,"type":"Method","name":"Last<TSource>","token":"public static TSource Last<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Find the last element of this array","example":"<code>\n             var array = new array[]{1,2,3,4,5};\n             Debug.Log(array.Last());\n             </code>\n             This code produces the following result : 5","returns":"The last element of this array","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference"},"params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.LastIndexOf<TSource>(TSource[], TSource)","childcount":0,"type":"Method","name":"LastIndexOf<TSource>","token":"public static int LastIndexOf<TSource>(this TSource[] array, TSource elem)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Find the last index of the given element in this array","example":"Example :\n             <code>\n             var array = new int[]{1, 2, 1, 3, 4, 2, 5, 2, 8};\n             Debug.Log(array.LastIndexOf(2));\n             </code>\n             This code produces the following result : 7","returns":"Index of the element in the array","typeparam-TSource":"Type of the elements in this array","param-array":"This array","param-elem":"The element to find"},"params":{"array":"TSource[]","elem":"TSource"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Log<TSource>(TSource[])","childcount":0,"type":"Method","name":"Log<TSource>","token":"public static void Log<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Show all elements of this array on the console","example":"<code>\n             var array = new int[]{1,2,3};\n             array.Log();\n             </code>\n             This code produces the following result :\n             \n             1\n             \n             2\n             \n             3","typeparam-TSource":"Type of the elements in this array","param-array":"this array"},"params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Random<TSource>(TSource[])","childcount":0,"type":"Method","name":"Random<TSource>","token":"public static TSource Random<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Return a random element of this array","returns":"random element of the array","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference"},"params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.RemoveAt<TSource>(TSource[], int)","childcount":0,"type":"Method","name":"RemoveAt<TSource>","token":"public static TSource[] RemoveAt<TSource>(this TSource[] array, int index)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Remove the element at index in this array","example":"<code>\n             var array = new int[]{1,2,3};\n             array.RemoveAt(1);\n             array.Log();\n             </code>\n             This code produces the following result :\n             \n             1\n             \n             3","returns":"This Array","typeparam-TSource":"Type of the elements of this array","param-array":"This Array","param-index":"Index to remove"},"params":{"array":"TSource[]","index":"int"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Remove<TSource>(TSource[], TSource)","childcount":0,"type":"Method","name":"Remove<TSource>","token":"public static TSource[] Remove<TSource>(this TSource[] array, TSource elem)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Remove the given element from this array","example":"<code>\n             var array = new int[]{1,2,3};\n             array.Remove(2);\n             array.Log();\n             </code>\n             This code produces the following result :\n             \n             1\n             \n             3","returns":"This Array","typeparam-TSource":"Type of the elements in this array","param-array":"This array","param-elem":"The element to remove"},"params":{"array":"TSource[]","elem":"TSource"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Shuffle<TSource>(TSource[])","childcount":0,"type":"Method","name":"Shuffle<TSource>","token":"public static TSource[] Shuffle<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Shuffle this array","returns":"this array","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference"},"params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.Shift<TSource>(TSource[])","childcount":0,"type":"Method","name":"Shift<TSource>","token":"public static TSource[] Shift<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","comments":{"summary":"Shift the array.","example":"Exemple :\n             <code>\n                 var array = new int[]{1, 2, 3, 4}\n                 array.Shift();\n                 array.Log();\n             </code>\n             This code produces the following result :\n             2\n             \n             3\n             \n             4\n             \n             1","returns":"this array","typeparam-TSource":"Type of the elements in the array","param-array":"This array reference"},"params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ArrayExtensions.ToHashSet<TSource>(TSource[])","childcount":0,"type":"Method","name":"ToHashSet<TSource>","token":"public static HashSet<TSource> ToHashSet<TSource>(this TSource[] array)","scope":"InfinityEngine.Extensions.ArrayExtensions","params":{"array":"TSource[]"}},{"signature":"InfinityEngine.Extensions.AudioSourceExtensions","childcount":4,"type":"Class","name":"AudioSourceExtensions","token":"public static class AudioSourceExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/AudioSource.html\"> AudioSource </a> class"}},{"signature":"InfinityEngine.Extensions.AudioSourceExtensions.DOFade(AudioSource, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this AudioSource audioSource, float from, float to, float duration)","scope":"InfinityEngine.Extensions.AudioSourceExtensions","comments":{"summary":"Fades this audio source volume","returns":"Object of type Interpolation","param-audioSource":"this AudioSource","param-from":"starts volume","param-to":"finals volume","param-duration":"Interpolation duration"},"params":{"audioSource":"AudioSource","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.AudioSourceExtensions.DOFade(AudioSource, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this AudioSource audioSource, float to, float duration)","scope":"InfinityEngine.Extensions.AudioSourceExtensions","comments":{"summary":"Fades this audio source volume","returns":"Object of type Interpolation","param-audioSource":"this AudioSource","param-to":"finals volume","param-duration":"Interpolation duration"},"params":{"audioSource":"AudioSource","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.AudioSourceExtensions.DOPitch(AudioSource, float, float, float)","childcount":0,"type":"Method","name":"DOPitch","token":"public static Interpolable DOPitch(this AudioSource audio, float from, float to, float duration)","scope":"InfinityEngine.Extensions.AudioSourceExtensions","comments":{"summary":"Fades this audio source pitch","returns":"Object of type Interpolation","param-audio":"this AudioSource","param-from":"starts volume","param-to":"finals volume","param-duration":"interpolation duration"},"params":{"audio":"AudioSource","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.AudioSourceExtensions.DOPitch(AudioSource, float, float)","childcount":0,"type":"Method","name":"DOPitch","token":"public static Interpolable DOPitch(this AudioSource audio, float to, float duration)","scope":"InfinityEngine.Extensions.AudioSourceExtensions","comments":{"summary":"Fades this audio source pitch","returns":"Object of type Interpolation","param-audio":"this AudioSource","param-to":"finals volume","param-duration":"Interpolation duration"},"params":{"audio":"AudioSource","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions","childcount":18,"type":"Class","name":"CameraExtensions","token":"public static class CameraExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/Camera.html\"> Camera </a> class"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFade(Camera, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Camera camera, float from, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Fades this Camera alpha","returns":"Object of type Interpolation","param-camera":"This Camera","param-from":"Starts Color","param-to":"Finals Color","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFade(Camera, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Camera camera, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Fade this Camera alpha","returns":"Object of type Interpolation","param-camera":"this Camera","param-to":"final Color","param-duration":"interpolation duration"},"params":{"camera":"Camera","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOColor(Camera, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Camera camera, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Fades this camera Color","param-camera":"This camera","param-from":"Starts value","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOColor(Camera, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Camera camera, Color to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Fades this camera Color","param-camera":"This camera","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOPickColor(Camera, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Camera camera, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this camera each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-camera":"this Camera","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"camera":"Camera","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOPickColor(Camera, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Camera camera, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this camera each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-camera":"this Camera","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"camera":"Camera","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DORandomColor(Camera, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this Camera camera, float interval, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes the color of the camera each time <paramref name=\"interval\"/> seconds.","returns":"Object of type Interpolation","param-camera":"this Camera","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"camera":"Camera","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFar(Camera, float, float, float)","childcount":0,"type":"Method","name":"DOFar","token":"public static Interpolable DOFar(this Camera camera, float from, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the far value of this camera.","param-camera":"This camera","param-from":"Starts value","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFar(Camera, float, float)","childcount":0,"type":"Method","name":"DOFar","token":"public static Interpolable DOFar(this Camera camera, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the far value of this camera.","param-camera":"This camera","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DONear(Camera, float, float, float)","childcount":0,"type":"Method","name":"DONear","token":"public static Interpolable DONear(this Camera camera, float from, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the near value of this camera.","param-camera":"This camera","param-from":"Starts value","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DONear(Camera, float, float)","childcount":0,"type":"Method","name":"DONear","token":"public static Interpolable DONear(this Camera camera, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the near value of this camera.","returns":"Object of type Interpolation","param-camera":"This camera","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOOrtho(Camera, float, float, float)","childcount":0,"type":"Method","name":"DOOrtho","token":"public static Interpolable DOOrtho(this Camera camera, float from, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the orthographic size of this camera.","returns":"Object of type Interpolation","param-camera":"This camera","param-from":"Starts value","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOOrtho(Camera, float, float)","childcount":0,"type":"Method","name":"DOOrtho","token":"public static Interpolable DOOrtho(this Camera camera, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the orthographic size of this camera.","returns":"Object of type Interpolation","param-camera":"This camera","param-to":"Finals value"},"params":{"camera":"Camera","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFieldOfView(Camera, float, float, float)","childcount":0,"type":"Method","name":"DOFieldOfView","token":"public static Interpolable DOFieldOfView(this Camera camera, float from, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the field of view of this camera.","param-camera":"This camera","param-from":"Starts value","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOFieldOfViewTo(Camera, float, float)","childcount":0,"type":"Method","name":"DOFieldOfViewTo","token":"public static Interpolable DOFieldOfViewTo(this Camera camera, float to, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Changes smoothly the field of view of this camera.","param-camera":"This camera","param-to":"Finals value","param-duration":"Interpolation duration"},"params":{"camera":"Camera","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOShakeRotation(Camera, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakeRotation","token":"public static Interpolable DOShakeRotation(this Camera camera, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Shakes this camera rotation","returns":"Object of type Interpolation","param-camera":"this camera","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"camera":"Camera","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOShakePosition(Camera, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakePosition","token":"public static Interpolable DOShakePosition(this Camera camera, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Shakes this camera position","returns":"Object of type Interpolation","param-camera":"this camera","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"camera":"Camera","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.CameraExtensions.DOShakeScale(Camera, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakeScale","token":"public static Interpolable DOShakeScale(this Camera camera, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.CameraExtensions","comments":{"summary":"Shakes this camera scale","returns":"Object of type Interpolation","param-camera":"this camera","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"camera":"Camera","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.Extensions","childcount":23,"type":"Class","name":"Extensions","token":"public static class Extensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods"}},{"signature":"InfinityEngine.Extensions.Extensions.Alphabet","childcount":0,"type":"Field","name":"Alphabet","token":"private static HashSet<char> Alphabet ","scope":"InfinityEngine.Extensions.Extensions"},{"signature":"InfinityEngine.Extensions.Extensions.ToInt(bool)","childcount":0,"type":"Method","name":"ToInt","token":"public static int ToInt(this bool b)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Changes the value of the boolean to an integer\n         ( '0 or 1' 1 if the value of the boolean is <c>true</c> 0 otherwise)","returns":"1 if b != <c>false</c> 0 otherwise","param-b":"The boolean"},"params":{"b":"bool"}},{"signature":"InfinityEngine.Extensions.Extensions.ToBool(int)","childcount":0,"type":"Method","name":"ToBool","token":"public static bool ToBool(this int n)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Changes the value of the integer to a boolean. (<c>true</c> if the integer is different from 0 <c>false</c> otherwise)","returns":"<c>true</c> if n != 0","param-n":"The integer"},"params":{"n":"int"}},{"signature":"InfinityEngine.Extensions.Extensions.Not<T>(Func<T, bool>)","childcount":0,"type":"Method","name":"Not<T>","token":"public static Func<T, bool> Not<T>(this Func<T, bool> predicate)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Return the logical negation of the given predicate"},"params":{"predicate":"Func<T, bool>"}},{"signature":"InfinityEngine.Extensions.Extensions.Not<T>(Expression<Func<T, bool>>)","childcount":0,"type":"Method","name":"Not<T>","token":"public static Expression<Func<T, bool>> Not<T>(this Expression<Func<T, bool>> expression)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Return the logical negation of the given expression"},"params":{"expression":"Expression<Func<T, bool>>"}},{"signature":"InfinityEngine.Extensions.Extensions.ToEnumerable(IEnumerator)","childcount":0,"type":"Method","name":"ToEnumerable","token":"public static IEnumerable ToEnumerable(this IEnumerator enumerator)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Cast the given IEnumerator to a  IEnumerable","returns":"this  IEnumerator casted to an IEnumerable","param-enumerator":"this IEnumerator"},"params":{"enumerator":"IEnumerator"}},{"signature":"InfinityEngine.Extensions.Extensions.ToEnumerable<T>(IEnumerator<T>)","childcount":0,"type":"Method","name":"ToEnumerable<T>","token":"public static IEnumerable<T> ToEnumerable<T>(this IEnumerator<T> enumerator)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Cast the given generic IEnumerator to a generic IEnumerable","returns":"this generic IEnumerator casted to a generic IEnumerable","typeparam-T":"Generic type","param-enumerator":"this IEnumerator"},"params":{"enumerator":"IEnumerator<T>"}},{"signature":"InfinityEngine.Extensions.Extensions.ForEach<TKey, TValue>(Dictionary<TKey, TValue>, Action<TKey, TValue>)","childcount":0,"type":"Method","name":"ForEach<TKey, TValue>","token":"public static void ForEach<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, Action<TKey, TValue> action)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Do an action for each key value pair of this dictionary","typeparam-TKey":"Key Type","typeparam-TValue":"Value Type","param-dictionary":"this dictionary","param-action":"action to do"},"params":{"dictionary":"Dictionary<TKey, TValue>","action":"Action<TKey, TValue>"}},{"signature":"InfinityEngine.Extensions.Extensions.ReplaceFirst(string, string, string)","childcount":0,"type":"Method","name":"ReplaceFirst","token":"public static string ReplaceFirst(this string Source, string Find, string Replace)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Replaces the first ocurence of the given string in this string.","returns":"this string","param-Source":"this string","param-Find":"the string to replace","param-Replace":"new value"},"params":{"Source":"string","Find":"string","Replace":"string"}},{"signature":"InfinityEngine.Extensions.Extensions.ReplaceLast(string, string, string)","childcount":0,"type":"Method","name":"ReplaceLast","token":"public static string ReplaceLast(this string Source, string Find, string Replace)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Replaces the last ocurence of the given string in this string.","returns":"this string","param-Source":"this string","param-Find":"the string to replace","param-Replace":"new value"},"params":{"Source":"string","Find":"string","Replace":"string"}},{"signature":"InfinityEngine.Extensions.Extensions.IsInAlphabet(char)","childcount":0,"type":"Method","name":"IsInAlphabet","token":"public static bool IsInAlphabet(this char c)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Checks if the char if in alphabet letters","returns":"<c>true</c> if the char is in alphabet <c>false</c> otherwise","param-c":"the char to check"},"params":{"c":"char"}},{"signature":"InfinityEngine.Extensions.Extensions.DistinctBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","childcount":0,"type":"Method","name":"DistinctBy<TSource, TKey>","token":"public static IEnumerable<TSource> DistinctBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns all distinct elements of the given source, where \"distinctness\"\n         is determined via a projection and the specified comparer for the projected type.","remarks":"This operator uses deferred execution and streams the results, although\n         a set of already-seen keys is retained. If a key is seen multiple times,\n         only the first element with that key is returned.","returns":"A sequence consisting of distinct elements from the source sequence,\n         comparing them by the specified key projection.","typeparam-TSource":"Type of the source sequence","typeparam-TKey":"Type of the projected element","param-source":"Source sequence","param-keySelector":"Projection for determining \"distinctness\""},"params":{"source":"IEnumerable<TSource>","keySelector":"Func<TSource, TKey>"}},{"signature":"InfinityEngine.Extensions.Extensions.TryParse<T>(Enum, T)","childcount":0,"type":"Method","name":"TryParse<T>","token":"public static bool TryParse<T>(this Enum theEnum, out T returnValue)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Try to parse the given to an Enum of type 'T'","returns":"<c>true</c> if the string is parsed <c>false</c> otherwise","typeparam-T":"The type of the enum","param-theEnum":"The enum","param-returnValue":"The result value"},"params":{"theEnum":"Enum","returnValue":"T"}},{"signature":"InfinityEngine.Extensions.Extensions.Repeat(string, int)","childcount":0,"type":"Method","name":"Repeat","token":"public static string Repeat(this string s, int n)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Creates a string by repeating <paramref name=\"n\" /> times the string","example":"<code>\n         Debug.Log(\"MyString\", 3);\n         </code>\n         The example produces the following result:<br />\n         MyStringMyStringMyString","returns":"New string","param-s":"The string","param-n":"The number of repetition"},"params":{"s":"string","n":"int"}},{"signature":"InfinityEngine.Extensions.Extensions.Repeat(char, int)","childcount":0,"type":"Method","name":"Repeat","token":"public static string Repeat(this char c, int n)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Creates a string by repeating <paramref name=\"n\" /> times the char","example":"<code>\n         Debug.Log(\"a\", 3);\n         </code>\n         The example produces the following result:<br />\n         aaa","returns":"New string","param-c":"The char","param-n":"The number of repetition"},"params":{"c":"char","n":"int"}},{"signature":"InfinityEngine.Extensions.Extensions.ToUpper(char)","childcount":0,"type":"Method","name":"ToUpper","token":"public static char ToUpper(this char c)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns the upper version of the char","returns":"The upper version of the char","param-c":"The char"},"params":{"c":"char"}},{"signature":"InfinityEngine.Extensions.Extensions.ToLower(char)","childcount":0,"type":"Method","name":"ToLower","token":"public static char ToLower(this char c)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns the lower version of the char","returns":"The lower version of the char","param-c":"The char"},"params":{"c":"char"}},{"signature":"InfinityEngine.Extensions.Extensions.GetOrAddComponent<T>(Component)","childcount":0,"type":"Method","name":"GetOrAddComponent<T>","token":"public static T GetOrAddComponent<T>(this Component child)where T : Component","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Try to get the Component of the given type or add the component if it not exist","typeparam-T":"Component Type","param-child":"this Component"},"params":{"child":"Component"}},{"signature":"InfinityEngine.Extensions.Extensions.GetOrAddComponent<T>(GameObject)","childcount":0,"type":"Method","name":"GetOrAddComponent<T>","token":"public static T GetOrAddComponent<T>(this GameObject gameObject)where T : Component","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Try to get the Component of the given type or add the component if it not exist","typeparam-T":"Component Type","param-gameObject":"this GameObject"},"params":{"gameObject":"GameObject"}},{"signature":"InfinityEngine.Extensions.Extensions.GetChilds(GameObject)","childcount":0,"type":"Method","name":"GetChilds","token":"public static List<GameObject> GetChilds(this GameObject gameObject)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns all GameObject childs of this GameObject","returns":"all child of this GameObject","param-gameObject":"this GameObject"},"params":{"gameObject":"GameObject"}},{"signature":"InfinityEngine.Extensions.Extensions.GetAllComponents(GameObject)","childcount":0,"type":"Method","name":"GetAllComponents","token":"public static Component[] GetAllComponents(this GameObject gameObject)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns all components of this GameObject","returns":"all Components of this GameObject","param-gameObject":"this GameObject"},"params":{"gameObject":"GameObject"}},{"signature":"InfinityEngine.Extensions.Extensions.ToQuaternion(Vector4)","childcount":0,"type":"Method","name":"ToQuaternion","token":"public static Quaternion ToQuaternion(this Vector4 vect)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns the Quaternion representation of this Vector4","returns":"A Quaternion"},"params":{"vect":"Vector4"}},{"signature":"InfinityEngine.Extensions.Extensions.ToVector4(Quaternion)","childcount":0,"type":"Method","name":"ToVector4","token":"public static Vector4 ToVector4(this Quaternion quaternion)","scope":"InfinityEngine.Extensions.Extensions","comments":{"summary":"Returns the Vector4 representation of this Quaternion","returns":"A Vector4","param-quaternion":"this Quaternion"},"params":{"quaternion":"Quaternion"}},{"signature":"InfinityEngine.Extensions.ImageExtensions","childcount":11,"type":"Class","name":"ImageExtensions","token":"public static class ImageExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/UI.Image.html\"> UI.Image </a> class"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.SetAlpha(Image, float)","childcount":0,"type":"Method","name":"SetAlpha","token":"public static void SetAlpha(this Image image, float alpha)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Changes this Image alpha","param-image":"this Image","param-alpha":"New alpha"},"params":{"image":"Image","alpha":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOFade(Image, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Image image, float from, float to, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Fades this Image alpha","returns":"Object of type Interpolation","param-image":"this Image","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"image":"Image","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOFade(Image, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Image image, float to, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Fades this Image alpha","returns":"Object of type Interpolation","param-image":"this Image","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"image":"Image","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOColor(Image, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Image image, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Lerps this Image color","returns":"Object of type Interpolation","param-image":"this Image","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"image":"Image","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOColor(Image, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Image image, Color to, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Lerps this Image color","returns":"Object of type Interpolation","param-image":"this Image","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"image":"Image","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DORandomColor(Image, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this Image image, float interval, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Changes the color of this image each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-image":"this Image","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"image":"Image","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOPickColor(Image, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Image image, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this image each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-image":"this Image","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"image":"Image","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOPickColor(Image, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Image image, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this image each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-image":"this Image","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"image":"Image","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOFillAmount(Image, float, float, float)","childcount":0,"type":"Method","name":"DOFillAmount","token":"public static Interpolable DOFillAmount(this Image image, float from, float to, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Changes smoothly the fill amount of this Image.","returns":"Object of type Interpolation","param-image":"This Image","param-from":"starts value","param-to":"final value","param-duration":"Interpolation duration"},"params":{"image":"Image","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOFillAmountIn(Image, float)","childcount":0,"type":"Method","name":"DOFillAmountIn","token":"public static Interpolable DOFillAmountIn(this Image image, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Changes smoothly the fill amount of this Image from 0 to 1.","returns":"Object of type Interpolation","param-image":"This Image","param-duration":"Interpolation duration"},"params":{"image":"Image","duration":"float"}},{"signature":"InfinityEngine.Extensions.ImageExtensions.DOFillAmountOut(Image, float)","childcount":0,"type":"Method","name":"DOFillAmountOut","token":"public static Interpolable DOFillAmountOut(this Image image, float duration)","scope":"InfinityEngine.Extensions.ImageExtensions","comments":{"summary":"Changes smoothly the fill amount of this Image from 1 to 0.","returns":"Object of type Interpolation","param-image":"This Image","param-duration":"Interpolation duration"},"params":{"image":"Image","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions","childcount":8,"type":"Class","name":"LightExtensions","token":"public static class LightExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/Light.html\"> Light</a>  class"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOFade(Light, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Light light, float from, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light alpha","returns":"Object of type Interpolation","param-light":"this Light","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOFade(Light, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Light light, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light alpha","returns":"Object of type Interpolation","param-light":"this Light","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOColor(Light, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Light light, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light color","returns":"Object of type Interpolation","param-light":"this Light","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOColor(Light, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Light light, Color to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light color","returns":"Object of type Interpolation","param-light":"this Light","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOIntensity(Light, float, float, float)","childcount":0,"type":"Method","name":"DOIntensity","token":"public static Interpolable DOIntensity(this Light light, float from, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light intensity","returns":"Object of type Interpolation","param-light":"this Light","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOIntensity(Light, float, float)","childcount":0,"type":"Method","name":"DOIntensity","token":"public static Interpolable DOIntensity(this Light light, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Fades this Light intensity","returns":"Object of type Interpolation","param-light":"this Light","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOShadowStrength(Light, float, float, float)","childcount":0,"type":"Method","name":"DOShadowStrength","token":"public static Interpolable DOShadowStrength(this Light light, float from, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Changes smoothly the strength of the shadow of this light","returns":"Object of type Interpolation","param-light":"this Light","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LightExtensions.DOShadowStrengthTo(Light, float, float)","childcount":0,"type":"Method","name":"DOShadowStrengthTo","token":"public static Interpolable DOShadowStrengthTo(this Light light, float to, float duration)","scope":"InfinityEngine.Extensions.LightExtensions","comments":{"summary":"Changes smoothly the strength of the shadow of this light","returns":"Object of type Interpolation","param-light":"this Light","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"light":"Light","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.LineRendererExtensions","childcount":3,"type":"Class","name":"LineRendererExtensions","token":"public static class LineRendererExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/LineRenderer.html\"> LineRenderer</a>  class"}},{"signature":"InfinityEngine.Extensions.LineRendererExtensions.DOColor(LineRenderer, DoubleColor, DoubleColor, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this LineRenderer lineRenderer, DoubleColor from, DoubleColor to, float duration)","scope":"InfinityEngine.Extensions.LineRendererExtensions","comments":{"summary":"Changes smoothly the color of this LineRenderer.","returns":"Object of type Interpolation","param-lineRenderer":"this LineRenderer","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"lineRenderer":"LineRenderer","from":"DoubleColor","to":"DoubleColor","duration":"float"}},{"signature":"InfinityEngine.Extensions.LineRendererExtensions.DOSize(LineRenderer, Vector2, Vector2, float)","childcount":0,"type":"Method","name":"DOSize","token":"public static Interpolable DOSize(this LineRenderer lineRenderer, Vector2 from, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.LineRendererExtensions","comments":{"summary":"Changes smoothly the size of this LineRenderer.","returns":"Object of type Interpolation","param-lineRenderer":"this LineRenderer","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"lineRenderer":"LineRenderer","from":"Vector2","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.LineRendererExtensions.DOPosition(LineRenderer, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOPosition","token":"public static Interpolable DOPosition(this LineRenderer lineRenderer, Vector3 from, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.LineRendererExtensions","comments":{"summary":"Changes smoothly the position of this LineRenderer.","returns":"Object of type Interpolation","param-lineRenderer":"this LineRenderer","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"lineRenderer":"LineRenderer","from":"Vector3","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.ListExtensions","childcount":9,"type":"Class","name":"ListExtensions","token":"public static class ListExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <see cref=\"List{T}\"/>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.AddIFNot<TSource>(List<TSource>, TSource)","childcount":0,"type":"Method","name":"AddIFNot<TSource>","token":"public static List<TSource> AddIFNot<TSource>(this List<TSource> list, TSource element)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Adds the given element into this list if it is not in the list.","example":"Example :\n             <code>\n                 var list = new List&lt;int&gt;{1,2,3,4,5};\n                 list.AddIFNot(5);\n                 list.AddIFNot(1);\n                 list.AddIFNot(6);\n                 list.Log();\n             </code>\n             This code produces the following result : \n           \n             1\n             \n             2\n             \n             3\n             \n             4\n             \n             5\n             \n             6","returns":"this list","typeparam-TSource":"Type of the elements of this list","param-list":"This list","param-element":"Element to add"},"params":{"list":"List<TSource>","element":"TSource"}},{"signature":"InfinityEngine.Extensions.ListExtensions.First<TSource>(List<TSource>, Func<TSource, bool>)","childcount":0,"type":"Method","name":"First<TSource>","token":"public static TSource First<TSource>(this List<TSource> list, Func<TSource, bool> predicate)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Finds the first element of this list that meets the given predicate","example":"Example :\n             <code>\n             var list = new List&lt;int&gt;{1,2,3,-1,2,5,10};\n             Debug.Log(list.First(element => element &lt; 0));\n             </code>\n             This code produces the following result : -1","returns":"The first element that meets the predicate","typeparam-TSource":"Type of the elements of the list","param-list":"this list reference","param-predicate":"the given predicate"},"params":{"list":"List<TSource>","predicate":"Func<TSource, bool>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Intersect<TSource>(List<TSource>, TSource[])","childcount":0,"type":"Method","name":"Intersect<TSource>","token":"public static List<TSource> Intersect<TSource>(this List<TSource> list, TSource[] list2)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Produces new list with the intersection of two sequences by using the default equality comparer.","example":"Example :\n             <code>\n                 var firstArray = new List&lt;int&gt;{1,2,3,4,5};\n                 var secondArray = new List&lt;int&gt;{8,7,3,4,5};\n                 firstArray.Union(secondArray).Log();\n             </code>\n             \n             This code produces the following result :\n             3\n             \n             4\n             \n             5","returns":"The intersection of the two arrays","typeparam-TSource":"Type of the elements of this list","param-list":"This list","param-list2":"The second list"},"params":{"list":"List<TSource>","list2":"TSource[]"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Last<TSource>(List<TSource>, Func<TSource, bool>)","childcount":0,"type":"Method","name":"Last<TSource>","token":"public static TSource Last<TSource>(this List<TSource> list, Func<TSource, bool> predicate)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Find the last element of this list with the given predicate","example":"Example :    \n             <code>\n             var list = new List&lt;int&gt;{1,2,4,2,5,2,8};\n             Debug.Log(list.Last(elem => elem &lt; 2));\n             </code>\n             This code produces the following result : 1","returns":"The last element with the given predicate","typeparam-TSource":"Type of the elements in the list","param-list":"This list reference","param-predicate":"The given predicate"},"params":{"list":"List<TSource>","predicate":"Func<TSource, bool>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Last<TSource>(List<TSource>)","childcount":0,"type":"Method","name":"Last<TSource>","token":"public static TSource Last<TSource>(this List<TSource> list)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Find the last element of this list","example":"<code>\n             var list = new List&lt;int&gt;{1,2,3,4,5};\n             Debug.Log(list.Last());\n             </code>\n             This code produces the following result : 5","returns":"The last element of this list","typeparam-TSource":"Type of the elements in the list","param-list":"This list reference"},"params":{"list":"List<TSource>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Log<TSource>(List<TSource>)","childcount":0,"type":"Method","name":"Log<TSource>","token":"public static void Log<TSource>(this List<TSource> list)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Show all elements of this list on the console","example":"<code>\n             var list = new List&lt;int&gt;{1,2,3};\n             list.Log();\n             </code>\n             This code produces the following result :\n             \n             1\n             \n             2\n             \n             3","typeparam-TSource":"Type of the elements in this list","param-list":"this list"},"params":{"list":"List<TSource>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Random<TSource>(List<TSource>)","childcount":0,"type":"Method","name":"Random<TSource>","token":"public static TSource Random<TSource>(this List<TSource> list)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"return random element of this list","returns":"random element of the list","typeparam-TSource":"list type","param-list":"the list"},"params":{"list":"List<TSource>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Shuffle<TSource>(List<TSource>)","childcount":0,"type":"Method","name":"Shuffle<TSource>","token":"public static List<TSource> Shuffle<TSource>(this List<TSource> list)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"shuffle this list","returns":"this list","typeparam-TSource":"list type","param-list":"the list"},"params":{"list":"List<TSource>"}},{"signature":"InfinityEngine.Extensions.ListExtensions.Shift<TSource>(List<TSource>)","childcount":0,"type":"Method","name":"Shift<TSource>","token":"public static List<TSource> Shift<TSource>(this List<TSource> list)","scope":"InfinityEngine.Extensions.ListExtensions","comments":{"summary":"Shift the list.","example":"Example :\n             <code>\n                 var list = new List&lt;int&gt;{1, 2, 3, 4}\n                 list.Shift();\n                 list.Log();\n             </code>\n             This code produces the following result :\n             2\n             \n             3\n             \n             4\n             \n             1","returns":"this list","typeparam-TSource":"Type of the elements in the list","param-list":"This list reference"},"params":{"list":"List<TSource>"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions","childcount":14,"type":"Class","name":"MaterialExtensions","token":"public static class MaterialExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/Material.html\"> Material</a>  class"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOFade(Material, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Material material, float from, float to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Fades the color of this material","returns":"Object of type Interpolation","param-material":"this Material","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOFade(Material, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Material material, float to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Fades the color of this material","returns":"Object of type Interpolation","param-material":"this Material","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOColor(Material, string, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Material material, string propertyName, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes smoothly the color of the property of this Material with the given name.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"Name of the property","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","propertyName":"string","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOColor(Material, string, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Material material, string propertyName, Color to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes smoothly the color of the property of this Material with the given name.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"Name of the property","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","propertyName":"string","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOColor(Material, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Material material, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes smoothly the color of this Material.","returns":"Object of type Interpolation","param-material":"this Material","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOColor(Material, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Material material, Color to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes smoothly the color of this Material.","returns":"Object of type Interpolation","param-material":"this Material","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"material":"Material","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DORandomColor(Material, string, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this Material material, string propertyName, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes the color of the property of this Material with the given name each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"Name of the property","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","propertyName":"string","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DORandomColor(Material, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this Material material, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes the color of this Material each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOPickColor(Material, string, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Material material, string propertyName, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Picks a color in the given list and changes the color the property of this Material with the given name each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"name of the property","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","propertyName":"string","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOPickColor(Material, string, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Material material, string propertyName, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Picks a color in the given list and changes the color the property of this Material with the given name each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"name of the property","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","propertyName":"string","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOPickColor(Material, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Material material, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this Material each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOPickColor(Material, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Material material, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this Material each time '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-material":"this Material","param-colors":"The color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"material":"Material","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOOffset(Material, Vector2, float)","childcount":0,"type":"Method","name":"DOOffset","token":"public static Interpolable DOOffset(this Material material, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes this Material mainTextureOffset. Use this methods to do scrolling effect","returns":"Object of type Interpolation","param-material":"this Material","param-to":"Offset","param-duration":"Duration"},"params":{"material":"Material","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.MaterialExtensions.DOOffset(Material, string, Vector2, float)","childcount":0,"type":"Method","name":"DOOffset","token":"public static Interpolable DOOffset(this Material material, string propertyName, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.MaterialExtensions","comments":{"summary":"Changes the texture offset of the property of this Material with the given name.","returns":"Object of type Interpolation","param-material":"this Material","param-propertyName":"Name of the property","param-to":"Offset","param-duration":"Duration"},"params":{"material":"Material","propertyName":"string","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension","childcount":7,"type":"Class","name":"PoolManagerExtension","token":"public static class PoolManagerExtension ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for PoolManager class"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.ToPool(GameObject)","childcount":0,"type":"Method","name":"ToPool","token":"public static void ToPool(this GameObject go)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Disables this gameObject and push it to the PoolManager.","param-go":"The GameObject"},"params":{"go":"GameObject"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.ToPool(Transform)","childcount":0,"type":"Method","name":"ToPool","token":"public static void ToPool(this Transform transform)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Disables the gameObject of this Transform and push it to the PoolManager.","param-transform":"The GameObject"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.ToPool(MonoBehaviour)","childcount":0,"type":"Method","name":"ToPool","token":"public static void ToPool(this MonoBehaviour mono)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Disables the gameObject of this MonoBehaviour and push it to the PoolManager.","param-mono":"The GameObject"},"params":{"mono":"MonoBehaviour"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.FromPool(GameObject, Action<GameObject>)","childcount":0,"type":"Method","name":"FromPool","token":"public static GameObject FromPool(this GameObject prefab, Action<GameObject> onInit)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag.","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)","param-onInit":"Action do to when this GameObject is instantiated"},"params":{"prefab":"GameObject","onInit":"Action<GameObject>"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.FromPool(GameObject, Vector3, Quaternion, Space)","childcount":0,"type":"Method","name":"FromPool","token":"public static GameObject FromPool(this GameObject prefab, Vector3 position, Quaternion rotation, Space space = 0)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag.","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)","param-position":"Instantiates position","param-rotation":"Instantiates rotation","param-space":"if set to <c>Space.World</c>, the GameObject will be instantiated in world space.\n         Otherwise it will be instantiated in local space."},"params":{"prefab":"GameObject","position":"Vector3","rotation":"Quaternion","space":"Space"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.FromPool(GameObject)","childcount":0,"type":"Method","name":"FromPool","token":"public static GameObject FromPool(this GameObject prefab)","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag \n          at Vector3.zero and reset it rotation to Quaternion.identity","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)"},"params":{"prefab":"GameObject"}},{"signature":"InfinityEngine.Extensions.PoolManagerExtension.FromPool<T>(GameObject)","childcount":0,"type":"Method","name":"FromPool<T>","token":"public static T FromPool<T>(this GameObject prefab)where T : Component","scope":"InfinityEngine.Extensions.PoolManagerExtension","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag \n          at Vector3.zero and reset it rotation to Quaternion.identity and returns the component of type 'T' from the GameObject","returns":"The component of type T of prefab","typeparam-T":"The type of the component to find","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)"},"params":{"prefab":"GameObject"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions","childcount":5,"type":"Class","name":"RectTransformExtensions","token":"public static class RectTransformExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/RectTransform.html\"> RectTransform </a> class"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions.DOMoveAnchor3D(RectTransform, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOMoveAnchor3D","token":"public static Interpolable DOMoveAnchor3D(this RectTransform rectTransform, Vector3 from, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.RectTransformExtensions","comments":{"summary":"Translates smoothly the anchoredPosition3D of this RectTransform","returns":"Object of type Interpolation","param-rectTransform":"This RectTransform","param-from":"starts position","param-to":"finals position","param-duration":"Interpolation duration"},"params":{"rectTransform":"RectTransform","from":"Vector3","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions.DOMoveAnchor3D(RectTransform, Vector3, float)","childcount":0,"type":"Method","name":"DOMoveAnchor3D","token":"public static Interpolable DOMoveAnchor3D(this RectTransform rectTransform, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.RectTransformExtensions","comments":{"summary":"Translates smoothly the anchoredPosition3D of this RectTransformfrom","returns":"Object of type Interpolation","param-rectTransform":"This RectTransform","param-to":"finals position","param-duration":"Interpolation duration"},"params":{"rectTransform":"RectTransform","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions.DOMoveAnchor2D(RectTransform, Vector2, Vector2, float)","childcount":0,"type":"Method","name":"DOMoveAnchor2D","token":"public static Interpolable DOMoveAnchor2D(this RectTransform rectTransform, Vector2 from, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.RectTransformExtensions","comments":{"summary":"Changes smoothly the x component of the anchroredPosition3D of this RectTransformon","returns":"Object of type Interpolation","param-rectTransform":"This RectTransform","param-from":"starts position","param-to":"finals position","param-duration":"Interpolation duration"},"params":{"rectTransform":"RectTransform","from":"Vector2","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions.DOMoveAnchor2D(RectTransform, Vector2, float)","childcount":0,"type":"Method","name":"DOMoveAnchor2D","token":"public static Interpolable DOMoveAnchor2D(this RectTransform rectTransform, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.RectTransformExtensions","comments":{"summary":"Translates smoothly the anchoredPosition2D of this RectTransform","returns":"Object of type Interpolation","param-rectTransform":"This RectTransform","param-to":"finals position","param-duration":"Interpolation duration"},"params":{"rectTransform":"RectTransform","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.RectTransformExtensions.DOSizeDelta(RectTransform, Vector2, Vector2, float)","childcount":0,"type":"Method","name":"DOSizeDelta","token":"public static Interpolable DOSizeDelta(this RectTransform rectTrasform, Vector2 from, Vector2 to, float duration)","scope":"InfinityEngine.Extensions.RectTransformExtensions","comments":{"summary":"Changes smoothly the size of this RectTransformon","returns":"Object of type Interpolation\"/>","param-rectTrasform":"This RectTransform","param-from":"starts size","param-to":"finals size","param-duration":"Interpolation duration"},"params":{"rectTrasform":"RectTransform","from":"Vector2","to":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions","childcount":8,"type":"Class","name":"RigidBodyExtensions","token":"public static class RigidBodyExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/Rigidbody.html\"> RigidBody </a> \r\n      and <a href=\"https://docs.unity3d.com/ScriptReference/Rigidbody2D.html\"> RigidBody2D </a> class"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DOMove(Rigidbody, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOMove","token":"public static Interpolable DOMove(this Rigidbody body, Vector3 start, Vector3 destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Moves smoothly this RigidBody","returns":"Object of type Interpolation","param-body":"this RigidBody","param-start":"starts value","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody","start":"Vector3","destination":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DOMove(Rigidbody, Vector3, float)","childcount":0,"type":"Method","name":"DOMove","token":"public static Interpolable DOMove(this Rigidbody body, Vector3 destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Moves smoothly this RigidBody","returns":"Object of type Interpolation","param-body":"this RigidBody","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody","destination":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DORotate(Rigidbody, Quaternion, Quaternion, float)","childcount":0,"type":"Method","name":"DORotate","token":"public static Interpolable DORotate(this Rigidbody body, Quaternion start, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Rotates smoothly this RigidBody","returns":"Object of type Interpolation","param-body":"this RigidBody","param-start":"starts value","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody","start":"Quaternion","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DORotate(Rigidbody, Quaternion, float)","childcount":0,"type":"Method","name":"DORotate","token":"public static Interpolable DORotate(this Rigidbody body, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Rotates smoothly this RigidBody","returns":"Object of type Interpolation","param-body":"this RigidBody","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DOMove2D(Rigidbody2D, Vector2, Vector2, float)","childcount":0,"type":"Method","name":"DOMove2D","token":"public static Interpolable DOMove2D(this Rigidbody2D body, Vector2 start, Vector2 destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Moves smoothly this RigidBody2D","returns":"Object of type Interpolation","param-body":"this RigidBody2D","param-start":"starts value","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody2D","start":"Vector2","destination":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DOMove2D(Rigidbody2D, Vector2, float)","childcount":0,"type":"Method","name":"DOMove2D","token":"public static Interpolable DOMove2D(this Rigidbody2D body, Vector2 destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Moves smoothly this RigidBody2D","returns":"Object of type Interpolation","param-body":"this RigidBody2D","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody2D","destination":"Vector2","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DORotate2D(Rigidbody2D, float, float, float)","childcount":0,"type":"Method","name":"DORotate2D","token":"public static Interpolable DORotate2D(this Rigidbody2D body, float start, float destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Rotates smoothly this RigidBody2D","returns":"Object of type Interpolation","param-body":"this RigidBody2D","param-start":"starts value","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody2D","start":"float","destination":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.RigidBodyExtensions.DORotate2D(Rigidbody2D, float, float)","childcount":0,"type":"Method","name":"DORotate2D","token":"public static Interpolable DORotate2D(this Rigidbody2D body, float destination, float duration)","scope":"InfinityEngine.Extensions.RigidBodyExtensions","comments":{"summary":"Rotates smoothly this RigidBody2D","returns":"Object of type Interpolation","param-body":"this RigidBody2D","param-destination":"finals value","param-duration":"Interpolation"},"params":{"body":"Rigidbody2D","destination":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions","childcount":8,"type":"Class","name":"SpriteRendererExtensions","token":"public static class SpriteRendererExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/SpriteRenderer.html\"> SpriteRenderer </a> class"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.SetAlpha(SpriteRenderer, float)","childcount":0,"type":"Method","name":"SetAlpha","token":"public static void SetAlpha(this SpriteRenderer spriteRenderer, float alpha)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Changes this spriteRenderer alpha","param-spriteRenderer":"this SpriteRenderer","param-alpha":"New alpha"},"params":{"spriteRenderer":"SpriteRenderer","alpha":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOFade(SpriteRenderer, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this SpriteRenderer spriteRenderer, float from, float to, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Fades the alpha of this SpriteRenderer","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-from":"initial alpha","param-to":"final alpha","param-duration":"change interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOFade(SpriteRenderer, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this SpriteRenderer spriteRenderer, float to, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Fades the alpha of this SpriteRenderer","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-to":"final alpha","param-duration":"change interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOColor(SpriteRenderer, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this SpriteRenderer spriteRenderer, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Lerp the color of this SpriteRenderer","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-from":"initial alpha","param-to":"final alpha","param-duration":"change interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOColor(SpriteRenderer, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this SpriteRenderer spriteRenderer, Color to, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Lerp the color of this SpriteRenderer","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-to":"final alpha","param-duration":"Interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DORandomColor(SpriteRenderer, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this SpriteRenderer spriteRenderer, float interval, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Changes the color of this image each  '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOPickColor(SpriteRenderer, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this SpriteRenderer spriteRenderer, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this spriteRenderer each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.SpriteRendererExtensions.DOPickColor(SpriteRenderer, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this SpriteRenderer spriteRenderer, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.SpriteRendererExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this spriteRenderer each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-spriteRenderer":"this SpriteRenderer","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"spriteRenderer":"SpriteRenderer","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions","childcount":10,"type":"Class","name":"TextExtensions","token":"public static class TextExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/UI.Text.html\"> UI.Text </a>  class"}},{"signature":"InfinityEngine.Extensions.TextExtensions.SetAlpha(Text, float)","childcount":0,"type":"Method","name":"SetAlpha","token":"public static void SetAlpha(this Text text, float alpha)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Changes this Image alpha","param-text":"this Text","param-alpha":"New alpha"},"params":{"text":"Text","alpha":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOFade(Text, float, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Text text, float from, float to, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Fades this Text alpha","returns":"Object of type Interpolation","param-text":"this Text","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"text":"Text","from":"float","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOFade(Text, float, float)","childcount":0,"type":"Method","name":"DOFade","token":"public static Interpolable DOFade(this Text text, float to, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Fades this Text alpha","returns":"Object of type Interpolation","param-text":"this Text","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"text":"Text","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOColor(Text, Color, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Text text, Color from, Color to, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Lerps this Text Color","returns":"Object of type Interpolation","param-text":"this Text","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"text":"Text","from":"Color","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOColor(Text, Color, float)","childcount":0,"type":"Method","name":"DOColor","token":"public static Interpolable DOColor(this Text text, Color to, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Lerps this Text Color","returns":"Object of type Interpolation","param-text":"this Text","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"text":"Text","to":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOPickColor(Text, List<Color>, float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Text text, List<Color> colors, float interval, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this text each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-text":"this Text","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"text":"Text","colors":"List<Color>","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOPickColor(Text, Color[], float, float)","childcount":0,"type":"Method","name":"DOPickColor","token":"public static Interpolable DOPickColor(this Text text, Color[] colors, float interval, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Picks a color in the given list and changes the color of this text each '<paramref name=\"interval\"/>' seconds.","returns":"Object of type Interpolation","param-text":"this Text","param-colors":"Color list","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"text":"Text","colors":"Color[]","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DORandomColor(Text, float, float)","childcount":0,"type":"Method","name":"DORandomColor","token":"public static Interpolable DORandomColor(this Text text, float interval, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Changes the color of the camera each time <paramref name=\"interval\"/> seconds.","returns":"Object of type Interpolation","param-text":"this Text","param-interval":"The interval","param-duration":"Interpolation duration"},"params":{"text":"Text","interval":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOScore(Text, int, int, float)","childcount":0,"type":"Method","name":"DOScore","token":"public static Interpolable DOScore(this Text text, int from, int to, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Do score effect","example":"The code :\n             <code>DoScore(0, 1000, 1);</code>\n             Display on screen 0 to 1000 in 1 seconds","returns":"Object of type Interpolation","param-text":"the Text","param-from":"starts value","param-to":"finals value","param-duration":"interpolation duration"},"params":{"text":"Text","from":"int","to":"int","duration":"float"}},{"signature":"InfinityEngine.Extensions.TextExtensions.DOZoomOut(Text, Vector3, string, Color, float)","childcount":0,"type":"Method","name":"DOZoomOut","token":"public static Interpolable DOZoomOut(this Text text, Vector3 to, string message, Color color, float duration)","scope":"InfinityEngine.Extensions.TextExtensions","comments":{"summary":"Changes smoothly the scale of  this Text fromm Vector3.zero to the given value","returns":"Object of type Interpolation","param-text":"this Text","param-to":"finals value","param-message":"Text message","param-color":"Text color","param-duration":"Interpolation duration"},"params":{"text":"Text","to":"Vector3","message":"string","color":"Color","duration":"float"}},{"signature":"InfinityEngine.Extensions.TrailRendererExtensions","childcount":4,"type":"Class","name":"TrailRendererExtensions","token":"public static class TrailRendererExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for  <a href=\"https://docs.unity3d.com/ScriptReference/TrailRenderer.html\"> TrailRenderer</a>  class"}},{"signature":"InfinityEngine.Extensions.TrailRendererExtensions.DOSize(TrailRenderer, float, float, float)","childcount":0,"type":"Method","name":"DOSize","token":"public static Interpolable DOSize(this TrailRenderer trail, float newStartWidth, float newEndWidth, float duration)","scope":"InfinityEngine.Extensions.TrailRendererExtensions","comments":{"summary":"Resizes this TrailRenderer starts and ends witdh","returns":"Object of type Interpolation","param-trail":"The TrailRenderer","param-newStartWidth":"new start width","param-newEndWidth":"new end width","param-duration":"interpolation duration"},"params":{"trail":"TrailRenderer","newStartWidth":"float","newEndWidth":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TrailRendererExtensions.DOEndWidth(TrailRenderer, float, float)","childcount":0,"type":"Method","name":"DOEndWidth","token":"public static Interpolable DOEndWidth(this TrailRenderer trail, float to, float duration)","scope":"InfinityEngine.Extensions.TrailRendererExtensions","comments":{"summary":"Changes the end width of this TrailRenderer.","returns":"Object of type Interpolation","param-trail":"The TrailRenderer","param-to":"new end width","param-duration":"Interpolation duration"},"params":{"trail":"TrailRenderer","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TrailRendererExtensions.DOStartWidth(TrailRenderer, float, float)","childcount":0,"type":"Method","name":"DOStartWidth","token":"public static Interpolable DOStartWidth(this TrailRenderer trail, float from, float duration)","scope":"InfinityEngine.Extensions.TrailRendererExtensions","comments":{"summary":"Changes the start width of this TrailRenderer.","returns":"Object of type Interpolation","param-trail":"The TrailRenderer","param-from":"new start width","param-duration":"Interpolation duration"},"params":{"trail":"TrailRenderer","from":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TrailRendererExtensions.DOTime(TrailRenderer, float, float)","childcount":0,"type":"Method","name":"DOTime","token":"public static Interpolable DOTime(this TrailRenderer trail, float to, float duration)","scope":"InfinityEngine.Extensions.TrailRendererExtensions","comments":{"summary":"Changes the time of this TrailRenderer.","returns":"Object of type Interpolation","param-trail":"The TrailRenderer","param-to":"new time","param-duration":"Interpolation duration"},"params":{"trail":"TrailRenderer","to":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions","childcount":34,"type":"Class","name":"TransformExtensions","token":"public static class TransformExtensions ","scope":"InfinityEngine.Extensions","comments":{"summary":"Extension methods for <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform</a>  class"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOMove(Transform, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOMove","token":"public static Interpolable DOMove(this Transform transform, Vector3 from, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Translates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  in world space.","returns":"Object of type Interpolation","param-transform":"This Transform","param-from":"from position","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"transform":"Transform","from":"Vector3","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOMove(Transform, Vector3, float)","childcount":0,"type":"Method","name":"DOMove","token":"public static Interpolable DOMove(this Transform transform, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Translates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  in world space.","returns":"Object of type Interpolation","param-transform":"This Transform","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"transform":"Transform","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOMoveLocal(Transform, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOMoveLocal","token":"public static Interpolable DOMoveLocal(this Transform transform, Vector3 from, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Translates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   in local space.","returns":"Object of type Interpolation","param-transform":"this transform","param-from":"starts value","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"transform":"Transform","from":"Vector3","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOMoveLocal(Transform, Vector3, float)","childcount":0,"type":"Method","name":"DOMoveLocal","token":"public static Interpolable DOMoveLocal(this Transform transform, Vector3 to, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Translates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   in local space.","returns":"Object of type Interpolation","param-transform":"This Transform","param-to":"finals value","param-duration":"Interpolation duration"},"params":{"transform":"Transform","to":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOShakePosition(Transform, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakePosition","token":"public static Interpolable DOShakePosition(this Transform transform, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Shakes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   position","returns":"Object of type Interpolation","param-transform":"this Transform","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"transform":"Transform","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DORotate(Transform, Quaternion, float)","childcount":0,"type":"Method","name":"DORotate","token":"public static Interpolable DORotate(this Transform transform, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Rotates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  in world space.","returns":"Object of type Interpolation","param-transform":"The transform","param-destination":"finals rotation","param-duration":"Interpolation duration"},"params":{"transform":"Transform","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DORotate(Transform, Quaternion, Quaternion, float)","childcount":0,"type":"Method","name":"DORotate","token":"public static Interpolable DORotate(this Transform transform, Quaternion starts, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Rotates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   in world space.","returns":"Object of type Interpolation","param-transform":"The transform","param-starts":"from rotation","param-destination":"finals rotation","param-duration":"Interpolation duration"},"params":{"transform":"Transform","starts":"Quaternion","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DORotateLocal(Transform, Quaternion, float)","childcount":0,"type":"Method","name":"DORotateLocal","token":"public static Interpolable DORotateLocal(this Transform transform, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Rotates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   in local space.","returns":"Object of type Interpolation","param-transform":"The transform","param-destination":"finals rotation","param-duration":"Interpolation duration"},"params":{"transform":"Transform","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DORotateLocal(Transform, Quaternion, Quaternion, float)","childcount":0,"type":"Method","name":"DORotateLocal","token":"public static Interpolable DORotateLocal(this Transform transform, Quaternion starts, Quaternion destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Rotates smoothly this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   in local space.","returns":"Object of type Interpolation","param-transform":"The transform","param-starts":"from rotation","param-destination":"finals rotation","param-duration":"Interpolation duration"},"params":{"transform":"Transform","starts":"Quaternion","destination":"Quaternion","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOShakeRotation(Transform, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakeRotation","token":"public static Interpolable DOShakeRotation(this Transform transform, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Shakes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  rotation","returns":"Object of type Interpolation","param-transform":"this Transform","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"transform":"Transform","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOScale(Transform, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"DOScale","token":"public static Interpolable DOScale(this Transform transform, Vector3 starts, Vector3 destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes smoothly the scales of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","returns":"Object of type Transition","param-transform":"The transform","param-starts":"from scale","param-destination":"finals scale","param-duration":"Transition duration"},"params":{"transform":"Transform","starts":"Vector3","destination":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOScale(Transform, Vector3, float)","childcount":0,"type":"Method","name":"DOScale","token":"public static Interpolable DOScale(this Transform transform, Vector3 destination, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes smoothly the scales of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","returns":"Object of type Interpolation","param-transform":"This Transform","param-destination":"finals scale","param-duration":"Interpolation duration"},"params":{"transform":"Transform","destination":"Vector3","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.DOShakeScale(Transform, Vector3, float, float)","childcount":0,"type":"Method","name":"DOShakeScale","token":"public static Interpolable DOShakeScale(this Transform transform, Vector3 strength, float amount, float duration)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Shakes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   scale","returns":"Object of type Interpolation","param-transform":"this Transform","param-strength":"Shake strength","param-amount":"Shake amount","param-duration":"Shake duration"},"params":{"transform":"Transform","strength":"Vector3","amount":"float","duration":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetX(Transform, float, Space)","childcount":0,"type":"Method","name":"SetX","token":"public static void SetX(this Transform transform, float x, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  x position value","param-transform":"This Transform","param-x":"new x","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","x":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetY(Transform, float, Space)","childcount":0,"type":"Method","name":"SetY","token":"public static void SetY(this Transform transform, float y, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   y position value","param-transform":"This Transform","param-y":"new y","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","y":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetZ(Transform, float, Space)","childcount":0,"type":"Method","name":"SetZ","token":"public static void SetZ(this Transform transform, float z, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  z position value","param-transform":"This Transform","param-z":"new z","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","z":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetRotationX(Transform, float, Space)","childcount":0,"type":"Method","name":"SetRotationX","token":"public static void SetRotationX(this Transform transform, float x, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   x rotation value","param-transform":"This Transform","param-x":"new x","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","x":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetRotationY(Transform, float, Space)","childcount":0,"type":"Method","name":"SetRotationY","token":"public static void SetRotationY(this Transform transform, float y, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   y rotation value","param-transform":"This Transform","param-y":"new y","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","y":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetRotationZ(Transform, float, Space)","childcount":0,"type":"Method","name":"SetRotationZ","token":"public static void SetRotationZ(this Transform transform, float z, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  z rotation value","param-transform":"This Transform","param-z":"new z","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","z":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetScaleX(Transform, float)","childcount":0,"type":"Method","name":"SetScaleX","token":"public static void SetScaleX(this Transform transform, float x)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"<a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  x scale value","param-transform":"This Transform","param-x":"new x"},"params":{"transform":"Transform","x":"float"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetScaleY(Transform, float, Space)","childcount":0,"type":"Method","name":"SetScaleY","token":"public static void SetScaleY(this Transform transform, float y, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   y scale value","param-transform":"This Transform","param-y":"new y","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","y":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetScaleZ(Transform, float, Space)","childcount":0,"type":"Method","name":"SetScaleZ","token":"public static void SetScaleZ(this Transform transform, float z, Space space = Space.World)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   z scale value","param-transform":"This Transform","param-z":"new z","param-space":"Space to use (Space.World by default)"},"params":{"transform":"Transform","z":"float","space":"Space"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.LastChild(Transform)","childcount":0,"type":"Method","name":"LastChild","token":"public static Transform LastChild(this Transform transform)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"return the last child of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","returns":"last child of this transform","param-transform":"This Transform"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.CountChild(Transform, Func<Transform, bool>)","childcount":0,"type":"Method","name":"CountChild","token":"public static int CountChild(this Transform transform, Func<Transform, bool> predicate)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Return an integer that represents the number of childs of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   that meets the given predicate","param-transform":"this Transform","param-predicate":"the predicate"},"params":{"transform":"Transform","predicate":"Func<Transform, bool>"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.GetParents(Transform)","childcount":0,"type":"Method","name":"GetParents","token":"public static List<Transform> GetParents(this Transform transform)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Return an list of all parents Transform of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.ForChild(Transform, Action<Transform>, Action)","childcount":0,"type":"Method","name":"ForChild","token":"public static void ForChild(this Transform transform, Action<Transform> action, Action callback = null)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Apply the same <paramref name=\"action\"/> for each child elements in this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","example":"The following code is an example of use of this method :\r\n         <code>\r\n             transform.ForChild(child => child.gameObject.SetActive(false));\r\n         </code>\r\n         This code deactivates all child of this transform.","remarks":"This function has an optional callback action parameter, you can use it like in the following example :\r\n         <example>\r\n         <code>\r\n             transform.ForChild(child => child.gameObject.SetActive(false), () => { Debug.Log(\"This is an example with the callback parameter\"); });\r\n         </code>\r\n         </example>","param-transform":"This Transform","param-action":"action to apply","param-callback":"callback action at the end"},"params":{"transform":"Transform","action":"Action<Transform>","callback":"Action"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.TrueForAllParent(Transform, Func<Transform, bool>)","childcount":0,"type":"Method","name":"TrueForAllParent","token":"public static bool TrueForAllParent(this Transform transform, Func<Transform, bool> predicate)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Check if the given predicate if <c>true</c> for all parents of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","example":"The following code is an example of use of this method :\r\n         <code>\r\n             Debug.Log(transform.TrueForAllParent(parent => parent.gameObject.activeSelf));\r\n         </code>\r\n         This code log <c>true</c> on Unity console if all parent of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   are active.","remarks":"This function return <c>true</c> if this <paramref name=\"transform\"/> has no parent.","returns":"<c>true</c> if this <paramref name=\"transform\"/> has no parent or if the predicate is <c>true</c> for all parent of this transform, <c>false</c> otherwise.","param-transform":"the Transform","param-predicate":"the predicate"},"params":{"transform":"Transform","predicate":"Func<Transform, bool>"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.TrueForAllChild(Transform, Func<Transform, bool>, bool)","childcount":0,"type":"Method","name":"TrueForAllChild","token":"public static bool TrueForAllChild(this Transform transform, Func<Transform, bool> predicate, bool includeSubChild = false)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Check if the given predicate if <c>true</c> for all child of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>  .","example":"The following code is an example of use of this method :\r\n         <code>\r\n             Debug.Log(transform.TrueForAllChild(child => child.gameObject.activeSelf, true));\r\n         </code>\r\n         This code log <c>true</c> on Unity console if all child of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   are active.","remarks":"This function return <c>true</c> if this <paramref name=\"transform\"/> has no child.","returns":"<c>true</c> if this <paramref name=\"transform\"/> has no child or if the predicate is <c>true</c> for all child of this transform, <c>false</c> otherwise.","param-transform":"the Transform","param-predicate":"the predicate","param-includeSubChild":"Check the predicate for all sub child"},"params":{"transform":"Transform","predicate":"Func<Transform, bool>","includeSubChild":"bool"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.TrueForAnyParent(Transform, Func<Transform, bool>)","childcount":0,"type":"Method","name":"TrueForAnyParent","token":"public static bool TrueForAnyParent(this Transform transform, Func<Transform, bool> predicate)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Check if the given predicate if <c>true</c> for any parent of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","example":"The following code is an example of use of this method :\r\n         <code>\r\n             Debug.Log(transform.TrueForAnyParent(parent => parent.gameObject.activeSelf));\r\n         </code>\r\n         This code log <c>true</c> on Unity console if any parent of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   is active.","remarks":"This function return <c>false</c> if this <paramref name=\"transform\"/> has no parent.","returns":"<c>true</c> only (it return false if this Transform has no parent) if the predicate is <c>true</c> for any parent of this Transform <c>false</c> otherwise.","param-transform":"the Transform","param-predicate":"the predicate"},"params":{"transform":"Transform","predicate":"Func<Transform, bool>"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.TrueForAnyChild(Transform, Func<Transform, bool>, bool)","childcount":0,"type":"Method","name":"TrueForAnyChild","token":"public static bool TrueForAnyChild(this Transform transform, Func<Transform, bool> predicate, bool includeSubChild = false)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Check if the given predicate if <c>true</c> for any child of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a> .","example":"The following code is an example of use of this method :\r\n         <code>\r\n             Debug.Log(transform.TrueForAnyChild(parent => parent.gameObject.activeSelf));\r\n         </code>\r\n         This code log <c>true</c> on Unity console if any child of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>   is active.","remarks":"This function return <c>false</c> if this <paramref name=\"transform\"/> has no child.","returns":"<c>true</c> only (it return false if this Transform has no child) if the predicate is <c>true</c> for any child of this Transform <c>false</c> otherwise.","param-transform":"the Transform","param-predicate":"the predicate","param-includeSubChild":"Check the predicate for all sub child"},"params":{"transform":"Transform","predicate":"Func<Transform, bool>","includeSubChild":"bool"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.GameObjectIsActive(Transform)","childcount":0,"type":"Method","name":"GameObjectIsActive","token":"public static bool GameObjectIsActive(this Transform transform)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Check this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a> \r\n         <a href=\"https://docs.unity3d.com/ScriptReference/GameObject.html\"> GameObject</a> active state","returns":"this transform GameObject active state","param-transform":"this Transform"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.SetGameObjectActive(Transform, bool)","childcount":0,"type":"Method","name":"SetGameObjectActive","token":"public static void SetGameObjectActive(this Transform transform, bool active)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Changes this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a> \r\n         <a href=\"https://docs.unity3d.com/ScriptReference/GameObject.html\"> GameObject</a> active state","param-transform":"this Transform","param-active":"new active state"},"params":{"transform":"Transform","active":"bool"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.GetChilds(Transform)","childcount":0,"type":"Method","name":"GetChilds","token":"public static List<Transform> GetChilds(this Transform transform)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Return all Transform childs of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","returns":"all childs transform of this Transform","param-transform":"this Transform"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.Extensions.TransformExtensions.GetAllComponents(Transform)","childcount":0,"type":"Method","name":"GetAllComponents","token":"public static Component[] GetAllComponents(this Transform transform)","scope":"InfinityEngine.Extensions.TransformExtensions","comments":{"summary":"Return all of this <a href=\"https://docs.unity3d.com/ScriptReference/Component.html\"> Components</a>\r\n         of this <a href=\"https://docs.unity3d.com/ScriptReference/Transform.html\"> Transform </a>","returns":"all components of this Transform","param-transform":"this Transform"},"params":{"transform":"Transform"}},{"signature":"InfinityEngine.ResourceManagement","childcount":3,"type":"Namespace","name":"InfinityEngine.ResourceManagement","token":"namespace InfinityEngine.ResourceManagement","scope":""},{"signature":"InfinityEngine.ResourceManagement.R","childcount":20,"type":"Class","name":"R","token":"public static class R ","scope":"InfinityEngine.ResourceManagement","comments":{"summary":"This class is generated automaticaly by InfinityEngine. <br/>\r\n\t  It contains constants for ISIResource plugin.  DO NOT EDIT IT !"}},{"signature":"InfinityEngine.ResourceManagement.R.animationclip","childcount":1,"type":"Class","name":"animationclip","token":"public static class animationclip ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"AnimationClip resources"}},{"signature":"InfinityEngine.ResourceManagement.R.animationclip.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.animationclip","comments":{"summary":"All AnimationClip resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.audioclip","childcount":1,"type":"Class","name":"audioclip","token":"public static class audioclip ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"AudioClip resources"}},{"signature":"InfinityEngine.ResourceManagement.R.audioclip.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.audioclip","comments":{"summary":"All AudioClip resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.font","childcount":1,"type":"Class","name":"font","token":"public static class font ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Font resources"}},{"signature":"InfinityEngine.ResourceManagement.R.font.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.font","comments":{"summary":"All Font resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.gameobject","childcount":1,"type":"Class","name":"gameobject","token":"public static class gameobject ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"GameObject resources"}},{"signature":"InfinityEngine.ResourceManagement.R.gameobject.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.gameobject","comments":{"summary":"All GameObject resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.guiskin","childcount":1,"type":"Class","name":"guiskin","token":"public static class guiskin ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"GUISkin resources"}},{"signature":"InfinityEngine.ResourceManagement.R.guiskin.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.guiskin","comments":{"summary":"All GUISkin resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.material","childcount":1,"type":"Class","name":"material","token":"public static class material ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Material resources"}},{"signature":"InfinityEngine.ResourceManagement.R.material.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.material","comments":{"summary":"All Material resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.mesh","childcount":1,"type":"Class","name":"mesh","token":"public static class mesh ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Mesh resources"}},{"signature":"InfinityEngine.ResourceManagement.R.mesh.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.mesh","comments":{"summary":"All Mesh resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.physicmaterial","childcount":1,"type":"Class","name":"physicmaterial","token":"public static class physicmaterial ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"PhysicMaterial resources"}},{"signature":"InfinityEngine.ResourceManagement.R.physicmaterial.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.physicmaterial","comments":{"summary":"All PhysicMaterial resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.physicsmaterial2d","childcount":1,"type":"Class","name":"physicsmaterial2d","token":"public static class physicsmaterial2d ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"PhysicsMaterial2D resources"}},{"signature":"InfinityEngine.ResourceManagement.R.physicsmaterial2d.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.physicsmaterial2d","comments":{"summary":"All PhysicsMaterial2D resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.shader","childcount":1,"type":"Class","name":"shader","token":"public static class shader ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Shader resources"}},{"signature":"InfinityEngine.ResourceManagement.R.shader.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.shader"},{"signature":"InfinityEngine.ResourceManagement.R.sprite","childcount":1,"type":"Class","name":"sprite","token":"public static class sprite ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Sprite resources"}},{"signature":"InfinityEngine.ResourceManagement.R.sprite.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.sprite","comments":{"summary":"All Sprite resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.textasset","childcount":1,"type":"Class","name":"textasset","token":"public static class textasset ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"TextAsset resources"}},{"signature":"InfinityEngine.ResourceManagement.R.textasset.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.textasset","comments":{"summary":"All TextAsset resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.texture2d","childcount":1,"type":"Class","name":"texture2d","token":"public static class texture2d ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Texture2D resources"}},{"signature":"InfinityEngine.ResourceManagement.R.texture2d.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.texture2d","comments":{"summary":"All Texture2D resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.layers","childcount":1,"type":"Class","name":"layers","token":"public static class layers ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"layer resources"}},{"signature":"InfinityEngine.ResourceManagement.R.layers.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.layers","comments":{"summary":"All Layer resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.tags","childcount":1,"type":"Class","name":"tags","token":"public static class tags ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"tag resources"}},{"signature":"InfinityEngine.ResourceManagement.R.tags.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.tags","comments":{"summary":"All Tag resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.strings","childcount":1,"type":"Class","name":"strings","token":"public static class strings ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"String resources"}},{"signature":"InfinityEngine.ResourceManagement.R.strings.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.strings","comments":{"summary":"All String resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.int32","childcount":1,"type":"Class","name":"int32","token":"public static class int32 ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Int32 resources"}},{"signature":"InfinityEngine.ResourceManagement.R.int32.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.int32","comments":{"summary":"All Integer resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.boolean","childcount":1,"type":"Class","name":"boolean","token":"public static class boolean ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Boolean resources"}},{"signature":"InfinityEngine.ResourceManagement.R.boolean.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.boolean","comments":{"summary":"All Boolean resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.color","childcount":1,"type":"Class","name":"color","token":"public static class color ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"Color resources"}},{"signature":"InfinityEngine.ResourceManagement.R.color.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.color","comments":{"summary":"All Color resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.R.xmldocument","childcount":1,"type":"Class","name":"xmldocument","token":"public static class xmldocument ","scope":"InfinityEngine.ResourceManagement.R","comments":{"summary":"XmlDocument resources"}},{"signature":"InfinityEngine.ResourceManagement.R.xmldocument.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.ResourceManagement.R.xmldocument","comments":{"summary":"All XmlDocument resources separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager","childcount":13,"type":"Class","name":"PoolManager","token":"public class PoolManager : Singleton<PoolManager> ","scope":"InfinityEngine.ResourceManagement"},{"signature":"InfinityEngine.ResourceManagement.PoolManager.poolers","childcount":0,"type":"Field","name":"poolers","token":"private Dictionary<string, ObjectPooler> poolers ","scope":"InfinityEngine.ResourceManagement.PoolManager"},{"signature":"InfinityEngine.ResourceManagement.PoolManager.currentPool","childcount":0,"type":"Field","name":"currentPool","token":"private ObjectPooler currentPool ","scope":"InfinityEngine.ResourceManagement.PoolManager"},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Awake()","childcount":0,"type":"Method","name":"Awake","token":"private void Awake()","scope":"InfinityEngine.ResourceManagement.PoolManager"},{"signature":"InfinityEngine.ResourceManagement.PoolManager.CreatePool(string, ObjectPooler)","childcount":0,"type":"Method","name":"CreatePool","token":"private void CreatePool(string poolName, ObjectPooler objectPool)","scope":"InfinityEngine.ResourceManagement.PoolManager","params":{"poolName":"string","objectPool":"ObjectPooler"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.GetPool(string)","childcount":0,"type":"Method","name":"GetPool","token":"private ObjectPooler GetPool(string poolName)","scope":"InfinityEngine.ResourceManagement.PoolManager","params":{"poolName":"string"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Pop(GameObject, Action<GameObject>)","childcount":0,"type":"Method","name":"Pop","token":"public static GameObject Pop(GameObject prefab, Action<GameObject> onInit)","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag.","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)","param-onInit":"Action do to when this GameObject is instantiated"},"params":{"prefab":"GameObject","onInit":"Action<GameObject>"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Pop(GameObject, Vector3, Quaternion, Space)","childcount":0,"type":"Method","name":"Pop","token":"public static GameObject Pop(GameObject prefab, Vector3 position, Quaternion rotation, Space space = 0)","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag.","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)","param-position":"Instantiates position","param-rotation":"Instantiates rotation","param-space":"if set to <c>Space.World</c>, the GameObject will be instantiated in world space.\n         Otherwise it will be instantiated in local space."},"params":{"prefab":"GameObject","position":"Vector3","rotation":"Quaternion","space":"Space"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Pop(GameObject)","childcount":0,"type":"Method","name":"Pop","token":"public static GameObject Pop(GameObject prefab)","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Instantiates a GameObject from the pool which has the given GameObject name as tag \n          at Vector3.zero and reset it rotation to Quaternion.identity","returns":"A GameObject from the PoolManager","param-prefab":"The GameObject to Pop (the name of the gameObject is used as tag)"},"params":{"prefab":"GameObject"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Push(string, GameObject)","childcount":0,"type":"Method","name":"Push","token":"private static void Push(string tag, GameObject target)","scope":"InfinityEngine.ResourceManagement.PoolManager","params":{"tag":"string","target":"GameObject"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.Push(GameObject)","childcount":0,"type":"Method","name":"Push","token":"public static void Push(GameObject target)","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Disables the given gameObject","param-target":"The GameObject"},"params":{"target":"GameObject"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.ResetPoolWithTag(string)","childcount":0,"type":"Method","name":"ResetPoolWithTag","token":"public static void ResetPoolWithTag(string tag)","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Resets (deactivates all gameobjects of the pool)  the pool with the given tag"},"params":{"tag":"string"}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.ResetAllPools()","childcount":0,"type":"Method","name":"ResetAllPools","token":"public static void ResetAllPools()","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Resets (deactivates all gameobjects) of the PoolManager."}},{"signature":"InfinityEngine.ResourceManagement.PoolManager.ClearAllPools()","childcount":0,"type":"Method","name":"ClearAllPools","token":"public static void ClearAllPools()","scope":"InfinityEngine.ResourceManagement.PoolManager","comments":{"summary":"Clears (destroy all gameobjects) of the PoolManager."}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler","childcount":11,"type":"Class","name":"ObjectPooler","token":"public class ObjectPooler ","scope":"InfinityEngine.ResourceManagement"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.prefab","childcount":0,"type":"Field","name":"prefab","token":"private GameObject prefab ","scope":"InfinityEngine.ResourceManagement.ObjectPooler"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.parent","childcount":0,"type":"Field","name":"parent","token":"private Transform parent ","scope":"InfinityEngine.ResourceManagement.ObjectPooler"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.availableGameObjects","childcount":0,"type":"Field","name":"availableGameObjects","token":"private Stack<GameObject> availableGameObjects ","scope":"InfinityEngine.ResourceManagement.ObjectPooler"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.allGameObjects","childcount":0,"type":"Field","name":"allGameObjects","token":"private List<GameObject> allGameObjects ","scope":"InfinityEngine.ResourceManagement.ObjectPooler"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.ObjectPooler(string, GameObject, int)","childcount":0,"type":"Constructor","name":"ObjectPooler","token":"public  ObjectPooler(string name, GameObject prefab, int initialCapacity)","scope":"InfinityEngine.ResourceManagement.ObjectPooler","comments":{"summary":"Creates new GameObject pool with the given <paramref name=\"name\" />  and <paramref name=\"prefab\" />.","param-name":"The name of the pool","param-prefab":"The prefab of the pool","param-initialCapacity":"Number of GameObject to instantiates"},"params":{"name":"string","prefab":"GameObject","initialCapacity":"int"}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.CreateGameObject()","childcount":0,"type":"Method","name":"CreateGameObject","token":"private GameObject CreateGameObject()","scope":"InfinityEngine.ResourceManagement.ObjectPooler"},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.Pop(Action<GameObject>)","childcount":0,"type":"Method","name":"Pop","token":"public GameObject Pop(Action<GameObject> InitAction = null)","scope":"InfinityEngine.ResourceManagement.ObjectPooler","comments":{"summary":"Returns a GameObject from the pool","returns":"A GameObject from the pool","param-InitAction":"Optional initialization action"},"params":{"InitAction":"Action<GameObject>"}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.Push(GameObject)","childcount":0,"type":"Method","name":"Push","token":"public void Push(GameObject target)","scope":"InfinityEngine.ResourceManagement.ObjectPooler","comments":{"summary":"Deactivates the given GameObject and adds it in the pool","param-target":"GameObject to deactivate"},"params":{"target":"GameObject"}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.Clear()","childcount":0,"type":"Method","name":"Clear","token":"public void Clear()","scope":"InfinityEngine.ResourceManagement.ObjectPooler","comments":{"summary":"Destroy all GameObjects of the pool"}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.Reset()","childcount":0,"type":"Method","name":"Reset","token":"public void Reset()","scope":"InfinityEngine.ResourceManagement.ObjectPooler","comments":{"summary":"Deactivates all GameObject  of the pool"}},{"signature":"InfinityEngine.ResourceManagement.ObjectPooler.SetActive(GameObject, bool)","childcount":0,"type":"Method","name":"SetActive","token":"protected void SetActive(GameObject target, bool value)","scope":"InfinityEngine.ResourceManagement.ObjectPooler","params":{"target":"GameObject","value":"bool"}},{"signature":"InfinityEngine.Serialization","childcount":4,"type":"Namespace","name":"InfinityEngine.Serialization","token":"namespace InfinityEngine.Serialization","scope":""},{"signature":"InfinityEngine.Serialization.R2","childcount":12,"type":"Class","name":"R2","token":"public static class R2 ","scope":"InfinityEngine.Serialization","comments":{"summary":"This class is generated automaticaly by InfinityEngine. <br/>\r\n\t  It contains constants for VP plugin.  DO NOT EDIT IT !"}},{"signature":"InfinityEngine.Serialization.R2.PrefGetSet<T>","childcount":4,"type":"Struct","name":"PrefGetSet<T>","token":"public struct PrefGetSet<T> ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Encapsulates a preference data"}},{"signature":"InfinityEngine.Serialization.R2.PrefGetSet<T>.mKey","childcount":0,"type":"Field","name":"mKey","token":"private string mKey ","scope":"InfinityEngine.Serialization.R2.PrefGetSet<T>"},{"signature":"InfinityEngine.Serialization.R2.PrefGetSet<T>.Key","childcount":0,"type":"Property","name":"Key","token":"public string Key { get; }","scope":"InfinityEngine.Serialization.R2.PrefGetSet<T>","comments":{"summary":"The key of the encapsulated preference"}},{"signature":"InfinityEngine.Serialization.R2.PrefGetSet<T>.Value","childcount":0,"type":"Property","name":"Value","token":"public T Value { get; set; }","scope":"InfinityEngine.Serialization.R2.PrefGetSet<T>","comments":{"summary":"The value of the encapsulated preference"}},{"signature":"InfinityEngine.Serialization.R2.PrefGetSet<T>.PrefGetSet(string)","childcount":0,"type":"Constructor","name":"PrefGetSet","token":"public  PrefGetSet(string key)","scope":"InfinityEngine.Serialization.R2.PrefGetSet<T>","comments":{"summary":"Creates new instance of this struct"},"params":{"key":"string"}},{"signature":"InfinityEngine.Serialization.R2.integers","childcount":1,"type":"Class","name":"integers","token":"public static class integers ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Integer preferences"}},{"signature":"InfinityEngine.Serialization.R2.integers.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.integers","comments":{"summary":"All Integer keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.floats","childcount":1,"type":"Class","name":"floats","token":"public static class floats ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Float preferences"}},{"signature":"InfinityEngine.Serialization.R2.floats.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.floats","comments":{"summary":"All Float keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.doubles","childcount":1,"type":"Class","name":"doubles","token":"public static class doubles ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Double preferences"}},{"signature":"InfinityEngine.Serialization.R2.doubles.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.doubles","comments":{"summary":"All Double keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.longs","childcount":1,"type":"Class","name":"longs","token":"public static class longs ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Long preferences"}},{"signature":"InfinityEngine.Serialization.R2.longs.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.longs","comments":{"summary":"All Long keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.strings","childcount":1,"type":"Class","name":"strings","token":"public static class strings ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"String preferences"}},{"signature":"InfinityEngine.Serialization.R2.strings.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.strings","comments":{"summary":"All String keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.bools","childcount":1,"type":"Class","name":"bools","token":"public static class bools ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Boolean preferences"}},{"signature":"InfinityEngine.Serialization.R2.bools.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"MCEINC_ENABLE_LOG\";","scope":"InfinityEngine.Serialization.R2.bools","comments":{"summary":"All Bool keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.vector2s","childcount":1,"type":"Class","name":"vector2s","token":"public static class vector2s ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Vector2 preferences"}},{"signature":"InfinityEngine.Serialization.R2.vector2s.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.vector2s","comments":{"summary":"All Vector2 keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.vector3s","childcount":1,"type":"Class","name":"vector3s","token":"public static class vector3s ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Vector3 preferences"}},{"signature":"InfinityEngine.Serialization.R2.vector3s.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.vector3s","comments":{"summary":"All Vector3 keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.vector4s","childcount":1,"type":"Class","name":"vector4s","token":"public static class vector4s ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Vector4 preferences"}},{"signature":"InfinityEngine.Serialization.R2.vector4s.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.vector4s","comments":{"summary":"All Vector4 keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.quaternions","childcount":1,"type":"Class","name":"quaternions","token":"public static class quaternions ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Quaternion preferences"}},{"signature":"InfinityEngine.Serialization.R2.quaternions.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.quaternions","comments":{"summary":"All Quaternion keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.R2.colors","childcount":1,"type":"Class","name":"colors","token":"public static class colors ","scope":"InfinityEngine.Serialization.R2","comments":{"summary":"Color preferences"}},{"signature":"InfinityEngine.Serialization.R2.colors.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Serialization.R2.colors","comments":{"summary":"All Color keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Serialization.Location","childcount":2,"type":"Enum","name":"Location","token":"public enum Location ","scope":"InfinityEngine.Serialization","comments":{"summary":"File location"}},{"signature":"InfinityEngine.Serialization.Location.DataPath","childcount":0,"type":"EnumValue","name":"DataPath","token":"DataPath","scope":"InfinityEngine.Serialization.Location","comments":{"summary":"<a href=\"https://docs.unity3d.com/ScriptReference/Application-dataPath.html\"> Application.dataPath</a>"}},{"signature":"InfinityEngine.Serialization.Location.PersistentDataPath","childcount":0,"type":"EnumValue","name":"PersistentDataPath","token":"PersistentDataPath","scope":"InfinityEngine.Serialization.Location","comments":{"summary":"<a href=\"https://docs.unity3d.com/ScriptReference/Application-persistentDataPath.html\"> Application.persistentDataPath</a>"}},{"signature":"InfinityEngine.Serialization.Format","childcount":2,"type":"Enum","name":"Format","token":"public enum Format ","scope":"InfinityEngine.Serialization","comments":{"summary":"Serialization format."}},{"signature":"InfinityEngine.Serialization.Format.BinaryFile","childcount":0,"type":"EnumValue","name":"BinaryFile","token":"BinaryFile","scope":"InfinityEngine.Serialization.Format","comments":{"summary":"Binary file"}},{"signature":"InfinityEngine.Serialization.Format.XmlFile","childcount":0,"type":"EnumValue","name":"XmlFile","token":"XmlFile","scope":"InfinityEngine.Serialization.Format","comments":{"summary":"Xml file"}},{"signature":"InfinityEngine.Serialization.Serializer","childcount":6,"type":"Class","name":"Serializer","token":"public static class Serializer ","scope":"InfinityEngine.Serialization","comments":{"summary":"Data serializer class."}},{"signature":"InfinityEngine.Serialization.Serializer.Serialize<T>(T, string, Location, Format)","childcount":0,"type":"Method","name":"Serialize<T>","token":"public static void Serialize<T>(T data, string path, Location location, Format format)","scope":"InfinityEngine.Serialization.Serializer","comments":{"summary":"Serializes the given object to the given path.","example":"Example 1 : Save an integer to <a href=\"https://docs.unity3d.com/ScriptReference/Application-dataPath.html\"> Application.dataPath</a> in binary format.<br /><br />\n             The following code is an example of use of this method.<br />\n             <code>\n             int value = 100;\n             Serializer.Serialize(value, \"myFile.txt\", Location.DataPath, Format.BinaryFile);\n             </code>\n             This code serialize the integer 'value' into the file 'myFile.txt'\n             and save the file at 'Application.dataPath + myFile.txt'.<br /><br />\n        \n        \n             Example 2 :  Save a serializable object 'MyClass' to  <a href=\"https://docs.unity3d.com/ScriptReference/Application-persistentDataPath.html\"> Application.persistentDataPath</a> in xml format.<br />\n            <code>\n             var myClass = new MyClass();\n             Serializer.Serialize(myClass, \"myFile.xml\", Location.PersistentdataPath, Format.XmlFile);\n             </code>\n             This code serialize the class 'myClass' into the file 'myFile.xml'\n             and save the file at 'Application.persistentDataPath + myFile.txt'.","typeparam-T":"The type of the data to serialize","param-data":"Object to serialize","param-path":"The path of the file","param-location":"File location","param-format":"Serialization format"},"params":{"data":"T","path":"string","location":"Location","format":"Format"}},{"signature":"InfinityEngine.Serialization.Serializer.Deserialize<T>(string, Location, Format)","childcount":0,"type":"Method","name":"Deserialize<T>","token":"public static T Deserialize<T>(string path, Location location, Format format)","scope":"InfinityEngine.Serialization.Serializer","comments":{"summary":"Deserializes the an object of type <c>T</c> from the given path.","example":"Example 1 : Deserialize an integer to <a href=\"https://docs.unity3d.com/ScriptReference/Application-persistentdataPath.html\"> Application.persistentdataPath</a> in xml format.<br /><br />\n             The following code is an example of use of this method.<br />\n             <code>\n             int value = Serializer.Deserialize &lt;int&gt;(\"myFile.xml\", Location.PersistentdataPath, Format.XmlFile);\n             Debug.Log(value);\n             </code><br />\n             This code deserialize and integer object from the file 'myFile.xml'placed \n             at 'Application.persistentdataPath + myFile.xml'.<br />\n        \n        \n             Example 2 :  Deserialize an object of type 'MyClass' from  <a href=\"https://docs.unity3d.com/ScriptReference/Application-dataPath.html\"> Application.dataPath</a> in binary format.<br />\n            <code>\n             var myClass = Serializer.Deserialize&lt;MyClass&gt;(\"myFile.txt\", Location.dataPath, Format.BinaryFile);\n             </code>\n             <br />\n             This code serialize the class 'myClass' into the file 'myFile.txt' and save the file at 'Application.dataPath + myFile.txt'.","typeparam-T":"The type of the data to serialize","param-path":"The path of the file","param-location":"File location","param-format":"Serialization format"},"params":{"path":"string","location":"Location","format":"Format"}},{"signature":"InfinityEngine.Serialization.Serializer.SaveFile<T>(T, string, Location)","childcount":0,"type":"Method","name":"SaveFile<T>","token":"private static void SaveFile<T>(T data, string path, Location location)","scope":"InfinityEngine.Serialization.Serializer","params":{"data":"T","path":"string","location":"Location"}},{"signature":"InfinityEngine.Serialization.Serializer.LoadFile<T>(string, Location)","childcount":0,"type":"Method","name":"LoadFile<T>","token":"private static T LoadFile<T>(string path, Location location)","scope":"InfinityEngine.Serialization.Serializer","params":{"path":"string","location":"Location"}},{"signature":"InfinityEngine.Serialization.Serializer.SaveXml<T>(T, string, Location)","childcount":0,"type":"Method","name":"SaveXml<T>","token":"private static void SaveXml<T>(T obj, string path, Location location)","scope":"InfinityEngine.Serialization.Serializer","params":{"obj":"T","path":"string","location":"Location"}},{"signature":"InfinityEngine.Serialization.Serializer.LoadXml<T>(string, Location)","childcount":0,"type":"Method","name":"LoadXml<T>","token":"private static T LoadXml<T>(string path, Location location)","scope":"InfinityEngine.Serialization.Serializer","params":{"path":"string","location":"Location"}},{"signature":"InfinityEngine.Localization","childcount":1,"type":"Namespace","name":"InfinityEngine.Localization","token":"namespace InfinityEngine.Localization","scope":""},{"signature":"InfinityEngine.Localization.R3","childcount":3,"type":"Class","name":"R3","token":"public class R3 ","scope":"InfinityEngine.Localization","comments":{"summary":"This class is generated automaticaly by InfinityEngine. <br/>\r\n\t  It contains constants for ISILocalization plugin.  DO NOT EDIT IT !"}},{"signature":"InfinityEngine.Localization.R3.strings","childcount":1,"type":"Class","name":"strings","token":"public static class strings ","scope":"InfinityEngine.Localization.R3","comments":{"summary":"Localized strings"}},{"signature":"InfinityEngine.Localization.R3.strings.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Localization.R3.strings","comments":{"summary":"All strings keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Localization.R3.audios","childcount":1,"type":"Class","name":"audios","token":"public static class audios ","scope":"InfinityEngine.Localization.R3","comments":{"summary":"Localized audio clips"}},{"signature":"InfinityEngine.Localization.R3.audios.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Localization.R3.audios","comments":{"summary":"All strings keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Localization.R3.sprites","childcount":1,"type":"Class","name":"sprites","token":"public static class sprites ","scope":"InfinityEngine.Localization.R3","comments":{"summary":"Localized sprites"}},{"signature":"InfinityEngine.Localization.R3.sprites.Names","childcount":0,"type":"Field","name":"Names","token":"public const string Names = \"\";","scope":"InfinityEngine.Localization.R3.sprites","comments":{"summary":"All sprites keys separated by ','. You can created an array by using string.split() method"}},{"signature":"InfinityEngine.Interpolations","childcount":10,"type":"Namespace","name":"InfinityEngine.Interpolations","token":"namespace InfinityEngine.Interpolations","scope":"","comments":{"summary":"This namespace allow to creates smooth animations thanks to interpolation formulas."}},{"signature":"InfinityEngine.Interpolations.DoubleColor","childcount":15,"type":"Struct","name":"DoubleColor","token":"public struct DoubleColor ","scope":"InfinityEngine.Interpolations"},{"signature":"InfinityEngine.Interpolations.DoubleColor.first","childcount":0,"type":"Field","name":"first","token":"public Color first ","scope":"InfinityEngine.Interpolations.DoubleColor"},{"signature":"InfinityEngine.Interpolations.DoubleColor.second","childcount":0,"type":"Field","name":"second","token":"public Color second ","scope":"InfinityEngine.Interpolations.DoubleColor"},{"signature":"InfinityEngine.Interpolations.DoubleColor.First","childcount":0,"type":"Property","name":"First","token":"public Color First { get; set; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"The first Color"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.Second","childcount":0,"type":"Property","name":"Second","token":"public Color Second { get; set; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"The second Color"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.this[int index]","childcount":0,"type":"Property","name":"this[int index]","token":"public Color this[int index] { get; set; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Indexer to get or set colors within this DoubleColor using array index syntax.","returns":"The indexed item.","exception-ArgumentOutOfRangeException":"Thrown when one or more arguments are outside\r\n                                                         the required range.","param-index":"Zero-based index of the entry to access."}},{"signature":"InfinityEngine.Interpolations.DoubleColor.white","childcount":0,"type":"Property","name":"white","token":"public static DoubleColor white { get; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Store two white colors"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.red","childcount":0,"type":"Property","name":"red","token":"public static DoubleColor red { get; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Store two red colors"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.blue","childcount":0,"type":"Property","name":"blue","token":"public static DoubleColor blue { get; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Store two blue colors"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.green","childcount":0,"type":"Property","name":"green","token":"public static DoubleColor green { get; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Store two green colors"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.black","childcount":0,"type":"Property","name":"black","token":"public static DoubleColor black { get; }","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Store two black colors"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.DoubleColor(Color, Color)","childcount":0,"type":"Constructor","name":"DoubleColor","token":"public  DoubleColor(Color first, Color second)","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Creates new struct that contains 2 colors","param-first":"the first color","param-second":"the second color"},"params":{"first":"Color","second":"Color"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.operator +(DoubleColor, DoubleColor)","childcount":0,"type":"Operator","name":"operator +","token":"public static DoubleColor operator +(DoubleColor first, DoubleColor second)","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Addition operation between 2 DoubleColor objects.","returns":"The result of the operation.","param-first":"The first object.","param-second":"The second object."},"params":{"first":"DoubleColor","second":"DoubleColor"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.operator -(DoubleColor, DoubleColor)","childcount":0,"type":"Operator","name":"operator -","token":"public static DoubleColor operator -(DoubleColor fist, DoubleColor second)","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Subtraction operation between 2 DoubleColor objects.","returns":"The result of the operation.","param-fist":"The first object.","param-second":"The second object."},"params":{"fist":"DoubleColor","second":"DoubleColor"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.operator *(DoubleColor, float)","childcount":0,"type":"Operator","name":"operator *","token":"public static DoubleColor operator *(DoubleColor first, float value)","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Multiplication operation between a DoubleColor object and a float.","returns":"The result of the operation.","param-first":"The DoubleColor object.","param-value":"The value of the float."},"params":{"first":"DoubleColor","value":"float"}},{"signature":"InfinityEngine.Interpolations.DoubleColor.operator /(DoubleColor, float)","childcount":0,"type":"Operator","name":"operator /","token":"public static DoubleColor operator /(DoubleColor first, float value)","scope":"InfinityEngine.Interpolations.DoubleColor","comments":{"summary":"Division operation between a DoubleColor object and a float.","returns":"The result of the operation.","param-first":"The DoubleColor object.","param-value":"The value of the float."},"params":{"first":"DoubleColor","value":"float"}},{"signature":"InfinityEngine.Interpolations.EaseTypes","childcount":42,"type":"Enum","name":"EaseTypes","token":"public enum EaseTypes ","scope":"InfinityEngine.Interpolations","comments":{"summary":"EaseType allow you to apply custom mathematical formulas to an animation.","example":"<br />\n       Preview of ease functions (images from MSDN documentation).<br />\n      <ul>\n         <li>Ease back : <br /> <img src=\"images/ISI Interpolation/ease_back.png\" /></li>\n         <li>Ease Bounce : <br /> <img src=\"images/ISI Interpolation/ease_bounce.png\" /></li>\n         <li>Ease Circle : <br /> <img src=\"images/ISI Interpolation/ease_circle.png\" /></li>\n         <li>Ease Cubic : <br /> <img src=\"images/ISI Interpolation/ease_cubic.png\" /></li>\n         <li>Ease Elastic : <br /> <img src=\"images/ISI Interpolation/ease_elastic.png\" /></li>\n         <li>Ease Exponential : <br /> <img src=\"images/ISI Interpolation/ease_exponential.png\" /></li>\n         <li>Ease Quadratic : <br /> <img src=\"images/ISI Interpolation/ease_quadratic.png\" /></li>\n         <li>Ease Quartic : <br /> <img src=\"images/ISI Interpolation/ease_quartic.png\" /></li>\n         <li>Ease Quintic : <br /> <img src=\"images/ISI Interpolation/ease_quintic.png\" /></li>\n         <li>Ease Sine : <br /> <img src=\"images/ISI Interpolation/ease_sine.png\" /></li>\n      </ul>"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.Linear","childcount":0,"type":"EnumValue","name":"Linear","token":"Linear","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"linear interpolation"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.Custom","childcount":0,"type":"EnumValue","name":"Custom","token":"Custom","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates a custom ease function defined by an <a href=\"https://docs.unity3d.com/ScriptReference/AnimationCurve.html\">AnimationCurve</a>"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuadIn","childcount":0,"type":"EnumValue","name":"QuadIn","token":"QuadIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using the formula f( t) = t^2."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuadOut","childcount":0,"type":"EnumValue","name":"QuadOut","token":"QuadOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using the formula f( t) = t^2."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuadInOut","childcount":0,"type":"EnumValue","name":"QuadInOut","token":"QuadInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using the formula f( t) = t^2."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuadOutIn","childcount":0,"type":"EnumValue","name":"QuadOutIn","token":"QuadOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using the formula f( t) = t^2."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CubicIn","childcount":0,"type":"EnumValue","name":"CubicIn","token":"CubicIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using the formula f( t) = t^3."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CubicOut","childcount":0,"type":"EnumValue","name":"CubicOut","token":"CubicOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using the formula f( t) = t^3."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CubicInOut","childcount":0,"type":"EnumValue","name":"CubicInOut","token":"CubicInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using the formula f( t) = t^3."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CubicOutIn","childcount":0,"type":"EnumValue","name":"CubicOutIn","token":"CubicOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using the formula f( t) = t^3."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuartIn","childcount":0,"type":"EnumValue","name":"QuartIn","token":"QuartIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using the formula f( t) = t^4."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuartOut","childcount":0,"type":"EnumValue","name":"QuartOut","token":"QuartOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using the formula f( t) = t^4."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuartInOut","childcount":0,"type":"EnumValue","name":"QuartInOut","token":"QuartInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using the formula f( t) = t^4."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuartOutIn","childcount":0,"type":"EnumValue","name":"QuartOutIn","token":"QuartOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using the formula f( t) = t^4."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuintIn","childcount":0,"type":"EnumValue","name":"QuintIn","token":"QuintIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using the formula f( t) = t^5."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuintOut","childcount":0,"type":"EnumValue","name":"QuintOut","token":"QuintOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using the formula f( t) = t^5."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuintInOut","childcount":0,"type":"EnumValue","name":"QuintInOut","token":"QuintInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using the formula f( t) = t^5."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.QuintOutIn","childcount":0,"type":"EnumValue","name":"QuintOutIn","token":"QuintOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using the formula f( t) = t^5."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.SineIn","childcount":0,"type":"EnumValue","name":"SineIn","token":"SineIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using a sine formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.SineOut","childcount":0,"type":"EnumValue","name":"SineOut","token":"SineOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using a sine formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.SineInOut","childcount":0,"type":"EnumValue","name":"SineInOut","token":"SineInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using a sine formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.SineOutIn","childcount":0,"type":"EnumValue","name":"SineOutIn","token":"SineOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using a sine formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ExpoIn","childcount":0,"type":"EnumValue","name":"ExpoIn","token":"ExpoIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using an exponential formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ExpoOut","childcount":0,"type":"EnumValue","name":"ExpoOut","token":"ExpoOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using a exponential formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ExpoInOut","childcount":0,"type":"EnumValue","name":"ExpoInOut","token":"ExpoInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using a exponential formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ExpoOutIn","childcount":0,"type":"EnumValue","name":"ExpoOutIn","token":"ExpoOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using a exponential formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CircIn","childcount":0,"type":"EnumValue","name":"CircIn","token":"CircIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates using a circular formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CircOut","childcount":0,"type":"EnumValue","name":"CircOut","token":"CircOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates using a circular formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CircInOut","childcount":0,"type":"EnumValue","name":"CircInOut","token":"CircInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that accelerates and decelerates using a circular formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.CircOutIn","childcount":0,"type":"EnumValue","name":"CircOutIn","token":"CircOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that decelerates and accelerates using a circular formula."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ElasticIn","childcount":0,"type":"EnumValue","name":"ElasticIn","token":"ElasticIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that resembles a spring oscillating back and forth."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ElasticOut","childcount":0,"type":"EnumValue","name":"ElasticOut","token":"ElasticOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that resembles a spring oscillating forth and back at the end."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ElasticInOut","childcount":0,"type":"EnumValue","name":"ElasticInOut","token":"ElasticInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that resembles a spring oscillating back and forth at the beginning and forth and back the end."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.ElasticOutIn","childcount":0,"type":"EnumValue","name":"ElasticOutIn","token":"ElasticOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates an animation that resembles a spring oscillating forth and back at the beginning and back and forth the end."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BackIn","childcount":0,"type":"EnumValue","name":"BackIn","token":"BackIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Retracts the motion of an animation slightly before it begins."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BackOut","childcount":0,"type":"EnumValue","name":"BackOut","token":"BackOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Retracts the motion of an animation slightly before it ends."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BackInOut","childcount":0,"type":"EnumValue","name":"BackInOut","token":"BackInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Retracts the motion of an animation slightly before it begins and before it ends."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BackOutIn","childcount":0,"type":"EnumValue","name":"BackOutIn","token":"BackOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Retracts the motion of an animation slightly after it begins and after it ends."}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BounceIn","childcount":0,"type":"EnumValue","name":"BounceIn","token":"BounceIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates a bouncing effect at the beginning"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BounceOut","childcount":0,"type":"EnumValue","name":"BounceOut","token":"BounceOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates a bouncing effect at the ends"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BounceInOut","childcount":0,"type":"EnumValue","name":"BounceInOut","token":"BounceInOut","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates a bouncing effect at the beginning and the ends"}},{"signature":"InfinityEngine.Interpolations.EaseTypes.BounceOutIn","childcount":0,"type":"EnumValue","name":"BounceOutIn","token":"BounceOutIn","scope":"InfinityEngine.Interpolations.EaseTypes","comments":{"summary":"Creates a bouncing effect at the beginning and the ends"}},{"signature":"InfinityEngine.Interpolations.Easing","childcount":35,"type":"Class","name":"Easing","token":"public static class Easing ","scope":"InfinityEngine.Interpolations","comments":{"summary":"Easing class allow you to apply custom mathematical formulas to an animation. \n    \n       This produces a realistics animations effect like bounce effect.."}},{"signature":"InfinityEngine.Interpolations.Easing.Ease<T>(EaseTypes, T, T, float, AnimationCurve, RotationModes)","childcount":0,"type":"Method","name":"Ease<T>","token":"public static T Ease<T>(EaseTypes type, T from, T to, float time, AnimationCurve motion = null, RotationModes rotationMode = RotationModes.Fast)","scope":"InfinityEngine.Interpolations.Easing","comments":{"summary":"Interpolate the value of the given object of type <c>T</c> between <paramref name=\"from\" /> and <paramref name=\"to\" />\n         in <paramref name=\"time\" /> seconds","typeparam-T":"Type to Ease","param-type":"Ease Type (Exemple : slow at start and fast at the end)","param-from":"initial value","param-to":"final value","param-time":"duration","param-motion":"Custom motion curve <default>null</default>","param-rotationMode":"Rotation mode in the case of Quaternion interpolation"},"params":{"type":"EaseTypes","from":"T","to":"T","time":"float","motion":"AnimationCurve","rotationMode":"RotationModes"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, float, float, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static float Ease(EaseTypes type, float from, float to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"float","to":"float","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, int, int, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static int Ease(EaseTypes type, int from, int to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"int","to":"int","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Vector2, Vector2, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static Vector2 Ease(EaseTypes type, Vector2 from, Vector2 to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector2","to":"Vector2","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Vector3, Vector3, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static Vector3 Ease(EaseTypes type, Vector3 from, Vector3 to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector3","to":"Vector3","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Vector4, Vector4, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static Vector4 Ease(EaseTypes type, Vector4 from, Vector4 to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector4","to":"Vector4","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Quaternion, Quaternion, float, AnimationCurve, RotationModes)","childcount":0,"type":"Method","name":"Ease","token":"private static Quaternion Ease(EaseTypes type, Quaternion from, Quaternion to, float time, AnimationCurve motion = null, RotationModes mode = RotationModes.Fast)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Quaternion","to":"Quaternion","time":"float","motion":"AnimationCurve","mode":"RotationModes"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Color, Color, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static Color Ease(EaseTypes type, Color from, Color to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Color","to":"Color","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, Rect, Rect, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static Rect Ease(EaseTypes type, Rect from, Rect to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Rect","to":"Rect","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Ease(EaseTypes, RectOffset, RectOffset, float, AnimationCurve)","childcount":0,"type":"Method","name":"Ease","token":"private static RectOffset Ease(EaseTypes type, RectOffset from, RectOffset to, float time, AnimationCurve motion = null)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"RectOffset","to":"RectOffset","time":"float","motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, float, float, float)","childcount":0,"type":"Method","name":"Get","token":"private static float Get(EaseTypes type, float from, float to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"float","to":"float","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Vector2, Vector2, float)","childcount":0,"type":"Method","name":"Get","token":"private static Vector2 Get(EaseTypes type, Vector2 from, Vector2 to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector2","to":"Vector2","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Vector3, Vector3, float)","childcount":0,"type":"Method","name":"Get","token":"private static Vector3 Get(EaseTypes type, Vector3 from, Vector3 to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector3","to":"Vector3","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Vector4, Vector4, float)","childcount":0,"type":"Method","name":"Get","token":"private static Vector4 Get(EaseTypes type, Vector4 from, Vector4 to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Vector4","to":"Vector4","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Quaternion, Quaternion, float)","childcount":0,"type":"Method","name":"Get","token":"private static Quaternion Get(EaseTypes type, Quaternion from, Quaternion to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Quaternion","to":"Quaternion","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Quaternion, Quaternion, float, RotationModes)","childcount":0,"type":"Method","name":"Get","token":"private static Quaternion Get(EaseTypes type, Quaternion from, Quaternion to, float t, RotationModes mode)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Quaternion","to":"Quaternion","t":"float","mode":"RotationModes"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Color, Color, float)","childcount":0,"type":"Method","name":"Get","token":"private static Color Get(EaseTypes type, Color from, Color to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Color","to":"Color","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, Rect, Rect, float)","childcount":0,"type":"Method","name":"Get","token":"private static Rect Get(EaseTypes type, Rect from, Rect to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"Rect","to":"Rect","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Get(EaseTypes, RectOffset, RectOffset, float)","childcount":0,"type":"Method","name":"Get","token":"private static RectOffset Get(EaseTypes type, RectOffset from, RectOffset to, float t)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"RectOffset","to":"RectOffset","t":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.In(Func<float, float, float>, float, float, float, float)","childcount":0,"type":"Method","name":"In","token":"private static float In(Func<float, float, float> function, float time, float begin, float change, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"function":"Func<float, float, float>","time":"float","begin":"float","change":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Out(Func<float, float, float>, float, float, float, float)","childcount":0,"type":"Method","name":"Out","token":"private static float Out(Func<float, float, float> function, float time, float begin, float change, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"function":"Func<float, float, float>","time":"float","begin":"float","change":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.InOut(Func<float, float, float>, float, float, float, float)","childcount":0,"type":"Method","name":"InOut","token":"private static float InOut(Func<float, float, float> function, float time, float begin, float change, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"function":"Func<float, float, float>","time":"float","begin":"float","change":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.OutIn(Func<float, float, float>, float, float, float, float)","childcount":0,"type":"Method","name":"OutIn","token":"private static float OutIn(Func<float, float, float> function, float time, float begin, float change, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"function":"Func<float, float, float>","time":"float","begin":"float","change":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Linear(float, float)","childcount":0,"type":"Method","name":"Linear","token":"private static float Linear(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Quad(float, float)","childcount":0,"type":"Method","name":"Quad","token":"private static float Quad(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Cubic(float, float)","childcount":0,"type":"Method","name":"Cubic","token":"private static float Cubic(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Quart(float, float)","childcount":0,"type":"Method","name":"Quart","token":"private static float Quart(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Quint(float, float)","childcount":0,"type":"Method","name":"Quint","token":"private static float Quint(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Sine(float, float)","childcount":0,"type":"Method","name":"Sine","token":"private static float Sine(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Expo(float, float)","childcount":0,"type":"Method","name":"Expo","token":"private static float Expo(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Circ(float, float)","childcount":0,"type":"Method","name":"Circ","token":"private static float Circ(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Elastic(float, float)","childcount":0,"type":"Method","name":"Elastic","token":"private static float Elastic(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Back(float, float)","childcount":0,"type":"Method","name":"Back","token":"private static float Back(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Bounce(float, float)","childcount":0,"type":"Method","name":"Bounce","token":"private static float Bounce(float time, float duration = 1f)","scope":"InfinityEngine.Interpolations.Easing","params":{"time":"float","duration":"float"}},{"signature":"InfinityEngine.Interpolations.Easing.Equation(EaseTypes, float, float, float)","childcount":0,"type":"Method","name":"Equation","token":"private static float Equation(EaseTypes type, float from, float to, float time)","scope":"InfinityEngine.Interpolations.Easing","params":{"type":"EaseTypes","from":"float","to":"float","time":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolable","childcount":37,"type":"Interface","name":"Interpolable","token":"public interface Interpolable ","scope":"InfinityEngine.Interpolations","comments":{"summary":"Base interface of <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> class.<br />\n      As the class <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> is generic and unusable with sequence objects,<br />\n      This interface works as an marker an provides access to the members of <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> class."}},{"signature":"InfinityEngine.Interpolations.Interpolable.Type","childcount":0,"type":"Property","name":"Type","token":"Type Type { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"The type of the data to interpolate."}},{"signature":"InfinityEngine.Interpolations.Interpolable.CompletedPercent","childcount":0,"type":"Property","name":"CompletedPercent","token":"float CompletedPercent { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating the current completed percent of the interpolation."}},{"signature":"InfinityEngine.Interpolations.Interpolable.IsTerminated","childcount":0,"type":"Property","name":"IsTerminated","token":"bool IsTerminated { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolation is terminated.","remarks":"The value is <c>true</c> only if the interpolation has already been launched and it is currently complete."}},{"signature":"InfinityEngine.Interpolations.Interpolable.IsStarted","childcount":0,"type":"Property","name":"IsStarted","token":"bool IsStarted { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolation is started (<c>true</c> only after a call of the function <see cref=\"M:InfinityEngine.Interpolations.Interpolable.Start\" />)"}},{"signature":"InfinityEngine.Interpolations.Interpolable.IsPlaying","childcount":0,"type":"Property","name":"IsPlaying","token":"bool IsPlaying { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolation is playing. (<c>true</c> only if the interpolation is playing -&gt; <c>false</c> on pause state)"}},{"signature":"InfinityEngine.Interpolations.Interpolable.IsPaused","childcount":0,"type":"Property","name":"IsPaused","token":"bool IsPaused { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolation is paused."}},{"signature":"InfinityEngine.Interpolations.Interpolable.Duration","childcount":0,"type":"Property","name":"Duration","token":"float Duration { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating the duration of the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolable.RepeatCount","childcount":0,"type":"Property","name":"RepeatCount","token":"int RepeatCount { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating the number of times the interpolation will be repeated. (-1 indicates an infinite repetition)"}},{"signature":"InfinityEngine.Interpolations.Interpolable.StartDelay","childcount":0,"type":"Property","name":"StartDelay","token":"float StartDelay { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value"}},{"signature":"InfinityEngine.Interpolations.Interpolable.RepeatInterval","childcount":0,"type":"Property","name":"RepeatInterval","token":"float RepeatInterval { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating the pause time between each repetition of the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolable.HasGameObject","childcount":0,"type":"Property","name":"HasGameObject","token":"bool HasGameObject { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolation is linked to a GameObject"}},{"signature":"InfinityEngine.Interpolations.Interpolable.IsCached","childcount":0,"type":"Property","name":"IsCached","token":"bool IsCached { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating whether the interpolable object is cached to be reused. (<c>false</c> by default)"}},{"signature":"InfinityEngine.Interpolations.Interpolable.LoopType","childcount":0,"type":"Property","name":"LoopType","token":"LoopTypes LoopType { get; }","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Gets a value indicating the type of repetition."}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetNewEnd(object)","childcount":0,"type":"Method","name":"SetNewEnd","token":"Interpolable SetNewEnd(object value)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Changes the start value","returns":"this","exception-T:System.ArgumentException":"Throwed when the type of the given <c>value</c> \n         is not the same as the type of the generic parameter <c>T</c> of interpolable.","param-value":"new value"},"params":{"value":"object"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetNewStart(object)","childcount":0,"type":"Method","name":"SetNewStart","token":"Interpolable SetNewStart(object value)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Changes the end value","returns":"this","exception-T:System.ArgumentException":"Throwed when the type of the given <c>value</c> \n         is not the same as the type of the generic parameter <c>T</c> of interpolable.","param-value":"new value"},"params":{"value":"object"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetStartDelay(float)","childcount":0,"type":"Method","name":"SetStartDelay","token":"Interpolable SetStartDelay(float delay)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Waits a while before starts the interpolable","returns":"this","param-delay":"delay in seconds"},"params":{"delay":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetRepeat(int, LoopTypes)","childcount":0,"type":"Method","name":"SetRepeat","token":"Interpolable SetRepeat(int repeat, LoopTypes loopType = LoopTypes.Restart)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Repeat the interpolation (-1 = infinite loop)","returns":"this","param-repeat":"number of loop","param-loopType":"Loop type"},"params":{"repeat":"int","loopType":"LoopTypes"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetRepeatInterval(float)","childcount":0,"type":"Method","name":"SetRepeatInterval","token":"Interpolable SetRepeatInterval(float interval)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Waits a while after completes the interpolation before restarting or reversing it in repeat case.","returns":"this","param-interval":"Repeat interval in seconds"},"params":{"interval":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetEase(EaseTypes)","childcount":0,"type":"Method","name":"SetEase","token":"Interpolable SetEase(EaseTypes easeType)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Ease function to use.","returns":"this","param-easeType":"Ease function"},"params":{"easeType":"EaseTypes"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetEase(AnimationCurve)","childcount":0,"type":"Method","name":"SetEase","token":"Interpolable SetEase(AnimationCurve motion)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Use Custom <a href=\"https://docs.unity3d.com/ScriptReference/AnimationCurve.html\"> AnimationCurve </a>  as ease function.","returns":"this","param-motion":"the animation curve to use"},"params":{"motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetOptions(InterpolationOptions)","childcount":0,"type":"Method","name":"SetOptions","token":"Interpolable SetOptions(InterpolationOptions options)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Apply the given options to interpolable.","returns":"this","param-options":"The options"},"params":{"options":"InterpolationOptions"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetDisableOnPause(bool)","childcount":0,"type":"Method","name":"SetDisableOnPause","token":"Interpolable SetDisableOnPause(bool flag)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Disables interpolable when Unity <a href=\"https://docs.unity3d.com/ScriptReference/Time-timeScale.html\"> Time.timeScale </a> is set to <c>0</c>.","returns":"this","param-flag":"if set to <c>true</c> interpolable will be paused when the application is on pause"},"params":{"flag":"bool"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetNewDuration(float)","childcount":0,"type":"Method","name":"SetNewDuration","token":"Interpolable SetNewDuration(float value)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Changes the duration","returns":"this","param-value":"new duration"},"params":{"value":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetDisableOnHide(bool)","childcount":0,"type":"Method","name":"SetDisableOnHide","token":"Interpolable SetDisableOnHide(bool flag)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Disables the interpolable when the GameObject which is linked to it is inactive.","returns":"this","param-flag":"if set to <c>true</c> interpolable will be paused when the GameObject which is linked to it is inactive."},"params":{"flag":"bool"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetRotationMode(RotationModes)","childcount":0,"type":"Method","name":"SetRotationMode","token":"Interpolable SetRotationMode(RotationModes mode)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Sets the rotation mode of interpolable in the case of Quaternion interpolation","param-mode":"The rotation mode"},"params":{"mode":"RotationModes"}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetGameObject(GameObject)","childcount":0,"type":"Method","name":"SetGameObject","token":"Interpolable SetGameObject(GameObject go)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Attach a GameObject to interpolable.","returns":"this","param-go":"GameObject to attach"},"params":{"go":"GameObject"}},{"signature":"InfinityEngine.Interpolations.Interpolable.Reverse()","childcount":0,"type":"Method","name":"Reverse","token":"Interpolable Reverse()","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Reverse the interpolable"}},{"signature":"InfinityEngine.Interpolations.Interpolable.Start()","childcount":0,"type":"Method","name":"Start","token":"Interpolable Start()","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Starts the interpolation and return it","returns":"The interpolable"}},{"signature":"InfinityEngine.Interpolations.Interpolable.Terminate()","childcount":0,"type":"Method","name":"Terminate","token":"Interpolable Terminate()","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Terminates the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolable.PauseFor(float)","childcount":0,"type":"Method","name":"PauseFor","token":"Interpolable PauseFor(float time)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Pauses the interpolation for the given seconds","param-time":"Pause time"},"params":{"time":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolable.TogglePause()","childcount":0,"type":"Method","name":"TogglePause","token":"Interpolable TogglePause()","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Toggle the pause state."}},{"signature":"InfinityEngine.Interpolations.Interpolable.SetCached()","childcount":0,"type":"Method","name":"SetCached","token":"Interpolable SetCached()","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Allow you to manually control the lifecycle of the interpolable (required when you assign the interpolable to an variable that you reuse)"}},{"signature":"InfinityEngine.Interpolations.Interpolable.OnStart(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnStart","token":"Interpolable OnStart(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Add a callback action to do at the begining of the interpolation.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnStart(arg =&gt; \n                                             {\n                                                 arg.SetNewEnd(50);\n                                             });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolate \"a\" value from 0 to 10 in 5 seconds and modify the end value of the interpolation when it starts.","returns":"this","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolable.OnPause(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnPause","token":"Interpolable OnPause(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Add a callback action to do when the interpolation is paused.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnStart(arg =&gt; {Debug.Log(\"On Pause\"); });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolate \"a\" value from 0 to 10 in 5 seconds and print \"On Pause\" when 'interpolation' is paused.","returns":"this","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolable.OnUpdate(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnUpdate","token":"Interpolable OnUpdate(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Add a callback action to do when the interpolation is updating.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 var interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnUpdate((arg) =&gt; {\n                                                 if(arg.CompletedPercent &gt;= .5f)\n                                                     arg.Terminate();\n        \n                                             });\n        \n                 interpolation.Start();\n             </code>\n             This code interpolate \"a\" value from 0 to 10 in 5 seconds and stop the interpolation when it is completed at 50%.","returns":"this","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolable.OnComplete(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnComplete","token":"Interpolable OnComplete(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Add a callback action to do when the interpolation reached  the end value.","example":"The following code is an example of use of this method :\n             <code>\n        \n                var interpolation = Infinity.To(0, newValue=&gt; a = newValue, 10, 5)\n                         .SetRepeat(2)\n                         .OnComplete(arg =&gt; arg.Reverse() );\n                 interpolation.Start();\n              </code>\n             This code interpolate \"a\" value from 0 to 10 in 5 seconds, then from 10 to 0 in 5 seconds.","returns":"this","param-action":"Callback action to do"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolable.OnTerminate(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnTerminate","token":"Interpolable OnTerminate(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolable","comments":{"summary":"Action to do when the interpolation is stopped.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnTerminate(arg =&gt; {Debug.Log(\"On Terminate\"); });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolate \"a\" value from 0 to 10 in 5 seconds and print \"On Terminate\" when 'interpolation' is finished.","returns":"this","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>","childcount":80,"type":"Class","name":"Interpolation<T>","token":"public class Interpolation<T> : Interpolable ","scope":"InfinityEngine.Interpolations"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SupportedTypes","childcount":0,"type":"Field","name":"SupportedTypes","token":"public static readonly HashSet<Type> SupportedTypes = new HashSet<Type>\n        {\n            typeof(float),\n            typeof(int),\n            typeof(Vector2),\n            typeof(Vector3),\n            typeof(Vector4),\n            typeof(Quaternion),\n            typeof(Color),\n            typeof(Rect),\n            typeof(RectOffset)\n        };","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"List of types supported as generic parameter of this class."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mGameObject","childcount":0,"type":"Field","name":"mGameObject","token":"private GameObject mGameObject ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mStartValue","childcount":0,"type":"Field","name":"mStartValue","token":"private T mStartValue ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mEndValue","childcount":0,"type":"Field","name":"mEndValue","token":"private T mEndValue ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mType","childcount":0,"type":"Field","name":"mType","token":"private Type mType ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mIsTerminated","childcount":0,"type":"Field","name":"mIsTerminated","token":"private bool mIsTerminated ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mIsPlaying","childcount":0,"type":"Field","name":"mIsPlaying","token":"private bool mIsPlaying ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mIspaused","childcount":0,"type":"Field","name":"mIspaused","token":"private bool mIspaused ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mHasGameObject","childcount":0,"type":"Field","name":"mHasGameObject","token":"private bool mHasGameObject ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mIsStarted","childcount":0,"type":"Field","name":"mIsStarted","token":"private bool mIsStarted ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mIsCached","childcount":0,"type":"Field","name":"mIsCached","token":"private bool mIsCached ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mSetter","childcount":0,"type":"Field","name":"mSetter","token":"private Action<T> mSetter ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mRepeatCount","childcount":0,"type":"Field","name":"mRepeatCount","token":"private int mRepeatCount ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mCurrentTime","childcount":0,"type":"Field","name":"mCurrentTime","token":"private float mCurrentTime ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mDuration","childcount":0,"type":"Field","name":"mDuration","token":"private float mDuration ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mStartDelay","childcount":0,"type":"Field","name":"mStartDelay","token":"private float mStartDelay ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mRepeatInterval","childcount":0,"type":"Field","name":"mRepeatInterval","token":"private float mRepeatInterval ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mLastTimeScale","childcount":0,"type":"Field","name":"mLastTimeScale","token":"private float mLastTimeScale ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mEaseType","childcount":0,"type":"Field","name":"mEaseType","token":"private EaseTypes mEaseType ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mLoopType","childcount":0,"type":"Field","name":"mLoopType","token":"private LoopTypes mLoopType ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mRotationMode","childcount":0,"type":"Field","name":"mRotationMode","token":"private RotationModes mRotationMode ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mDisableOnPause","childcount":0,"type":"Field","name":"mDisableOnPause","token":"private bool mDisableOnPause ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mDisableOnHide","childcount":0,"type":"Field","name":"mDisableOnHide","token":"private bool mDisableOnHide ","scope":"InfinityEngine.Interpolations.Interpolation<T>"},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.mCustomEase","childcount":0,"type":"Field","name":"mCustomEase","token":"private AnimationCurve mCustomEase ","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Custom ease function"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.GameObject","childcount":0,"type":"Property","name":"GameObject","token":"public GameObject GameObject { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"The GameObject linked to the interpolation if it exists"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.CompletedPercent","childcount":0,"type":"Property","name":"CompletedPercent","token":"public float CompletedPercent { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating the current completed percent of the interpolation."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsCached","childcount":0,"type":"Property","name":"IsCached","token":"public bool IsCached { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolable object is cached to be reused. (<c>false</c> by default)"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsStarted","childcount":0,"type":"Property","name":"IsStarted","token":"public bool IsStarted { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation is started (<c>true</c> only after a call of the function <see cref=\"M:InfinityEngine.Interpolations.Interpolation`1.Start\" />)"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsPlaying","childcount":0,"type":"Property","name":"IsPlaying","token":"public bool IsPlaying { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation is playing. (<c>true</c> only if the interpolation is playing -&gt; <c>false</c> on pause state)"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsPaused","childcount":0,"type":"Property","name":"IsPaused","token":"public bool IsPaused { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation is paused."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsTerminated","childcount":0,"type":"Property","name":"IsTerminated","token":"public bool IsTerminated { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation is terminated.","remarks":"The value is <c>true</c> only if the interpolation has already been launched and it is currently complete."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.TimeScale","childcount":0,"type":"Property","name":"TimeScale","token":"public float TimeScale { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets the time scale of the interpolation.\n         The duration of the interpolation by this value on each update."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Type","childcount":0,"type":"Property","name":"Type","token":"public Type Type { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"The type of the data which is interpolated by the Interpolable."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.StartValue","childcount":0,"type":"Property","name":"StartValue","token":"public T StartValue { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets the ends value of the interpolation."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.EndValue","childcount":0,"type":"Property","name":"EndValue","token":"public T EndValue { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets the starts value of the interpolation."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsDisableOnHide","childcount":0,"type":"Property","name":"IsDisableOnHide","token":"public bool IsDisableOnHide { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation should be disabled when gameobject linked to it is inactive."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.IsDisableOnPause","childcount":0,"type":"Property","name":"IsDisableOnPause","token":"public bool IsDisableOnPause { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation should be disabled when the application is on pause."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.EaseType","childcount":0,"type":"Property","name":"EaseType","token":"public EaseTypes EaseType { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets the type of ease used for the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Duration","childcount":0,"type":"Property","name":"Duration","token":"public float Duration { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating the duration of the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.RepeatCount","childcount":0,"type":"Property","name":"RepeatCount","token":"public int RepeatCount { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating the number of times the interpolation will be repeated. (-1 indicates an infinite repetition)"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.StartDelay","childcount":0,"type":"Property","name":"StartDelay","token":"public float StartDelay { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.RepeatInterval","childcount":0,"type":"Property","name":"RepeatInterval","token":"public float RepeatInterval { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating the pause time between each repetition of the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.LoopType","childcount":0,"type":"Property","name":"LoopType","token":"public LoopTypes LoopType { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating the type of repetition."}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.HasGameObject","childcount":0,"type":"Property","name":"HasGameObject","token":"public bool HasGameObject { get; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Gets a value indicating whether the interpolation is linked to a GameObject"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.StartCallback","childcount":0,"type":"Property","name":"StartCallback","token":"public Action<Interpolable> StartCallback { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Action performed at the begening"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.UpdateCallback","childcount":0,"type":"Property","name":"UpdateCallback","token":"public Action<Interpolable> UpdateCallback { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Action performed during the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.PauseCallback","childcount":0,"type":"Property","name":"PauseCallback","token":"public Action<Interpolable> PauseCallback { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Action performed when the interpolation is paused"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.CompleteCallback","childcount":0,"type":"Property","name":"CompleteCallback","token":"public Action<Interpolable> CompleteCallback { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Action performed after the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.TerminateCallback","childcount":0,"type":"Property","name":"TerminateCallback","token":"public Action<Interpolable> TerminateCallback { get; set; }","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Action performed when the interpolation is finished and stopped"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Interpolation(T, T, float, Action<T>)","childcount":0,"type":"Constructor","name":"Interpolation","token":"internal  Interpolation(T from, T to, float duration, Action<T> setter)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Creates new Interpolation.","param-from":"Starts value","param-to":"Ends value","param-setter":"The setter function","param-duration":"The duration"},"params":{"from":"T","to":"T","duration":"float","setter":"Action<T>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Reset(T, T, float, Action<T>)","childcount":0,"type":"Method","name":"Reset","token":"internal Interpolation<T> Reset(T getter, T to, float duration, Action<T> setter)","scope":"InfinityEngine.Interpolations.Interpolation<T>","params":{"getter":"T","to":"T","duration":"float","setter":"Action<T>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.OnStart(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnStart","token":"public Interpolable OnStart(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Adds a callback action to do at the begining of the Interpolable.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnStart(arg =&gt; \n                                             {\n                                                 arg.SetNewEnd(50);\n                                             });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolates \"a\" value from 0 to 10 in 5 seconds and modify the end value of the interpolation when it starts.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.OnPause(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnPause","token":"public Interpolable OnPause(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Adds a callback action to do when this Interpolable is paused.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnStart(arg =&gt; {Debug.Log(\"On Pause\"); });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolates \"a\" value from 0 to 10 in 5 seconds and prints \"On Pause\" when 'interpolation' is paused.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.OnUpdate(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnUpdate","token":"public Interpolable OnUpdate(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Adds a callback action to do when this Interpolable is updating.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 var interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnUpdate((arg) =&gt; {\n                                                 if(arg.CompletedPercent &gt;= .5f)\n                                                     arg.Terminate();\n        \n                                             });\n        \n                 interpolation.Start();\n             </code>\n             This code interpolates \"a\" value from 0 to 10 in 5 seconds and stops the interpolation when it is completed at 50%.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.OnComplete(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnComplete","token":"public Interpolable OnComplete(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Adds a callback action to do when this Interpolable reached  the end value.","example":"The following code is an example of use of this method :\n             <code>\n        \n                var interpolation = Infinity.To(0, newValue=&gt; a = newValue, 10, 5)\n                         .SetRepeat(2)\n                         .OnComplete(arg =&gt; arg.Reverse() );\n                 interpolation.Start();\n              </code>\n             This code interpolates \"a\" value from 0 to 10 in 5 seconds, then from 10 to 0 in 5 seconds.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-action":"Callback action to do"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.OnTerminate(Action<Interpolable>)","childcount":0,"type":"Method","name":"OnTerminate","token":"public Interpolable OnTerminate(Action<Interpolable> action)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Adds a callback action to do when the Interpolable is stopped.","example":"The following code is an example of use of this method :\n             <code>\n                 var a = 0;\n                 va interpolation = Infinity.To(a, newValue=&gt; a = newValue, 10, 5)\n                                             .OnTerminate(arg =&gt; {Debug.Log(\"On Terminate\"); });\n        \n                 interpolation.Start();\n        \n             </code>\n             This code interpolates \"a\" value from 0 to 10 in 5 seconds and prints \"On Terminate\" when 'interpolation' is finished.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-action":"Callback Action"},"params":{"action":"Action<Interpolable>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetStartDelay(float)","childcount":0,"type":"Method","name":"SetStartDelay","token":"public Interpolable SetStartDelay(float delay)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Waits a while before starts this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-delay":"delay in seconds"},"params":{"delay":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetRepeat(int, LoopTypes)","childcount":0,"type":"Method","name":"SetRepeat","token":"public Interpolable SetRepeat(int count, LoopTypes loopType = LoopTypes.Restart)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Repeats the <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> (-1 = infinite loop)","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-count":"number of loop","param-loopType":"Loop type"},"params":{"count":"int","loopType":"LoopTypes"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetRepeatInterval(float)","childcount":0,"type":"Method","name":"SetRepeatInterval","token":"public Interpolable SetRepeatInterval(float interval)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Waits a while after completes this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> before restarting or reversing this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> in repeat case","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-interval":"Repeat interval in seconds"},"params":{"interval":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetEase(EaseTypes)","childcount":0,"type":"Method","name":"SetEase","token":"public Interpolable SetEase(EaseTypes easeType)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Ease type to use.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-easeType":"Ease type"},"params":{"easeType":"EaseTypes"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetEase(AnimationCurve)","childcount":0,"type":"Method","name":"SetEase","token":"public Interpolable SetEase(AnimationCurve motion)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Use Custom <a href=\"https://docs.unity3d.com/ScriptReference/AnimationCurve.html\"> AnimationCurve </a>  like ease.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-motion":"the animation curve to use"},"params":{"motion":"AnimationCurve"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetOptions(InterpolationOptions)","childcount":0,"type":"Method","name":"SetOptions","token":"public Interpolable SetOptions(InterpolationOptions options)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Apply the given options to this.","returns":"this","param-options":"The options"},"params":{"options":"InterpolationOptions"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetDisableOnPause(bool)","childcount":0,"type":"Method","name":"SetDisableOnPause","token":"public Interpolable SetDisableOnPause(bool flag)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Disables this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> when Unity <a href=\"https://docs.unity3d.com/ScriptReference/Time-timeScale.html\"> Time.timeScale </a> is set to <c>0</c>.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-flag":"if set to <c>true</c> this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> will be paused when the application is on pause"},"params":{"flag":"bool"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetNewDuration(float)","childcount":0,"type":"Method","name":"SetNewDuration","token":"public Interpolable SetNewDuration(float value)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Changes the duration","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","exception-T:System.ArgumentException":"Throwed when the type of the given <c>value</c> \n         is not the same as the type of the generic parameter <c>T</c> of this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />.","param-value":"new duration"},"params":{"value":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetNewEnd(object)","childcount":0,"type":"Method","name":"SetNewEnd","token":"public Interpolable SetNewEnd(object value)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Changes the starts value","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","exception-T:System.ArgumentException":"Throwed when the type of the given <c>value</c> \n         is not the same as the type of the generic parameter <c>T</c> of this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />.","param-value":"new value"},"params":{"value":"object"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetNewStart(object)","childcount":0,"type":"Method","name":"SetNewStart","token":"public Interpolable SetNewStart(object value)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Change the ends value","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-value":"new value"},"params":{"value":"object"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetNewEnd(T)","childcount":0,"type":"Method","name":"SetNewEnd","token":"public Interpolable SetNewEnd(T value)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Changes the starts value","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-value":"new value"},"params":{"value":"T"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetNewStart(T)","childcount":0,"type":"Method","name":"SetNewStart","token":"public Interpolable SetNewStart(T value)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Changes the ends value","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-value":"new value"},"params":{"value":"T"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetDisableOnHide(bool)","childcount":0,"type":"Method","name":"SetDisableOnHide","token":"public Interpolable SetDisableOnHide(bool flag)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Disables the interpolable when the GameObject which is linked to it is inactive.","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" />","param-flag":"if set to <c>true</c> this <see cref=\"T:InfinityEngine.Interpolations.Interpolation`1\" /> will be paused when the <see cref=\"P:InfinityEngine.Interpolations.Interpolation`1.GameObject\" /> which is linked to this is inactive."},"params":{"flag":"bool"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetGameObject(GameObject)","childcount":0,"type":"Method","name":"SetGameObject","token":"public Interpolable SetGameObject(GameObject go)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Attach a GameObject to this Interpolation","param-go":"GameObject to attach"},"params":{"go":"GameObject"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetRotationMode(RotationModes)","childcount":0,"type":"Method","name":"SetRotationMode","token":"public Interpolable SetRotationMode(RotationModes mode)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Sets the rotation mode of the interpolation in the case of Quaternion interpolation"},"params":{"mode":"RotationModes"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.CopyTo<TOther>(Interpolation<TOther>)","childcount":0,"type":"Method","name":"CopyTo<TOther>","token":"public Interpolation<TOther> CopyTo<TOther>(Interpolation<TOther> other)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Creates new Interpolable with this configuration.\n         The parameters which will be copied are : <para> </para> \n         repeatition count, repeatition interval, repeatition type, start delay, disable on pause state, disable on hide state, ease type, rotation mode","returns":"The copied interpolation","param-other":"Other to copie"},"params":{"other":"Interpolation<TOther>"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Start()","childcount":0,"type":"Method","name":"Start","token":"public Interpolable Start()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Starts the interpolation and return it.","returns":"the interpolation"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Reverse()","childcount":0,"type":"Method","name":"Reverse","token":"public Interpolable Reverse()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Inverses starts and ends value"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Terminate()","childcount":0,"type":"Method","name":"Terminate","token":"public Interpolable Terminate()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Stops this Interpolable"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.PauseFor(float)","childcount":0,"type":"Method","name":"PauseFor","token":"public Interpolable PauseFor(float time)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Pauses the interpolation for <paramref name=\"time\" /> seconds.","param-time":"pause time in seconds"},"params":{"time":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.TogglePause()","childcount":0,"type":"Method","name":"TogglePause","token":"public Interpolable TogglePause()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Switchs this pause state"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.SetCached()","childcount":0,"type":"Method","name":"SetCached","token":"public Interpolable SetCached()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Allow you to manually control the lifecycle of the interpolable (required when you assign the interpolable to an variable that you reuse)"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.Interpolate(float)","childcount":0,"type":"Method","name":"Interpolate","token":"internal void Interpolate(float time)","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Updates the interpolation. (Don't call this method manually).","param-time":"The current time of the interpolation"},"params":{"time":"float"}},{"signature":"InfinityEngine.Interpolations.Interpolation<T>.CanBeInterpolated()","childcount":0,"type":"Method","name":"CanBeInterpolated","token":"internal bool CanBeInterpolated()","scope":"InfinityEngine.Interpolations.Interpolation<T>","comments":{"summary":"Checks if the interpolation can be updated.","returns":"(not <see cref=\"P:InfinityEngine.Interpolations.Interpolation`1.IsDisableOnHide\" /> sets to <c>true</c> and <see cref=\"P:InfinityEngine.Interpolations.Interpolation`1.GameObject\" /> and all it parents are active if the it is not null)"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager","childcount":8,"type":"Class","name":"InterpolationManager","token":"internal class InterpolationManager ","scope":"InfinityEngine.Interpolations"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.IInterpolationPool","childcount":2,"type":"Interface","name":"IInterpolationPool","token":"internal interface IInterpolationPool ","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.IInterpolationPool.Clear()","childcount":0,"type":"Method","name":"Clear","token":"void Clear()","scope":"InfinityEngine.Interpolations.InterpolationManager.IInterpolationPool"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.IInterpolationPool.Reset()","childcount":0,"type":"Method","name":"Reset","token":"void Reset()","scope":"InfinityEngine.Interpolations.InterpolationManager.IInterpolationPool"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>","childcount":7,"type":"Class","name":"InterpolationPool<T>","token":"internal class InterpolationPool<T> : IInterpolationPool ","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.availables","childcount":0,"type":"Field","name":"availables","token":"private Stack<Interpolation<T>> availables ","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.all","childcount":0,"type":"Field","name":"all","token":"private List<Interpolation<T>> all ","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.InterpolationPool(int)","childcount":0,"type":"Constructor","name":"InterpolationPool","token":"public  InterpolationPool(int initialCapacity)","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>","params":{"initialCapacity":"int"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.Pop(T, T, float, Action<T>)","childcount":0,"type":"Method","name":"Pop","token":"public Interpolation<T> Pop(T starts, T ends, float duration, Action<T> setter)","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>","params":{"starts":"T","ends":"T","duration":"float","setter":"Action<T>"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.Push(Interpolation<T>)","childcount":0,"type":"Method","name":"Push","token":"public void Push(Interpolation<T> interpolation)","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.Clear()","childcount":0,"type":"Method","name":"Clear","token":"public void Clear()","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>.Reset()","childcount":0,"type":"Method","name":"Reset","token":"public void Reset()","scope":"InfinityEngine.Interpolations.InterpolationManager.InterpolationPool<T>"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.pools","childcount":0,"type":"Field","name":"pools","token":"internal Dictionary<Type, IInterpolationPool> pools ","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.InterpolationManager()","childcount":0,"type":"Constructor","name":"InterpolationManager","token":"internal  InterpolationManager()","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.Pop<T>(T, T, float, Action<T>)","childcount":0,"type":"Method","name":"Pop<T>","token":"internal Interpolation<T> Pop<T>(T starts, T ends, float duration, Action<T> setter)","scope":"InfinityEngine.Interpolations.InterpolationManager","params":{"starts":"T","ends":"T","duration":"float","setter":"Action<T>"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager.Push<T>(Interpolation<T>)","childcount":0,"type":"Method","name":"Push<T>","token":"internal void Push<T>(Interpolation<T> interpolation)","scope":"InfinityEngine.Interpolations.InterpolationManager","params":{"interpolation":"Interpolation<T>"}},{"signature":"InfinityEngine.Interpolations.InterpolationManager.Clear()","childcount":0,"type":"Method","name":"Clear","token":"internal void Clear()","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationManager.Reset()","childcount":0,"type":"Method","name":"Reset","token":"internal void Reset()","scope":"InfinityEngine.Interpolations.InterpolationManager"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions","childcount":12,"type":"Class","name":"InterpolationOptions","token":"public class InterpolationOptions ","scope":"InfinityEngine.Interpolations"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.delay","childcount":0,"type":"Field","name":"delay","token":"private float delay ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.repeat","childcount":0,"type":"Field","name":"repeat","token":"private int repeat ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.repeatInterval","childcount":0,"type":"Field","name":"repeatInterval","token":"private float repeatInterval ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.repeatType","childcount":0,"type":"Field","name":"repeatType","token":"private LoopTypes repeatType ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.ease","childcount":0,"type":"Field","name":"ease","token":"private EaseTypes ease ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.curve","childcount":0,"type":"Field","name":"curve","token":"private AnimationCurve curve ","scope":"InfinityEngine.Interpolations.InterpolationOptions"},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.Delay","childcount":0,"type":"Property","name":"Delay","token":"public float Delay { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The start delay of the interpolation."}},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.Repeat","childcount":0,"type":"Property","name":"Repeat","token":"public int Repeat { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The number of repeatition of the interpolation."}},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.RepeatInterval","childcount":0,"type":"Property","name":"RepeatInterval","token":"public float RepeatInterval { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The repeatition interval of the interpolation."}},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.RepeatType","childcount":0,"type":"Property","name":"RepeatType","token":"public LoopTypes RepeatType { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The repeatition type."}},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.Ease","childcount":0,"type":"Property","name":"Ease","token":"public EaseTypes Ease { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The ease type"}},{"signature":"InfinityEngine.Interpolations.InterpolationOptions.Curve","childcount":0,"type":"Property","name":"Curve","token":"public AnimationCurve Curve { get; set; }","scope":"InfinityEngine.Interpolations.InterpolationOptions","comments":{"summary":"The AnimationCurve to use as ease."}},{"signature":"InfinityEngine.Interpolations.LoopTypes","childcount":2,"type":"Enum","name":"LoopTypes","token":"public enum LoopTypes ","scope":"InfinityEngine.Interpolations","comments":{"summary":"Interpolation loop type."}},{"signature":"InfinityEngine.Interpolations.LoopTypes.Restart","childcount":0,"type":"EnumValue","name":"Restart","token":"Restart","scope":"InfinityEngine.Interpolations.LoopTypes","comments":{"summary":"Restarts the interpolable from the beginning (A =&gt; B  , A =&gt; B)"}},{"signature":"InfinityEngine.Interpolations.LoopTypes.Reverse","childcount":0,"type":"EnumValue","name":"Reverse","token":"Reverse","scope":"InfinityEngine.Interpolations.LoopTypes","comments":{"summary":"Reverse the starts value and the ends value of the interpolable at each loop.(A =&gt; B then B =&gt; A)"}},{"signature":"InfinityEngine.Interpolations.RotationModes","childcount":2,"type":"Enum","name":"RotationModes","token":"public enum RotationModes ","scope":"InfinityEngine.Interpolations","comments":{"summary":"Rotation mode of Quaternion interpolation"}},{"signature":"InfinityEngine.Interpolations.RotationModes.Fast","childcount":0,"type":"EnumValue","name":"Fast","token":"Fast","scope":"InfinityEngine.Interpolations.RotationModes","comments":{"summary":"Find the shortest path"}},{"signature":"InfinityEngine.Interpolations.RotationModes.Around360","childcount":0,"type":"EnumValue","name":"Around360","token":"Around360","scope":"InfinityEngine.Interpolations.RotationModes","comments":{"summary":"Make 360 rotation"}},{"signature":"InfinityEngine.Interpolations.Sequence","childcount":33,"type":"Class","name":"Sequence","token":"public class Sequence ","scope":"InfinityEngine.Interpolations","comments":{"summary":"This class encapsulates a sequence of <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> and play them."}},{"signature":"InfinityEngine.Interpolations.Sequence.interpolations","childcount":0,"type":"Field","name":"interpolations","token":"private readonly List<Interpolable> interpolations = ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.toRemoves","childcount":0,"type":"Field","name":"toRemoves","token":"private readonly List<Interpolable> toRemoves = ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.startDelay","childcount":0,"type":"Field","name":"startDelay","token":"private float startDelay ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.repeatCount","childcount":0,"type":"Field","name":"repeatCount","token":"private int repeatCount ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.repeatInterval","childcount":0,"type":"Field","name":"repeatInterval","token":"private float repeatInterval ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.loopType","childcount":0,"type":"Field","name":"loopType","token":"private LoopTypes loopType ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.current","childcount":0,"type":"Field","name":"current","token":"private int current ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.terminated","childcount":0,"type":"Field","name":"terminated","token":"private bool terminated ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.StartCallback","childcount":0,"type":"Field","name":"StartCallback","token":"private Action<Sequence> StartCallback ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.UpdateCallback","childcount":0,"type":"Field","name":"UpdateCallback","token":"private Action<Sequence> UpdateCallback ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.CompleteCallback","childcount":0,"type":"Field","name":"CompleteCallback","token":"private Action<Sequence> CompleteCallback ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.FinishCallback","childcount":0,"type":"Field","name":"FinishCallback","token":"private Action<Sequence> FinishCallback ","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Interpolations.Sequence.Sequence()","childcount":0,"type":"Constructor","name":"Sequence","token":"public  Sequence()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Creates new sequence"}},{"signature":"InfinityEngine.Interpolations.Sequence.Sequence(Interpolable[])","childcount":0,"type":"Constructor","name":"Sequence","token":"public  Sequence(params Interpolable[] args)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Creates new sequence with the given <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> objects in parameter.","param-args":"Array of all <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> to add into this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />"},"params":{"args":"Interpolable[]"}},{"signature":"InfinityEngine.Interpolations.Sequence.Add(Interpolable)","childcount":0,"type":"Method","name":"Add","token":"public void Add(Interpolable item)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Add the given <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> into the Sequence","param-item":"The interpolable object"},"params":{"item":"Interpolable"}},{"signature":"InfinityEngine.Interpolations.Sequence.Remove(Interpolable)","childcount":0,"type":"Method","name":"Remove","token":"public void Remove(Interpolable item)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Removes the given <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object from the sequence.","remarks":"The <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> will be removed only after the end of the current <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> that is played."},"params":{"item":"Interpolable"}},{"signature":"InfinityEngine.Interpolations.Sequence.Remove(int)","childcount":0,"type":"Method","name":"Remove","token":"public void Remove(int index)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Removes the <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object at the given index from the sequence.","remarks":"The <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> will be removed only after the end of the current <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> that is played.","exception-T:System.IndexOutOfRangeException":"Raised if the index is invalid.","param-index":"The index of the <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> to removes"},"params":{"index":"int"}},{"signature":"InfinityEngine.Interpolations.Sequence.GetAt(int)","childcount":0,"type":"Method","name":"GetAt","token":"public Interpolable GetAt(int index)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Returns the <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object at the given index of the sequence.","returns":"The <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object at the given index","exception-T:System.IndexOutOfRangeException":"Raised if the index is invalid.","param-index":"index of the Interpolable"},"params":{"index":"int"}},{"signature":"InfinityEngine.Interpolations.Sequence.SetAt(int, Interpolable)","childcount":0,"type":"Method","name":"SetAt","token":"public void SetAt(int index, Interpolable value)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Changes the <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object at the given index of the sequence.","exception-T:System.IndexOutOfRangeException":"Raised if the index is invalid.","param-index":"Index of the interpolation","param-value":"the interpolation"},"params":{"index":"int","value":"Interpolable"}},{"signature":"InfinityEngine.Interpolations.Sequence.Insert(int, Interpolable)","childcount":0,"type":"Method","name":"Insert","token":"public void Insert(int index, Interpolable value)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Inserts the given <see cref=\"T:InfinityEngine.Interpolations.Interpolable\" /> object at the given index in the sequence.","param-index":"Index where the interpolation will be inserted","param-value":"the interpolation"},"params":{"index":"int","value":"Interpolable"}},{"signature":"InfinityEngine.Interpolations.Sequence.SetRepeat(int, LoopTypes)","childcount":0,"type":"Method","name":"SetRepeat","token":"public Sequence SetRepeat(int count, LoopTypes loopType)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Chained method to add repeatition option to the sequence.","returns":"This <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-count":"Number of repeatition","param-loopType":"Repeatition type : Restart or Reverse"},"params":{"count":"int","loopType":"LoopTypes"}},{"signature":"InfinityEngine.Interpolations.Sequence.SetRepeatInterval(float)","childcount":0,"type":"Method","name":"SetRepeatInterval","token":"public Sequence SetRepeatInterval(float interval)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Adds srepeatition interval to the sequence.","returns":"This <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-interval":"repeat interval"},"params":{"interval":"float"}},{"signature":"InfinityEngine.Interpolations.Sequence.SetStartDelay(float)","childcount":0,"type":"Method","name":"SetStartDelay","token":"public Sequence SetStartDelay(float delay)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Adds a starts delay to this sequence","returns":"This <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-delay":"time to wait before starting tthe sequence"},"params":{"delay":"float"}},{"signature":"InfinityEngine.Interpolations.Sequence.OnStart(Action<Sequence>)","childcount":0,"type":"Method","name":"OnStart","token":"public Sequence OnStart(Action<Sequence> arg)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"On Start callback","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-arg":"callback action"},"params":{"arg":"Action<Sequence>"}},{"signature":"InfinityEngine.Interpolations.Sequence.OnUpdate(Action<Sequence>)","childcount":0,"type":"Method","name":"OnUpdate","token":"public Sequence OnUpdate(Action<Sequence> arg)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"On Update callback","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-arg":"callback action"},"params":{"arg":"Action<Sequence>"}},{"signature":"InfinityEngine.Interpolations.Sequence.OnComplete(Action<Sequence>)","childcount":0,"type":"Method","name":"OnComplete","token":"public Sequence OnComplete(Action<Sequence> arg)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"On Complete callback","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-arg":"callback action"},"params":{"arg":"Action<Sequence>"}},{"signature":"InfinityEngine.Interpolations.Sequence.OnFinish(Action<Sequence>)","childcount":0,"type":"Method","name":"OnFinish","token":"public Sequence OnFinish(Action<Sequence> arg)","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"On Finish callback","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />","param-arg":"callback action"},"params":{"arg":"Action<Sequence>"}},{"signature":"InfinityEngine.Interpolations.Sequence.Reverse()","childcount":0,"type":"Method","name":"Reverse","token":"public Sequence Reverse()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"REverse this sequence","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />"}},{"signature":"InfinityEngine.Interpolations.Sequence.Shuffle()","childcount":0,"type":"Method","name":"Shuffle","token":"public Sequence Shuffle()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Shuffle this sequence","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />"}},{"signature":"InfinityEngine.Interpolations.Sequence.Shift()","childcount":0,"type":"Method","name":"Shift","token":"public Sequence Shift()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Shift this Sequene","returns":"this <see cref=\"T:InfinityEngine.Interpolations.Sequence\" />"}},{"signature":"InfinityEngine.Interpolations.Sequence.Terminate()","childcount":0,"type":"Method","name":"Terminate","token":"public void Terminate()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Stop this sequence"}},{"signature":"InfinityEngine.Interpolations.Sequence.Start()","childcount":0,"type":"Method","name":"Start","token":"public void Start()","scope":"InfinityEngine.Interpolations.Sequence","comments":{"summary":"Starts the Sequence"}},{"signature":"InfinityEngine.Interpolations.Sequence._Start()","childcount":0,"type":"Method","name":"_Start","token":"private IEnumerator _Start()","scope":"InfinityEngine.Interpolations.Sequence"},{"signature":"InfinityEngine.Utils","childcount":11,"type":"Namespace","name":"InfinityEngine.Utils","token":"namespace InfinityEngine.Utils","scope":"","comments":{"summary":"This namespace Provides access to useful classes."}},{"signature":"InfinityEngine.Utils.AutoStretchSprite","childcount":7,"type":"Class","name":"AutoStretchSprite","token":"public class AutoStretchSprite : MonoBehaviour ","scope":"InfinityEngine.Utils"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.ExecuteOnUpdate","childcount":0,"type":"Field","name":"ExecuteOnUpdate","token":"public bool ExecuteOnUpdate ","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.spriteRenderer","childcount":0,"type":"Field","name":"spriteRenderer","token":"private SpriteRenderer spriteRenderer ","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.mainCamera","childcount":0,"type":"Field","name":"mainCamera","token":"private Camera mainCamera ","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.Start()","childcount":0,"type":"Method","name":"Start","token":"private void Start()","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.FixedUpdate()","childcount":0,"type":"Method","name":"FixedUpdate","token":"private void FixedUpdate()","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.Resize()","childcount":0,"type":"Method","name":"Resize","token":"private void Resize()","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.AutoStretchSprite.AutoStretchSprite()","childcount":0,"type":"Constructor","name":"AutoStretchSprite","token":"public  AutoStretchSprite()","scope":"InfinityEngine.Utils.AutoStretchSprite"},{"signature":"InfinityEngine.Utils.CodeGenerationUtils","childcount":11,"type":"Class","name":"CodeGenerationUtils","token":"public static class CodeGenerationUtils ","scope":"InfinityEngine.Utils"},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.BuiltInWords","childcount":0,"type":"Field","name":"BuiltInWords","token":"public static readonly HashSet<string> BuiltInWords = new HashSet<string>\n        {\n            \"public\", \"get\", \"set\", \"protected\", \"private\", \"internal\", \"virtual\", \"this\",  \"const\", \"readonly\",\"lock\",\n            \"abstract\", \"void\", \"new\", \"static\", \"class\", \"enum\", \"struct\", \"interface\", \"var\",\n            \"int\", \"float\", \"Single\", \"Single64\", \"Single32\", \"bool\", \"string\", \"byte\", \"double\", \"short\", \"long\",\n            \"char\",\"Exception\", \"out\", \"in\", \"ref\", \"try\", \"catch\", \"final\",\"finally\", \"goto\", \"List\" , \"using\", \"namespace\", \"params\",\n            \"get;\", \"set;\", \"typeof\", \"for\", \"foreach\", \"if\", \"else\", \"switch\", \"case\", \"return\",\"break\", \"continue\", \"while\", \"do\", \"throw\",\n            \"base\", \"where\", \"from\", \"select\", \"as\", \"nameof\", \"is\", \"in\", \"delegate\", \"event\", \"null\", \"true\", \"false\", \"object\", \"sealed\",\n            \"async\", \"extern\", \"volatile\", \"await\", \"dynamic\", \"partial\", \"decimal\", \"default\", \"fixed\", \"unsafe\", \"__arglist\",\n            \"stackalloc\", \"Dictionary\", \"HashSet\", \"where\", \"from\", \"select\", \"grouby\", \"uint\", \"UInt16\", \"UInt32\", \"UInt64\",\n            \"ushort\", \"ulong\", \"unchecked\", \"checked\"\n        };","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Some of the builtin words of c# language."}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.CSHARP_RESERVED_WORD_ERROR","childcount":0,"type":"Field","name":"CSHARP_RESERVED_WORD_ERROR","token":"public const string CSHARP_RESERVED_WORD_ERROR = \"CSHARP_RESERVED_WORD_ERROR\";","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Reserved CSharp word error."}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.EMPTY_FIELD_NAME_ERROR","childcount":0,"type":"Field","name":"EMPTY_FIELD_NAME_ERROR","token":"public const string EMPTY_FIELD_NAME_ERROR = \"EMPTY_FIELD_NAME_ERROR\";","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Empty field name error."}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.SPACE_ERROR","childcount":0,"type":"Field","name":"SPACE_ERROR","token":"public const string SPACE_ERROR = \"SPACE_ERROR\";","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Space error (field name cannot contains space)"}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.UNAUTHORIZED__START_CHAR_ERROR","childcount":0,"type":"Field","name":"UNAUTHORIZED__START_CHAR_ERROR","token":"public const string UNAUTHORIZED__START_CHAR_ERROR = \"UNAUTHORIZED__START_CHAR_ERROR\";","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Bad start char error (field name starts only with a letter or the char '_'."}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.UNAUTHORIZED_CHAR_ERROR","childcount":0,"type":"Field","name":"UNAUTHORIZED_CHAR_ERROR","token":"public const string UNAUTHORIZED_CHAR_ERROR = \"UNAUTHORIZED_CHAR_ERROR\";","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Bad char error (field name contains only letters or the char '_'."}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.MakeTabulation(int)","childcount":0,"type":"Method","name":"MakeTabulation","token":"public static string MakeTabulation(int level)","scope":"InfinityEngine.Utils.CodeGenerationUtils","params":{"level":"int"}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.MakeXMLTag(string, string, string)","childcount":0,"type":"Method","name":"MakeXMLTag","token":"public static string MakeXMLTag(string content, string tag, string tabulation = \"\")","scope":"InfinityEngine.Utils.CodeGenerationUtils","params":{"content":"string","tag":"string","tabulation":"string"}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.MakeIdentifier(string, bool)","childcount":0,"type":"Method","name":"MakeIdentifier","token":"public static string MakeIdentifier(string input, bool onlyLetter = false)","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Computes the input string by removing any character that cannot constitute an identifier name.\n         and transform the first char of each word to uppercase.","example":"<code>\n          Debug.Log(CodeGenerationUtils.MakeIdentifier(\"-my_variable\"));\n          Debug.Log(CodeGenerationUtils.MakeIdentifier(\"my  variable2\", true));\n          Debug.Log(CodeGenerationUtils.MakeIdentifier(\"my  variable2\"));\n          Debug.Log(CodeGenerationUtils.MakeIdentifier(\"object\"));\n          Debug.Log(CodeGenerationUtils.MakeIdentifier(\"\"));\n          </code>\n          This code procudes the following result : <br />\n          &gt; MyVariable <br />\n          &gt; MyVariable <br />\n          &gt; MyVariable2 <br />\n          &gt; ArgumentException<br />\n          &gt; ArgumentException<br />","returns":"A computed version of the input","exception-T:System.ArgumentException":"Thrown when the input is null, empty or does not contains any letter.","param-input":"The identifier","param-onlyLetter":"(Optional) if set to <c>true</c>, the function remove all char different from a letter in the identifier."},"params":{"input":"string","onlyLetter":"bool"}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.CheckIdentifier(string)","childcount":0,"type":"Method","name":"CheckIdentifier","token":"public static string CheckIdentifier(string input)","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Checks if the <paramref name=\"input\"/> is a valid C# identifier name.","example":"Exemple 1 :\n             <code>\n             Debug.Log(CodeGenerationUtils.CheckIdentifier(\"id\"));\n             </code>\n             This code prints <c>null</c>.<br />\n        \n             Exemple 2 :\n             <code> Debug.Log(CodeGenerationUtils.CheckIdentifier(\"1id\"));</code>\n             This code prints 'SPACE_ERROR' because an identifier cannot starts with a digit.","returns":"An error message if the input is not a valid C# identifier name <c>null</c> otherwise","param-input":"The input"},"params":{"input":"string"}},{"signature":"InfinityEngine.Utils.CodeGenerationUtils.IsIdentifier(string)","childcount":0,"type":"Method","name":"IsIdentifier","token":"public static bool IsIdentifier(string input)","scope":"InfinityEngine.Utils.CodeGenerationUtils","comments":{"summary":"Checks if the <paramref name=\"input\"/> can be used as an identifier name.","returns":"<c>true</c> if the input is a valid identifier name<c>false</c> otherwise","param-input":"The input"},"params":{"input":"string"}},{"signature":"InfinityEngine.Utils.LogType","childcount":3,"type":"Enum","name":"LogType","token":"public enum LogType ","scope":"InfinityEngine.Utils","comments":{"summary":"Values that represent the log type of the class <see cref=\"Utils.Debugger\"/>."}},{"signature":"InfinityEngine.Utils.LogType.Default","childcount":0,"type":"EnumValue","name":"Default","token":"Default","scope":"InfinityEngine.Utils.LogType","comments":{"summary":"Errors and warnings"}},{"signature":"InfinityEngine.Utils.LogType.ErrorsOnly","childcount":0,"type":"EnumValue","name":"ErrorsOnly","token":"ErrorsOnly","scope":"InfinityEngine.Utils.LogType","comments":{"summary":"Only errors"}},{"signature":"InfinityEngine.Utils.LogType.Verbose","childcount":0,"type":"EnumValue","name":"Verbose","token":"Verbose","scope":"InfinityEngine.Utils.LogType","comments":{"summary":"Errors, warnings, and additional informations"}},{"signature":"InfinityEngine.Utils.Debugger","childcount":6,"type":"Class","name":"Debugger","token":"public static class Debugger ","scope":"InfinityEngine.Utils","comments":{"summary":"Log informations in editor console only if the current running platform is Unity Editor"}},{"signature":"InfinityEngine.Utils.Debugger.Log(object)","childcount":0,"type":"Method","name":"Log","token":"public static void Log(object message)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c> and <see cref=\"Infinity.LoggingType\"/> != <see cref=\"LogType.Verbose\"/>","param-message":"Message to log"},"params":{"message":"object"}},{"signature":"InfinityEngine.Utils.Debugger.Log(object, Object)","childcount":0,"type":"Method","name":"Log","token":"public static void Log(object message, Object context)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c> and <see cref=\"Infinity.LoggingType\"/> != <see cref=\"LogType.Verbose\"/>","param-message":"Message to log","param-context":"Target Object if the log message is clicked on Unity Editor, the context Object will be focused"},"params":{"message":"object","context":"Object"}},{"signature":"InfinityEngine.Utils.Debugger.LogWarning(object)","childcount":0,"type":"Method","name":"LogWarning","token":"public static void LogWarning(object message)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message in warning format if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c> and <see cref=\"Infinity.LoggingType\"/> != <see cref=\"LogType.ErrorsOnly\"/>","param-message":"Message to log"},"params":{"message":"object"}},{"signature":"InfinityEngine.Utils.Debugger.LogWarning(object, Object)","childcount":0,"type":"Method","name":"LogWarning","token":"public static void LogWarning(object message, Object context)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message in warning format if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c> and <see cref=\"Infinity.LoggingType\"/> != <see cref=\"LogType.ErrorsOnly\"/>","param-message":"Message to log","param-context":"Target Object if the log message is clicked on Unity Editor, the context Object will be focused"},"params":{"message":"object","context":"Object"}},{"signature":"InfinityEngine.Utils.Debugger.LogError(object)","childcount":0,"type":"Method","name":"LogError","token":"public static void LogError(object message)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message in error format if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c>","param-message":"Message to log"},"params":{"message":"object"}},{"signature":"InfinityEngine.Utils.Debugger.LogError(object, Object)","childcount":0,"type":"Method","name":"LogError","token":"public static void LogError(object message, Object context)","scope":"InfinityEngine.Utils.Debugger","comments":{"summary":"Log the given message in error format if the current platform is Unity Editor and <see cref=\"Infinity.EnableLog\"/> \n         is set to <c>true</c>","param-message":"Message to log","param-context":"Target Object if the log message is clicked on Unity Editor, the context Object will be focused"},"params":{"message":"object","context":"Object"}},{"signature":"InfinityEngine.Utils.FA","childcount":787,"type":"Class","name":"FA","token":"public static class FA ","scope":"InfinityEngine.Utils","comments":{"summary":"All font awesome unicode codes referenced at http://fontawesome.io/icons/"}},{"signature":"InfinityEngine.Utils.FA.adress_book","childcount":0,"type":"Field","name":"adress_book","token":"public const string adress_book = \"\\uf2b9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA._500px","childcount":0,"type":"Field","name":"_500px","token":"public const string _500px = \"\\uf26e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.address_book","childcount":0,"type":"Field","name":"address_book","token":"public const string address_book = \"\\uf2b9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.address_book_o","childcount":0,"type":"Field","name":"address_book_o","token":"public const string address_book_o = \"\\uf2ba\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.address_card","childcount":0,"type":"Field","name":"address_card","token":"public const string address_card = \"\\uf2bb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.address_card_o","childcount":0,"type":"Field","name":"address_card_o","token":"public const string address_card_o = \"\\uf2bc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.adjust","childcount":0,"type":"Field","name":"adjust","token":"public const string adjust = \"\\uf042\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.adn","childcount":0,"type":"Field","name":"adn","token":"public const string adn = \"\\uf170\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.align_center","childcount":0,"type":"Field","name":"align_center","token":"public const string align_center = \"\\uf037\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.align_justify","childcount":0,"type":"Field","name":"align_justify","token":"public const string align_justify = \"\\uf039\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.align_left","childcount":0,"type":"Field","name":"align_left","token":"public const string align_left = \"\\uf036\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.align_right","childcount":0,"type":"Field","name":"align_right","token":"public const string align_right = \"\\uf038\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.amazon","childcount":0,"type":"Field","name":"amazon","token":"public const string amazon = \"\\uf270\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ambulance","childcount":0,"type":"Field","name":"ambulance","token":"public const string ambulance = \"\\uf0f9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.american_sign_language_interpreting","childcount":0,"type":"Field","name":"american_sign_language_interpreting","token":"public const string american_sign_language_interpreting = \"\\uf2a3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.anchor","childcount":0,"type":"Field","name":"anchor","token":"public const string anchor = \"\\uf13d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.android","childcount":0,"type":"Field","name":"android","token":"public const string android = \"\\uf17b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angellist","childcount":0,"type":"Field","name":"angellist","token":"public const string angellist = \"\\uf209\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_double_down","childcount":0,"type":"Field","name":"angle_double_down","token":"public const string angle_double_down = \"\\uf103\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_double_left","childcount":0,"type":"Field","name":"angle_double_left","token":"public const string angle_double_left = \"\\uf100\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_double_right","childcount":0,"type":"Field","name":"angle_double_right","token":"public const string angle_double_right = \"\\uf101\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_double_up","childcount":0,"type":"Field","name":"angle_double_up","token":"public const string angle_double_up = \"\\uf102\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_down","childcount":0,"type":"Field","name":"angle_down","token":"public const string angle_down = \"\\uf107\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_left","childcount":0,"type":"Field","name":"angle_left","token":"public const string angle_left = \"\\uf104\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_right","childcount":0,"type":"Field","name":"angle_right","token":"public const string angle_right = \"\\uf105\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.angle_up","childcount":0,"type":"Field","name":"angle_up","token":"public const string angle_up = \"\\uf106\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.apple","childcount":0,"type":"Field","name":"apple","token":"public const string apple = \"\\uf179\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.archive","childcount":0,"type":"Field","name":"archive","token":"public const string archive = \"\\uf187\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.area_chart","childcount":0,"type":"Field","name":"area_chart","token":"public const string area_chart = \"\\uf1fe\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_down","childcount":0,"type":"Field","name":"arrow_circle_down","token":"public const string arrow_circle_down = \"\\uf0ab\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_left","childcount":0,"type":"Field","name":"arrow_circle_left","token":"public const string arrow_circle_left = \"\\uf0a8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_o_down","childcount":0,"type":"Field","name":"arrow_circle_o_down","token":"public const string arrow_circle_o_down = \"\\uf01a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_o_left","childcount":0,"type":"Field","name":"arrow_circle_o_left","token":"public const string arrow_circle_o_left = \"\\uf190\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_o_right","childcount":0,"type":"Field","name":"arrow_circle_o_right","token":"public const string arrow_circle_o_right = \"\\uf18e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_o_up","childcount":0,"type":"Field","name":"arrow_circle_o_up","token":"public const string arrow_circle_o_up = \"\\uf01b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_right","childcount":0,"type":"Field","name":"arrow_circle_right","token":"public const string arrow_circle_right = \"\\uf0a9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_circle_up","childcount":0,"type":"Field","name":"arrow_circle_up","token":"public const string arrow_circle_up = \"\\uf0aa\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_down","childcount":0,"type":"Field","name":"arrow_down","token":"public const string arrow_down = \"\\uf063\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_left","childcount":0,"type":"Field","name":"arrow_left","token":"public const string arrow_left = \"\\uf060\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_right","childcount":0,"type":"Field","name":"arrow_right","token":"public const string arrow_right = \"\\uf061\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrow_up","childcount":0,"type":"Field","name":"arrow_up","token":"public const string arrow_up = \"\\uf062\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrows","childcount":0,"type":"Field","name":"arrows","token":"public const string arrows = \"\\uf047\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrows_alt","childcount":0,"type":"Field","name":"arrows_alt","token":"public const string arrows_alt = \"\\uf0b2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrows_h","childcount":0,"type":"Field","name":"arrows_h","token":"public const string arrows_h = \"\\uf07e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.arrows_v","childcount":0,"type":"Field","name":"arrows_v","token":"public const string arrows_v = \"\\uf07d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.asl_interpreting","childcount":0,"type":"Field","name":"asl_interpreting","token":"public const string asl_interpreting = \"\\uf2a3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.assistive_listening_systems","childcount":0,"type":"Field","name":"assistive_listening_systems","token":"public const string assistive_listening_systems = \"\\uf2a2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.asterisk","childcount":0,"type":"Field","name":"asterisk","token":"public const string asterisk = \"\\uf069\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.at","childcount":0,"type":"Field","name":"at","token":"public const string at = \"\\uf1fa\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.audio_description","childcount":0,"type":"Field","name":"audio_description","token":"public const string audio_description = \"\\uf29e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.automobile","childcount":0,"type":"Field","name":"automobile","token":"public const string automobile = \"\\uf1b9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.backward","childcount":0,"type":"Field","name":"backward","token":"public const string backward = \"\\uf04a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.balance_scale","childcount":0,"type":"Field","name":"balance_scale","token":"public const string balance_scale = \"\\uf24e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ban","childcount":0,"type":"Field","name":"ban","token":"public const string ban = \"\\uf05e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bandcamp","childcount":0,"type":"Field","name":"bandcamp","token":"public const string bandcamp = \"\\uf2d5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bank","childcount":0,"type":"Field","name":"bank","token":"public const string bank = \"\\uf19c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bar_chart","childcount":0,"type":"Field","name":"bar_chart","token":"public const string bar_chart = \"\\uf080\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bar_chart_o","childcount":0,"type":"Field","name":"bar_chart_o","token":"public const string bar_chart_o = \"\\uf080\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.barcode","childcount":0,"type":"Field","name":"barcode","token":"public const string barcode = \"\\uf02a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bars","childcount":0,"type":"Field","name":"bars","token":"public const string bars = \"\\uf0c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bath","childcount":0,"type":"Field","name":"bath","token":"public const string bath = \"\\uf2cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bathtub","childcount":0,"type":"Field","name":"bathtub","token":"public const string bathtub = \"\\uf2cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery","childcount":0,"type":"Field","name":"battery","token":"public const string battery = \"\\uf240\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_0","childcount":0,"type":"Field","name":"battery_0","token":"public const string battery_0 = \"\\uf244\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_1","childcount":0,"type":"Field","name":"battery_1","token":"public const string battery_1 = \"\\uf243\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_2","childcount":0,"type":"Field","name":"battery_2","token":"public const string battery_2 = \"\\uf242\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_3","childcount":0,"type":"Field","name":"battery_3","token":"public const string battery_3 = \"\\uf241\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_4","childcount":0,"type":"Field","name":"battery_4","token":"public const string battery_4 = \"\\uf240\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_empty","childcount":0,"type":"Field","name":"battery_empty","token":"public const string battery_empty = \"\\uf244\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_full","childcount":0,"type":"Field","name":"battery_full","token":"public const string battery_full = \"\\uf240\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_half","childcount":0,"type":"Field","name":"battery_half","token":"public const string battery_half = \"\\uf242\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_quarter","childcount":0,"type":"Field","name":"battery_quarter","token":"public const string battery_quarter = \"\\uf243\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.battery_three_quarters","childcount":0,"type":"Field","name":"battery_three_quarters","token":"public const string battery_three_quarters = \"\\uf241\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bed","childcount":0,"type":"Field","name":"bed","token":"public const string bed = \"\\uf236\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.beer","childcount":0,"type":"Field","name":"beer","token":"public const string beer = \"\\uf0fc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.behance","childcount":0,"type":"Field","name":"behance","token":"public const string behance = \"\\uf1b4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.behance_square","childcount":0,"type":"Field","name":"behance_square","token":"public const string behance_square = \"\\uf1b5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bell","childcount":0,"type":"Field","name":"bell","token":"public const string bell = \"\\uf0f3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bell_o","childcount":0,"type":"Field","name":"bell_o","token":"public const string bell_o = \"\\uf0a2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bell_slash","childcount":0,"type":"Field","name":"bell_slash","token":"public const string bell_slash = \"\\uf1f6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bell_slash_o","childcount":0,"type":"Field","name":"bell_slash_o","token":"public const string bell_slash_o = \"\\uf1f7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bicycle","childcount":0,"type":"Field","name":"bicycle","token":"public const string bicycle = \"\\uf206\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.binoculars","childcount":0,"type":"Field","name":"binoculars","token":"public const string binoculars = \"\\uf1e5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.birthday_cake","childcount":0,"type":"Field","name":"birthday_cake","token":"public const string birthday_cake = \"\\uf1fd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bitbucket","childcount":0,"type":"Field","name":"bitbucket","token":"public const string bitbucket = \"\\uf171\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bitbucket_square","childcount":0,"type":"Field","name":"bitbucket_square","token":"public const string bitbucket_square = \"\\uf172\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bitcoin","childcount":0,"type":"Field","name":"bitcoin","token":"public const string bitcoin = \"\\uf15a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.black_tie","childcount":0,"type":"Field","name":"black_tie","token":"public const string black_tie = \"\\uf27e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.blind","childcount":0,"type":"Field","name":"blind","token":"public const string blind = \"\\uf29d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bluetooth","childcount":0,"type":"Field","name":"bluetooth","token":"public const string bluetooth = \"\\uf293\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bluetooth_b","childcount":0,"type":"Field","name":"bluetooth_b","token":"public const string bluetooth_b = \"\\uf294\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bold","childcount":0,"type":"Field","name":"bold","token":"public const string bold = \"\\uf032\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bolt","childcount":0,"type":"Field","name":"bolt","token":"public const string bolt = \"\\uf0e7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bomb","childcount":0,"type":"Field","name":"bomb","token":"public const string bomb = \"\\uf1e2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.book","childcount":0,"type":"Field","name":"book","token":"public const string book = \"\\uf02d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bookmark","childcount":0,"type":"Field","name":"bookmark","token":"public const string bookmark = \"\\uf02e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bookmark_o","childcount":0,"type":"Field","name":"bookmark_o","token":"public const string bookmark_o = \"\\uf097\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.braille","childcount":0,"type":"Field","name":"braille","token":"public const string braille = \"\\uf2a1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.briefcase","childcount":0,"type":"Field","name":"briefcase","token":"public const string briefcase = \"\\uf0b1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.btc","childcount":0,"type":"Field","name":"btc","token":"public const string btc = \"\\uf15a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bug","childcount":0,"type":"Field","name":"bug","token":"public const string bug = \"\\uf188\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.building","childcount":0,"type":"Field","name":"building","token":"public const string building = \"\\uf1ad\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.building_o","childcount":0,"type":"Field","name":"building_o","token":"public const string building_o = \"\\uf0f7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bullhorn","childcount":0,"type":"Field","name":"bullhorn","token":"public const string bullhorn = \"\\uf0a1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bullseye","childcount":0,"type":"Field","name":"bullseye","token":"public const string bullseye = \"\\uf140\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.bus","childcount":0,"type":"Field","name":"bus","token":"public const string bus = \"\\uf207\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.buysellads","childcount":0,"type":"Field","name":"buysellads","token":"public const string buysellads = \"\\uf20d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cab","childcount":0,"type":"Field","name":"cab","token":"public const string cab = \"\\uf1ba\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calculator","childcount":0,"type":"Field","name":"calculator","token":"public const string calculator = \"\\uf1ec\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar","childcount":0,"type":"Field","name":"calendar","token":"public const string calendar = \"\\uf073\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar_check_o","childcount":0,"type":"Field","name":"calendar_check_o","token":"public const string calendar_check_o = \"\\uf274\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar_minus_o","childcount":0,"type":"Field","name":"calendar_minus_o","token":"public const string calendar_minus_o = \"\\uf272\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar_o","childcount":0,"type":"Field","name":"calendar_o","token":"public const string calendar_o = \"\\uf133\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar_plus_o","childcount":0,"type":"Field","name":"calendar_plus_o","token":"public const string calendar_plus_o = \"\\uf271\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.calendar_times_o","childcount":0,"type":"Field","name":"calendar_times_o","token":"public const string calendar_times_o = \"\\uf273\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.camera","childcount":0,"type":"Field","name":"camera","token":"public const string camera = \"\\uf030\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.camera_retro","childcount":0,"type":"Field","name":"camera_retro","token":"public const string camera_retro = \"\\uf083\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.car","childcount":0,"type":"Field","name":"car","token":"public const string car = \"\\uf1b9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_down","childcount":0,"type":"Field","name":"caret_down","token":"public const string caret_down = \"\\uf0d7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_left","childcount":0,"type":"Field","name":"caret_left","token":"public const string caret_left = \"\\uf0d9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_right","childcount":0,"type":"Field","name":"caret_right","token":"public const string caret_right = \"\\uf0da\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_square_o_down","childcount":0,"type":"Field","name":"caret_square_o_down","token":"public const string caret_square_o_down = \"\\uf150\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_square_o_left","childcount":0,"type":"Field","name":"caret_square_o_left","token":"public const string caret_square_o_left = \"\\uf191\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_square_o_right","childcount":0,"type":"Field","name":"caret_square_o_right","token":"public const string caret_square_o_right = \"\\uf152\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_square_o_up","childcount":0,"type":"Field","name":"caret_square_o_up","token":"public const string caret_square_o_up = \"\\uf151\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.caret_up","childcount":0,"type":"Field","name":"caret_up","token":"public const string caret_up = \"\\uf0d8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cart_arrow_down","childcount":0,"type":"Field","name":"cart_arrow_down","token":"public const string cart_arrow_down = \"\\uf218\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cart_plus","childcount":0,"type":"Field","name":"cart_plus","token":"public const string cart_plus = \"\\uf217\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc","childcount":0,"type":"Field","name":"cc","token":"public const string cc = \"\\uf20a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_amex","childcount":0,"type":"Field","name":"cc_amex","token":"public const string cc_amex = \"\\uf1f3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_diners_club","childcount":0,"type":"Field","name":"cc_diners_club","token":"public const string cc_diners_club = \"\\uf24c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_discover","childcount":0,"type":"Field","name":"cc_discover","token":"public const string cc_discover = \"\\uf1f2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_jcb","childcount":0,"type":"Field","name":"cc_jcb","token":"public const string cc_jcb = \"\\uf24b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_mastercard","childcount":0,"type":"Field","name":"cc_mastercard","token":"public const string cc_mastercard = \"\\uf1f1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_paypal","childcount":0,"type":"Field","name":"cc_paypal","token":"public const string cc_paypal = \"\\uf1f4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_stripe","childcount":0,"type":"Field","name":"cc_stripe","token":"public const string cc_stripe = \"\\uf1f5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cc_visa","childcount":0,"type":"Field","name":"cc_visa","token":"public const string cc_visa = \"\\uf1f0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.certificate","childcount":0,"type":"Field","name":"certificate","token":"public const string certificate = \"\\uf0a3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chain","childcount":0,"type":"Field","name":"chain","token":"public const string chain = \"\\uf0c1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chain_broken","childcount":0,"type":"Field","name":"chain_broken","token":"public const string chain_broken = \"\\uf127\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.check","childcount":0,"type":"Field","name":"check","token":"public const string check = \"\\uf00c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.check_circle","childcount":0,"type":"Field","name":"check_circle","token":"public const string check_circle = \"\\uf058\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.check_circle_o","childcount":0,"type":"Field","name":"check_circle_o","token":"public const string check_circle_o = \"\\uf05d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.check_square","childcount":0,"type":"Field","name":"check_square","token":"public const string check_square = \"\\uf14a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.check_square_o","childcount":0,"type":"Field","name":"check_square_o","token":"public const string check_square_o = \"\\uf046\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_circle_down","childcount":0,"type":"Field","name":"chevron_circle_down","token":"public const string chevron_circle_down = \"\\uf13a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_circle_left","childcount":0,"type":"Field","name":"chevron_circle_left","token":"public const string chevron_circle_left = \"\\uf137\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_circle_right","childcount":0,"type":"Field","name":"chevron_circle_right","token":"public const string chevron_circle_right = \"\\uf138\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_circle_up","childcount":0,"type":"Field","name":"chevron_circle_up","token":"public const string chevron_circle_up = \"\\uf139\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_down","childcount":0,"type":"Field","name":"chevron_down","token":"public const string chevron_down = \"\\uf078\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_left","childcount":0,"type":"Field","name":"chevron_left","token":"public const string chevron_left = \"\\uf053\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_right","childcount":0,"type":"Field","name":"chevron_right","token":"public const string chevron_right = \"\\uf054\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chevron_up","childcount":0,"type":"Field","name":"chevron_up","token":"public const string chevron_up = \"\\uf077\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.child","childcount":0,"type":"Field","name":"child","token":"public const string child = \"\\uf1ae\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.chrome","childcount":0,"type":"Field","name":"chrome","token":"public const string chrome = \"\\uf268\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.circle","childcount":0,"type":"Field","name":"circle","token":"public const string circle = \"\\uf111\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.circle_o","childcount":0,"type":"Field","name":"circle_o","token":"public const string circle_o = \"\\uf10c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.circle_o_notch","childcount":0,"type":"Field","name":"circle_o_notch","token":"public const string circle_o_notch = \"\\uf1ce\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.circle_thin","childcount":0,"type":"Field","name":"circle_thin","token":"public const string circle_thin = \"\\uf1db\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.clipboard","childcount":0,"type":"Field","name":"clipboard","token":"public const string clipboard = \"\\uf0ea\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.clock_o","childcount":0,"type":"Field","name":"clock_o","token":"public const string clock_o = \"\\uf017\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.clone","childcount":0,"type":"Field","name":"clone","token":"public const string clone = \"\\uf24d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.close","childcount":0,"type":"Field","name":"close","token":"public const string close = \"\\uf00d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cloud","childcount":0,"type":"Field","name":"cloud","token":"public const string cloud = \"\\uf0c2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cloud_download","childcount":0,"type":"Field","name":"cloud_download","token":"public const string cloud_download = \"\\uf0ed\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cloud_upload","childcount":0,"type":"Field","name":"cloud_upload","token":"public const string cloud_upload = \"\\uf0ee\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cny","childcount":0,"type":"Field","name":"cny","token":"public const string cny = \"\\uf157\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.code","childcount":0,"type":"Field","name":"code","token":"public const string code = \"\\uf121\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.code_fork","childcount":0,"type":"Field","name":"code_fork","token":"public const string code_fork = \"\\uf126\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.codepen","childcount":0,"type":"Field","name":"codepen","token":"public const string codepen = \"\\uf1cb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.codiepie","childcount":0,"type":"Field","name":"codiepie","token":"public const string codiepie = \"\\uf284\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.coffee","childcount":0,"type":"Field","name":"coffee","token":"public const string coffee = \"\\uf0f4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cog","childcount":0,"type":"Field","name":"cog","token":"public const string cog = \"\\uf013\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cogs","childcount":0,"type":"Field","name":"cogs","token":"public const string cogs = \"\\uf085\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.columns","childcount":0,"type":"Field","name":"columns","token":"public const string columns = \"\\uf0db\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.comment","childcount":0,"type":"Field","name":"comment","token":"public const string comment = \"\\uf075\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.comment_o","childcount":0,"type":"Field","name":"comment_o","token":"public const string comment_o = \"\\uf0e5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.commenting","childcount":0,"type":"Field","name":"commenting","token":"public const string commenting = \"\\uf27a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.commenting_o","childcount":0,"type":"Field","name":"commenting_o","token":"public const string commenting_o = \"\\uf27b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.comments","childcount":0,"type":"Field","name":"comments","token":"public const string comments = \"\\uf086\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.comments_o","childcount":0,"type":"Field","name":"comments_o","token":"public const string comments_o = \"\\uf0e6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.compass","childcount":0,"type":"Field","name":"compass","token":"public const string compass = \"\\uf14e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.compress","childcount":0,"type":"Field","name":"compress","token":"public const string compress = \"\\uf066\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.connectdevelop","childcount":0,"type":"Field","name":"connectdevelop","token":"public const string connectdevelop = \"\\uf20e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.contao","childcount":0,"type":"Field","name":"contao","token":"public const string contao = \"\\uf26d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.copy","childcount":0,"type":"Field","name":"copy","token":"public const string copy = \"\\uf0c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.copyright","childcount":0,"type":"Field","name":"copyright","token":"public const string copyright = \"\\uf1f9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.creative_commons","childcount":0,"type":"Field","name":"creative_commons","token":"public const string creative_commons = \"\\uf25e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.credit_card","childcount":0,"type":"Field","name":"credit_card","token":"public const string credit_card = \"\\uf09d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.credit_card_alt","childcount":0,"type":"Field","name":"credit_card_alt","token":"public const string credit_card_alt = \"\\uf283\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.crop","childcount":0,"type":"Field","name":"crop","token":"public const string crop = \"\\uf125\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.crosshairs","childcount":0,"type":"Field","name":"crosshairs","token":"public const string crosshairs = \"\\uf05b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.css3","childcount":0,"type":"Field","name":"css3","token":"public const string css3 = \"\\uf13c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cube","childcount":0,"type":"Field","name":"cube","token":"public const string cube = \"\\uf1b2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cubes","childcount":0,"type":"Field","name":"cubes","token":"public const string cubes = \"\\uf1b3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cut","childcount":0,"type":"Field","name":"cut","token":"public const string cut = \"\\uf0c4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.cutlery","childcount":0,"type":"Field","name":"cutlery","token":"public const string cutlery = \"\\uf0f5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dashboard","childcount":0,"type":"Field","name":"dashboard","token":"public const string dashboard = \"\\uf0e4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dashcube","childcount":0,"type":"Field","name":"dashcube","token":"public const string dashcube = \"\\uf210\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.database","childcount":0,"type":"Field","name":"database","token":"public const string database = \"\\uf1c0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.deaf","childcount":0,"type":"Field","name":"deaf","token":"public const string deaf = \"\\uf2a4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.deafness","childcount":0,"type":"Field","name":"deafness","token":"public const string deafness = \"\\uf2a4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dedent","childcount":0,"type":"Field","name":"dedent","token":"public const string dedent = \"\\uf03b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.delicious","childcount":0,"type":"Field","name":"delicious","token":"public const string delicious = \"\\uf1a5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.desktop","childcount":0,"type":"Field","name":"desktop","token":"public const string desktop = \"\\uf108\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.deviantart","childcount":0,"type":"Field","name":"deviantart","token":"public const string deviantart = \"\\uf1bd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.diamond","childcount":0,"type":"Field","name":"diamond","token":"public const string diamond = \"\\uf219\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.digg","childcount":0,"type":"Field","name":"digg","token":"public const string digg = \"\\uf1a6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dollar","childcount":0,"type":"Field","name":"dollar","token":"public const string dollar = \"\\uf155\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dot_circle_o","childcount":0,"type":"Field","name":"dot_circle_o","token":"public const string dot_circle_o = \"\\uf192\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.download","childcount":0,"type":"Field","name":"download","token":"public const string download = \"\\uf019\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dribbble","childcount":0,"type":"Field","name":"dribbble","token":"public const string dribbble = \"\\uf17d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.drivers_license","childcount":0,"type":"Field","name":"drivers_license","token":"public const string drivers_license = \"\\uf2c2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.drivers_license_o","childcount":0,"type":"Field","name":"drivers_license_o","token":"public const string drivers_license_o = \"\\uf2c3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.dropbox","childcount":0,"type":"Field","name":"dropbox","token":"public const string dropbox = \"\\uf16b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.drupal","childcount":0,"type":"Field","name":"drupal","token":"public const string drupal = \"\\uf1a9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.edge","childcount":0,"type":"Field","name":"edge","token":"public const string edge = \"\\uf282\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.edit","childcount":0,"type":"Field","name":"edit","token":"public const string edit = \"\\uf044\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eercast","childcount":0,"type":"Field","name":"eercast","token":"public const string eercast = \"\\uf2da\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eject","childcount":0,"type":"Field","name":"eject","token":"public const string eject = \"\\uf052\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ellipsis_h","childcount":0,"type":"Field","name":"ellipsis_h","token":"public const string ellipsis_h = \"\\uf141\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ellipsis_v","childcount":0,"type":"Field","name":"ellipsis_v","token":"public const string ellipsis_v = \"\\uf142\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.empire","childcount":0,"type":"Field","name":"empire","token":"public const string empire = \"\\uf1d1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envelope","childcount":0,"type":"Field","name":"envelope","token":"public const string envelope = \"\\uf0e0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envelope_o","childcount":0,"type":"Field","name":"envelope_o","token":"public const string envelope_o = \"\\uf003\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envelope_open","childcount":0,"type":"Field","name":"envelope_open","token":"public const string envelope_open = \"\\uf2b6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envelope_open_o","childcount":0,"type":"Field","name":"envelope_open_o","token":"public const string envelope_open_o = \"\\uf2b7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envelope_square","childcount":0,"type":"Field","name":"envelope_square","token":"public const string envelope_square = \"\\uf199\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.envira","childcount":0,"type":"Field","name":"envira","token":"public const string envira = \"\\uf299\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eraser","childcount":0,"type":"Field","name":"eraser","token":"public const string eraser = \"\\uf12d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.etsy","childcount":0,"type":"Field","name":"etsy","token":"public const string etsy = \"\\uf2d7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eur","childcount":0,"type":"Field","name":"eur","token":"public const string eur = \"\\uf153\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.euro","childcount":0,"type":"Field","name":"euro","token":"public const string euro = \"\\uf153\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.exchange","childcount":0,"type":"Field","name":"exchange","token":"public const string exchange = \"\\uf0ec\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.exclamation","childcount":0,"type":"Field","name":"exclamation","token":"public const string exclamation = \"\\uf12a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.exclamation_circle","childcount":0,"type":"Field","name":"exclamation_circle","token":"public const string exclamation_circle = \"\\uf06a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.exclamation_triangle","childcount":0,"type":"Field","name":"exclamation_triangle","token":"public const string exclamation_triangle = \"\\uf071\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.expand","childcount":0,"type":"Field","name":"expand","token":"public const string expand = \"\\uf065\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.expeditedssl","childcount":0,"type":"Field","name":"expeditedssl","token":"public const string expeditedssl = \"\\uf23e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.external_link","childcount":0,"type":"Field","name":"external_link","token":"public const string external_link = \"\\uf08e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.external_link_square","childcount":0,"type":"Field","name":"external_link_square","token":"public const string external_link_square = \"\\uf14c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eye","childcount":0,"type":"Field","name":"eye","token":"public const string eye = \"\\uf06e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eye_slash","childcount":0,"type":"Field","name":"eye_slash","token":"public const string eye_slash = \"\\uf070\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.eyedropper","childcount":0,"type":"Field","name":"eyedropper","token":"public const string eyedropper = \"\\uf1fb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fa","childcount":0,"type":"Field","name":"fa","token":"public const string fa = \"\\uf2b4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.facebook","childcount":0,"type":"Field","name":"facebook","token":"public const string facebook = \"\\uf09a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.facebook_f","childcount":0,"type":"Field","name":"facebook_f","token":"public const string facebook_f = \"\\uf09a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.facebook_official","childcount":0,"type":"Field","name":"facebook_official","token":"public const string facebook_official = \"\\uf230\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.facebook_square","childcount":0,"type":"Field","name":"facebook_square","token":"public const string facebook_square = \"\\uf082\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fast_backward","childcount":0,"type":"Field","name":"fast_backward","token":"public const string fast_backward = \"\\uf049\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fast_forward","childcount":0,"type":"Field","name":"fast_forward","token":"public const string fast_forward = \"\\uf050\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fax","childcount":0,"type":"Field","name":"fax","token":"public const string fax = \"\\uf1ac\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.feed","childcount":0,"type":"Field","name":"feed","token":"public const string feed = \"\\uf09e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.female","childcount":0,"type":"Field","name":"female","token":"public const string female = \"\\uf182\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fighter_jet","childcount":0,"type":"Field","name":"fighter_jet","token":"public const string fighter_jet = \"\\uf0fb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file","childcount":0,"type":"Field","name":"file","token":"public const string file = \"\\uf15b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_archive_o","childcount":0,"type":"Field","name":"file_archive_o","token":"public const string file_archive_o = \"\\uf1c6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_audio_o","childcount":0,"type":"Field","name":"file_audio_o","token":"public const string file_audio_o = \"\\uf1c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_code_o","childcount":0,"type":"Field","name":"file_code_o","token":"public const string file_code_o = \"\\uf1c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_excel_o","childcount":0,"type":"Field","name":"file_excel_o","token":"public const string file_excel_o = \"\\uf1c3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_image_o","childcount":0,"type":"Field","name":"file_image_o","token":"public const string file_image_o = \"\\uf1c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_movie_o","childcount":0,"type":"Field","name":"file_movie_o","token":"public const string file_movie_o = \"\\uf1c8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_o","childcount":0,"type":"Field","name":"file_o","token":"public const string file_o = \"\\uf016\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_pdf_o","childcount":0,"type":"Field","name":"file_pdf_o","token":"public const string file_pdf_o = \"\\uf1c1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_photo_o","childcount":0,"type":"Field","name":"file_photo_o","token":"public const string file_photo_o = \"\\uf1c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_picture_o","childcount":0,"type":"Field","name":"file_picture_o","token":"public const string file_picture_o = \"\\uf1c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_powerpoint_o","childcount":0,"type":"Field","name":"file_powerpoint_o","token":"public const string file_powerpoint_o = \"\\uf1c4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_sound_o","childcount":0,"type":"Field","name":"file_sound_o","token":"public const string file_sound_o = \"\\uf1c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_text","childcount":0,"type":"Field","name":"file_text","token":"public const string file_text = \"\\uf15c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_text_o","childcount":0,"type":"Field","name":"file_text_o","token":"public const string file_text_o = \"\\uf0f6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_video_o","childcount":0,"type":"Field","name":"file_video_o","token":"public const string file_video_o = \"\\uf1c8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_word_o","childcount":0,"type":"Field","name":"file_word_o","token":"public const string file_word_o = \"\\uf1c2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.file_zip_o","childcount":0,"type":"Field","name":"file_zip_o","token":"public const string file_zip_o = \"\\uf1c6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.files_o","childcount":0,"type":"Field","name":"files_o","token":"public const string files_o = \"\\uf0c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.film","childcount":0,"type":"Field","name":"film","token":"public const string film = \"\\uf008\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.filter","childcount":0,"type":"Field","name":"filter","token":"public const string filter = \"\\uf0b0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fire","childcount":0,"type":"Field","name":"fire","token":"public const string fire = \"\\uf06d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fire_extinguisher","childcount":0,"type":"Field","name":"fire_extinguisher","token":"public const string fire_extinguisher = \"\\uf134\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.firefox","childcount":0,"type":"Field","name":"firefox","token":"public const string firefox = \"\\uf269\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.first_order","childcount":0,"type":"Field","name":"first_order","token":"public const string first_order = \"\\uf2b0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flag","childcount":0,"type":"Field","name":"flag","token":"public const string flag = \"\\uf024\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flag_checkered","childcount":0,"type":"Field","name":"flag_checkered","token":"public const string flag_checkered = \"\\uf11e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flag_o","childcount":0,"type":"Field","name":"flag_o","token":"public const string flag_o = \"\\uf11d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flash","childcount":0,"type":"Field","name":"flash","token":"public const string flash = \"\\uf0e7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flask","childcount":0,"type":"Field","name":"flask","token":"public const string flask = \"\\uf0c3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.flickr","childcount":0,"type":"Field","name":"flickr","token":"public const string flickr = \"\\uf16e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.floppy_o","childcount":0,"type":"Field","name":"floppy_o","token":"public const string floppy_o = \"\\uf0c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.folder","childcount":0,"type":"Field","name":"folder","token":"public const string folder = \"\\uf07b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.folder_o","childcount":0,"type":"Field","name":"folder_o","token":"public const string folder_o = \"\\uf114\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.folder_open","childcount":0,"type":"Field","name":"folder_open","token":"public const string folder_open = \"\\uf07c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.folder_open_o","childcount":0,"type":"Field","name":"folder_open_o","token":"public const string folder_open_o = \"\\uf115\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.font","childcount":0,"type":"Field","name":"font","token":"public const string font = \"\\uf031\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.font_awesome","childcount":0,"type":"Field","name":"font_awesome","token":"public const string font_awesome = \"\\uf2b4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fonticons","childcount":0,"type":"Field","name":"fonticons","token":"public const string fonticons = \"\\uf280\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.fort_awesome","childcount":0,"type":"Field","name":"fort_awesome","token":"public const string fort_awesome = \"\\uf286\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.forumbee","childcount":0,"type":"Field","name":"forumbee","token":"public const string forumbee = \"\\uf211\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.forward","childcount":0,"type":"Field","name":"forward","token":"public const string forward = \"\\uf04e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.foursquare","childcount":0,"type":"Field","name":"foursquare","token":"public const string foursquare = \"\\uf180\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.free_code_camp","childcount":0,"type":"Field","name":"free_code_camp","token":"public const string free_code_camp = \"\\uf2c5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.frown_o","childcount":0,"type":"Field","name":"frown_o","token":"public const string frown_o = \"\\uf119\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.futbol_o","childcount":0,"type":"Field","name":"futbol_o","token":"public const string futbol_o = \"\\uf1e3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gamepad","childcount":0,"type":"Field","name":"gamepad","token":"public const string gamepad = \"\\uf11b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gavel","childcount":0,"type":"Field","name":"gavel","token":"public const string gavel = \"\\uf0e3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gbp","childcount":0,"type":"Field","name":"gbp","token":"public const string gbp = \"\\uf154\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ge","childcount":0,"type":"Field","name":"ge","token":"public const string ge = \"\\uf1d1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gear","childcount":0,"type":"Field","name":"gear","token":"public const string gear = \"\\uf013\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gears","childcount":0,"type":"Field","name":"gears","token":"public const string gears = \"\\uf085\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.genderless","childcount":0,"type":"Field","name":"genderless","token":"public const string genderless = \"\\uf22d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.get_pocket","childcount":0,"type":"Field","name":"get_pocket","token":"public const string get_pocket = \"\\uf265\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gg","childcount":0,"type":"Field","name":"gg","token":"public const string gg = \"\\uf260\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gg_circle","childcount":0,"type":"Field","name":"gg_circle","token":"public const string gg_circle = \"\\uf261\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gift","childcount":0,"type":"Field","name":"gift","token":"public const string gift = \"\\uf06b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.git","childcount":0,"type":"Field","name":"git","token":"public const string git = \"\\uf1d3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.git_square","childcount":0,"type":"Field","name":"git_square","token":"public const string git_square = \"\\uf1d2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.github","childcount":0,"type":"Field","name":"github","token":"public const string github = \"\\uf09b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.github_alt","childcount":0,"type":"Field","name":"github_alt","token":"public const string github_alt = \"\\uf113\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.github_square","childcount":0,"type":"Field","name":"github_square","token":"public const string github_square = \"\\uf092\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gitlab","childcount":0,"type":"Field","name":"gitlab","token":"public const string gitlab = \"\\uf296\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gittip","childcount":0,"type":"Field","name":"gittip","token":"public const string gittip = \"\\uf184\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.glass","childcount":0,"type":"Field","name":"glass","token":"public const string glass = \"\\uf000\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.glide","childcount":0,"type":"Field","name":"glide","token":"public const string glide = \"\\uf2a5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.glide_g","childcount":0,"type":"Field","name":"glide_g","token":"public const string glide_g = \"\\uf2a6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.globe","childcount":0,"type":"Field","name":"globe","token":"public const string globe = \"\\uf0ac\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google","childcount":0,"type":"Field","name":"google","token":"public const string google = \"\\uf1a0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google_plus","childcount":0,"type":"Field","name":"google_plus","token":"public const string google_plus = \"\\uf0d5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google_plus_circle","childcount":0,"type":"Field","name":"google_plus_circle","token":"public const string google_plus_circle = \"\\uf2b3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google_plus_official","childcount":0,"type":"Field","name":"google_plus_official","token":"public const string google_plus_official = \"\\uf2b3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google_plus_square","childcount":0,"type":"Field","name":"google_plus_square","token":"public const string google_plus_square = \"\\uf0d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.google_wallet","childcount":0,"type":"Field","name":"google_wallet","token":"public const string google_wallet = \"\\uf1ee\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.graduation_cap","childcount":0,"type":"Field","name":"graduation_cap","token":"public const string graduation_cap = \"\\uf19d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.gratipay","childcount":0,"type":"Field","name":"gratipay","token":"public const string gratipay = \"\\uf184\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.grav","childcount":0,"type":"Field","name":"grav","token":"public const string grav = \"\\uf2d6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.group","childcount":0,"type":"Field","name":"group","token":"public const string group = \"\\uf0c0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.h_square","childcount":0,"type":"Field","name":"h_square","token":"public const string h_square = \"\\uf0fd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hacker_news","childcount":0,"type":"Field","name":"hacker_news","token":"public const string hacker_news = \"\\uf1d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_grab_o","childcount":0,"type":"Field","name":"hand_grab_o","token":"public const string hand_grab_o = \"\\uf255\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_lizard_o","childcount":0,"type":"Field","name":"hand_lizard_o","token":"public const string hand_lizard_o = \"\\uf258\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_o_down","childcount":0,"type":"Field","name":"hand_o_down","token":"public const string hand_o_down = \"\\uf0a7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_o_left","childcount":0,"type":"Field","name":"hand_o_left","token":"public const string hand_o_left = \"\\uf0a5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_o_right","childcount":0,"type":"Field","name":"hand_o_right","token":"public const string hand_o_right = \"\\uf0a4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_o_up","childcount":0,"type":"Field","name":"hand_o_up","token":"public const string hand_o_up = \"\\uf0a6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_paper_o","childcount":0,"type":"Field","name":"hand_paper_o","token":"public const string hand_paper_o = \"\\uf256\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_peace_o","childcount":0,"type":"Field","name":"hand_peace_o","token":"public const string hand_peace_o = \"\\uf25b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_pointer_o","childcount":0,"type":"Field","name":"hand_pointer_o","token":"public const string hand_pointer_o = \"\\uf25a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_rock_o","childcount":0,"type":"Field","name":"hand_rock_o","token":"public const string hand_rock_o = \"\\uf255\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_scissors_o","childcount":0,"type":"Field","name":"hand_scissors_o","token":"public const string hand_scissors_o = \"\\uf257\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_spock_o","childcount":0,"type":"Field","name":"hand_spock_o","token":"public const string hand_spock_o = \"\\uf259\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hand_stop_o","childcount":0,"type":"Field","name":"hand_stop_o","token":"public const string hand_stop_o = \"\\uf256\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.handshake_o","childcount":0,"type":"Field","name":"handshake_o","token":"public const string handshake_o = \"\\uf2b5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hard_of_hearing","childcount":0,"type":"Field","name":"hard_of_hearing","token":"public const string hard_of_hearing = \"\\uf2a4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hashtag","childcount":0,"type":"Field","name":"hashtag","token":"public const string hashtag = \"\\uf292\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hdd_o","childcount":0,"type":"Field","name":"hdd_o","token":"public const string hdd_o = \"\\uf0a0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.header","childcount":0,"type":"Field","name":"header","token":"public const string header = \"\\uf1dc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.headphones","childcount":0,"type":"Field","name":"headphones","token":"public const string headphones = \"\\uf025\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.heart","childcount":0,"type":"Field","name":"heart","token":"public const string heart = \"\\uf004\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.heart_o","childcount":0,"type":"Field","name":"heart_o","token":"public const string heart_o = \"\\uf08a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.heartbeat","childcount":0,"type":"Field","name":"heartbeat","token":"public const string heartbeat = \"\\uf21e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.history","childcount":0,"type":"Field","name":"history","token":"public const string history = \"\\uf1da\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.home","childcount":0,"type":"Field","name":"home","token":"public const string home = \"\\uf015\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hospital_o","childcount":0,"type":"Field","name":"hospital_o","token":"public const string hospital_o = \"\\uf0f8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hotel","childcount":0,"type":"Field","name":"hotel","token":"public const string hotel = \"\\uf236\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass","childcount":0,"type":"Field","name":"hourglass","token":"public const string hourglass = \"\\uf254\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_1","childcount":0,"type":"Field","name":"hourglass_1","token":"public const string hourglass_1 = \"\\uf251\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_2","childcount":0,"type":"Field","name":"hourglass_2","token":"public const string hourglass_2 = \"\\uf252\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_3","childcount":0,"type":"Field","name":"hourglass_3","token":"public const string hourglass_3 = \"\\uf253\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_end","childcount":0,"type":"Field","name":"hourglass_end","token":"public const string hourglass_end = \"\\uf253\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_half","childcount":0,"type":"Field","name":"hourglass_half","token":"public const string hourglass_half = \"\\uf252\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_o","childcount":0,"type":"Field","name":"hourglass_o","token":"public const string hourglass_o = \"\\uf250\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.hourglass_start","childcount":0,"type":"Field","name":"hourglass_start","token":"public const string hourglass_start = \"\\uf251\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.houzz","childcount":0,"type":"Field","name":"houzz","token":"public const string houzz = \"\\uf27c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.html5","childcount":0,"type":"Field","name":"html5","token":"public const string html5 = \"\\uf13b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.i_cursor","childcount":0,"type":"Field","name":"i_cursor","token":"public const string i_cursor = \"\\uf246\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.id_badge","childcount":0,"type":"Field","name":"id_badge","token":"public const string id_badge = \"\\uf2c1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.id_card","childcount":0,"type":"Field","name":"id_card","token":"public const string id_card = \"\\uf2c2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.id_card_o","childcount":0,"type":"Field","name":"id_card_o","token":"public const string id_card_o = \"\\uf2c3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ils","childcount":0,"type":"Field","name":"ils","token":"public const string ils = \"\\uf20b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.image","childcount":0,"type":"Field","name":"image","token":"public const string image = \"\\uf03e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.imdb","childcount":0,"type":"Field","name":"imdb","token":"public const string imdb = \"\\uf2d8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.inbox","childcount":0,"type":"Field","name":"inbox","token":"public const string inbox = \"\\uf01c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.indent","childcount":0,"type":"Field","name":"indent","token":"public const string indent = \"\\uf03c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.industry","childcount":0,"type":"Field","name":"industry","token":"public const string industry = \"\\uf275\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.info","childcount":0,"type":"Field","name":"info","token":"public const string info = \"\\uf129\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.info_circle","childcount":0,"type":"Field","name":"info_circle","token":"public const string info_circle = \"\\uf05a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.inr","childcount":0,"type":"Field","name":"inr","token":"public const string inr = \"\\uf156\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.instagram","childcount":0,"type":"Field","name":"instagram","token":"public const string instagram = \"\\uf16d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.institution","childcount":0,"type":"Field","name":"institution","token":"public const string institution = \"\\uf19c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.internet_explorer","childcount":0,"type":"Field","name":"internet_explorer","token":"public const string internet_explorer = \"\\uf26b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.intersex","childcount":0,"type":"Field","name":"intersex","token":"public const string intersex = \"\\uf224\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ioxhost","childcount":0,"type":"Field","name":"ioxhost","token":"public const string ioxhost = \"\\uf208\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.italic","childcount":0,"type":"Field","name":"italic","token":"public const string italic = \"\\uf033\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.joomla","childcount":0,"type":"Field","name":"joomla","token":"public const string joomla = \"\\uf1aa\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.jpy","childcount":0,"type":"Field","name":"jpy","token":"public const string jpy = \"\\uf157\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.jsfiddle","childcount":0,"type":"Field","name":"jsfiddle","token":"public const string jsfiddle = \"\\uf1cc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.key","childcount":0,"type":"Field","name":"key","token":"public const string key = \"\\uf084\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.keyboard_o","childcount":0,"type":"Field","name":"keyboard_o","token":"public const string keyboard_o = \"\\uf11c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.krw","childcount":0,"type":"Field","name":"krw","token":"public const string krw = \"\\uf159\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.language","childcount":0,"type":"Field","name":"language","token":"public const string language = \"\\uf1ab\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.laptop","childcount":0,"type":"Field","name":"laptop","token":"public const string laptop = \"\\uf109\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.lastfm","childcount":0,"type":"Field","name":"lastfm","token":"public const string lastfm = \"\\uf202\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.lastfm_square","childcount":0,"type":"Field","name":"lastfm_square","token":"public const string lastfm_square = \"\\uf203\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.leaf","childcount":0,"type":"Field","name":"leaf","token":"public const string leaf = \"\\uf06c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.leanpub","childcount":0,"type":"Field","name":"leanpub","token":"public const string leanpub = \"\\uf212\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.legal","childcount":0,"type":"Field","name":"legal","token":"public const string legal = \"\\uf0e3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.lemon_o","childcount":0,"type":"Field","name":"lemon_o","token":"public const string lemon_o = \"\\uf094\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.level_down","childcount":0,"type":"Field","name":"level_down","token":"public const string level_down = \"\\uf149\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.level_up","childcount":0,"type":"Field","name":"level_up","token":"public const string level_up = \"\\uf148\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.life_bouy","childcount":0,"type":"Field","name":"life_bouy","token":"public const string life_bouy = \"\\uf1cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.life_buoy","childcount":0,"type":"Field","name":"life_buoy","token":"public const string life_buoy = \"\\uf1cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.life_ring","childcount":0,"type":"Field","name":"life_ring","token":"public const string life_ring = \"\\uf1cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.life_saver","childcount":0,"type":"Field","name":"life_saver","token":"public const string life_saver = \"\\uf1cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.lightbulb_o","childcount":0,"type":"Field","name":"lightbulb_o","token":"public const string lightbulb_o = \"\\uf0eb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.line_chart","childcount":0,"type":"Field","name":"line_chart","token":"public const string line_chart = \"\\uf201\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.link","childcount":0,"type":"Field","name":"link","token":"public const string link = \"\\uf0c1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.linkedin","childcount":0,"type":"Field","name":"linkedin","token":"public const string linkedin = \"\\uf0e1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.linkedin_square","childcount":0,"type":"Field","name":"linkedin_square","token":"public const string linkedin_square = \"\\uf08c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.linode","childcount":0,"type":"Field","name":"linode","token":"public const string linode = \"\\uf2b8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.linux","childcount":0,"type":"Field","name":"linux","token":"public const string linux = \"\\uf17c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.list","childcount":0,"type":"Field","name":"list","token":"public const string list = \"\\uf03a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.list_alt","childcount":0,"type":"Field","name":"list_alt","token":"public const string list_alt = \"\\uf022\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.list_ol","childcount":0,"type":"Field","name":"list_ol","token":"public const string list_ol = \"\\uf0cb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.list_ul","childcount":0,"type":"Field","name":"list_ul","token":"public const string list_ul = \"\\uf0ca\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.location_arrow","childcount":0,"type":"Field","name":"location_arrow","token":"public const string location_arrow = \"\\uf124\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA._lock","childcount":0,"type":"Field","name":"_lock","token":"public const string _lock = \"\\uf023\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.long_arrow_down","childcount":0,"type":"Field","name":"long_arrow_down","token":"public const string long_arrow_down = \"\\uf175\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.long_arrow_left","childcount":0,"type":"Field","name":"long_arrow_left","token":"public const string long_arrow_left = \"\\uf177\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.long_arrow_right","childcount":0,"type":"Field","name":"long_arrow_right","token":"public const string long_arrow_right = \"\\uf178\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.long_arrow_up","childcount":0,"type":"Field","name":"long_arrow_up","token":"public const string long_arrow_up = \"\\uf176\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.low_vision","childcount":0,"type":"Field","name":"low_vision","token":"public const string low_vision = \"\\uf2a8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.magic","childcount":0,"type":"Field","name":"magic","token":"public const string magic = \"\\uf0d0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.magnet","childcount":0,"type":"Field","name":"magnet","token":"public const string magnet = \"\\uf076\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mail_forward","childcount":0,"type":"Field","name":"mail_forward","token":"public const string mail_forward = \"\\uf064\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mail_reply","childcount":0,"type":"Field","name":"mail_reply","token":"public const string mail_reply = \"\\uf112\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mail_reply_all","childcount":0,"type":"Field","name":"mail_reply_all","token":"public const string mail_reply_all = \"\\uf122\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.male","childcount":0,"type":"Field","name":"male","token":"public const string male = \"\\uf183\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.map","childcount":0,"type":"Field","name":"map","token":"public const string map = \"\\uf279\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.map_marker","childcount":0,"type":"Field","name":"map_marker","token":"public const string map_marker = \"\\uf041\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.map_o","childcount":0,"type":"Field","name":"map_o","token":"public const string map_o = \"\\uf278\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.map_pin","childcount":0,"type":"Field","name":"map_pin","token":"public const string map_pin = \"\\uf276\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.map_signs","childcount":0,"type":"Field","name":"map_signs","token":"public const string map_signs = \"\\uf277\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mars","childcount":0,"type":"Field","name":"mars","token":"public const string mars = \"\\uf222\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mars_double","childcount":0,"type":"Field","name":"mars_double","token":"public const string mars_double = \"\\uf227\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mars_stroke","childcount":0,"type":"Field","name":"mars_stroke","token":"public const string mars_stroke = \"\\uf229\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mars_stroke_h","childcount":0,"type":"Field","name":"mars_stroke_h","token":"public const string mars_stroke_h = \"\\uf22b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mars_stroke_v","childcount":0,"type":"Field","name":"mars_stroke_v","token":"public const string mars_stroke_v = \"\\uf22a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.maxcdn","childcount":0,"type":"Field","name":"maxcdn","token":"public const string maxcdn = \"\\uf136\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.meanpath","childcount":0,"type":"Field","name":"meanpath","token":"public const string meanpath = \"\\uf20c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.medium","childcount":0,"type":"Field","name":"medium","token":"public const string medium = \"\\uf23a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.medkit","childcount":0,"type":"Field","name":"medkit","token":"public const string medkit = \"\\uf0fa\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.meetup","childcount":0,"type":"Field","name":"meetup","token":"public const string meetup = \"\\uf2e0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.meh_o","childcount":0,"type":"Field","name":"meh_o","token":"public const string meh_o = \"\\uf11a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mercury","childcount":0,"type":"Field","name":"mercury","token":"public const string mercury = \"\\uf223\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.microchip","childcount":0,"type":"Field","name":"microchip","token":"public const string microchip = \"\\uf2db\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.microphone","childcount":0,"type":"Field","name":"microphone","token":"public const string microphone = \"\\uf130\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.microphone_slash","childcount":0,"type":"Field","name":"microphone_slash","token":"public const string microphone_slash = \"\\uf131\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.minus","childcount":0,"type":"Field","name":"minus","token":"public const string minus = \"\\uf068\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.minus_circle","childcount":0,"type":"Field","name":"minus_circle","token":"public const string minus_circle = \"\\uf056\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.minus_square","childcount":0,"type":"Field","name":"minus_square","token":"public const string minus_square = \"\\uf146\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.minus_square_o","childcount":0,"type":"Field","name":"minus_square_o","token":"public const string minus_square_o = \"\\uf147\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mixcloud","childcount":0,"type":"Field","name":"mixcloud","token":"public const string mixcloud = \"\\uf289\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mobile","childcount":0,"type":"Field","name":"mobile","token":"public const string mobile = \"\\uf10b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mobile_phone","childcount":0,"type":"Field","name":"mobile_phone","token":"public const string mobile_phone = \"\\uf10b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.modx","childcount":0,"type":"Field","name":"modx","token":"public const string modx = \"\\uf285\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.money","childcount":0,"type":"Field","name":"money","token":"public const string money = \"\\uf0d6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.moon_o","childcount":0,"type":"Field","name":"moon_o","token":"public const string moon_o = \"\\uf186\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mortar_board","childcount":0,"type":"Field","name":"mortar_board","token":"public const string mortar_board = \"\\uf19d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.motorcycle","childcount":0,"type":"Field","name":"motorcycle","token":"public const string motorcycle = \"\\uf21c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.mouse_pointer","childcount":0,"type":"Field","name":"mouse_pointer","token":"public const string mouse_pointer = \"\\uf245\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.music","childcount":0,"type":"Field","name":"music","token":"public const string music = \"\\uf001\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.navicon","childcount":0,"type":"Field","name":"navicon","token":"public const string navicon = \"\\uf0c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.neuter","childcount":0,"type":"Field","name":"neuter","token":"public const string neuter = \"\\uf22c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.newspaper_o","childcount":0,"type":"Field","name":"newspaper_o","token":"public const string newspaper_o = \"\\uf1ea\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.object_group","childcount":0,"type":"Field","name":"object_group","token":"public const string object_group = \"\\uf247\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.object_ungroup","childcount":0,"type":"Field","name":"object_ungroup","token":"public const string object_ungroup = \"\\uf248\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.odnoklassniki","childcount":0,"type":"Field","name":"odnoklassniki","token":"public const string odnoklassniki = \"\\uf263\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.odnoklassniki_square","childcount":0,"type":"Field","name":"odnoklassniki_square","token":"public const string odnoklassniki_square = \"\\uf264\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.opencart","childcount":0,"type":"Field","name":"opencart","token":"public const string opencart = \"\\uf23d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.openid","childcount":0,"type":"Field","name":"openid","token":"public const string openid = \"\\uf19b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.opera","childcount":0,"type":"Field","name":"opera","token":"public const string opera = \"\\uf26a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.optin_monster","childcount":0,"type":"Field","name":"optin_monster","token":"public const string optin_monster = \"\\uf23c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.outdent","childcount":0,"type":"Field","name":"outdent","token":"public const string outdent = \"\\uf03b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pagelines","childcount":0,"type":"Field","name":"pagelines","token":"public const string pagelines = \"\\uf18c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paint_brush","childcount":0,"type":"Field","name":"paint_brush","token":"public const string paint_brush = \"\\uf1fc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paper_plane","childcount":0,"type":"Field","name":"paper_plane","token":"public const string paper_plane = \"\\uf1d8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paper_plane_o","childcount":0,"type":"Field","name":"paper_plane_o","token":"public const string paper_plane_o = \"\\uf1d9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paperclip","childcount":0,"type":"Field","name":"paperclip","token":"public const string paperclip = \"\\uf0c6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paragraph","childcount":0,"type":"Field","name":"paragraph","token":"public const string paragraph = \"\\uf1dd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paste","childcount":0,"type":"Field","name":"paste","token":"public const string paste = \"\\uf0ea\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pause","childcount":0,"type":"Field","name":"pause","token":"public const string pause = \"\\uf04c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pause_circle","childcount":0,"type":"Field","name":"pause_circle","token":"public const string pause_circle = \"\\uf28b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pause_circle_o","childcount":0,"type":"Field","name":"pause_circle_o","token":"public const string pause_circle_o = \"\\uf28c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paw","childcount":0,"type":"Field","name":"paw","token":"public const string paw = \"\\uf1b0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.paypal","childcount":0,"type":"Field","name":"paypal","token":"public const string paypal = \"\\uf1ed\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pencil","childcount":0,"type":"Field","name":"pencil","token":"public const string pencil = \"\\uf040\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pencil_square","childcount":0,"type":"Field","name":"pencil_square","token":"public const string pencil_square = \"\\uf14b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pencil_square_o","childcount":0,"type":"Field","name":"pencil_square_o","token":"public const string pencil_square_o = \"\\uf044\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.percent","childcount":0,"type":"Field","name":"percent","token":"public const string percent = \"\\uf295\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.phone","childcount":0,"type":"Field","name":"phone","token":"public const string phone = \"\\uf095\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.phone_square","childcount":0,"type":"Field","name":"phone_square","token":"public const string phone_square = \"\\uf098\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.photo","childcount":0,"type":"Field","name":"photo","token":"public const string photo = \"\\uf03e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.picture_o","childcount":0,"type":"Field","name":"picture_o","token":"public const string picture_o = \"\\uf03e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pie_chart","childcount":0,"type":"Field","name":"pie_chart","token":"public const string pie_chart = \"\\uf200\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pied_piper","childcount":0,"type":"Field","name":"pied_piper","token":"public const string pied_piper = \"\\uf2ae\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pied_piper_alt","childcount":0,"type":"Field","name":"pied_piper_alt","token":"public const string pied_piper_alt = \"\\uf1a8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pied_piper_pp","childcount":0,"type":"Field","name":"pied_piper_pp","token":"public const string pied_piper_pp = \"\\uf1a7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pinterest","childcount":0,"type":"Field","name":"pinterest","token":"public const string pinterest = \"\\uf0d2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pinterest_p","childcount":0,"type":"Field","name":"pinterest_p","token":"public const string pinterest_p = \"\\uf231\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.pinterest_square","childcount":0,"type":"Field","name":"pinterest_square","token":"public const string pinterest_square = \"\\uf0d3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plane","childcount":0,"type":"Field","name":"plane","token":"public const string plane = \"\\uf072\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.play","childcount":0,"type":"Field","name":"play","token":"public const string play = \"\\uf04b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.play_circle","childcount":0,"type":"Field","name":"play_circle","token":"public const string play_circle = \"\\uf144\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.play_circle_o","childcount":0,"type":"Field","name":"play_circle_o","token":"public const string play_circle_o = \"\\uf01d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plug","childcount":0,"type":"Field","name":"plug","token":"public const string plug = \"\\uf1e6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plus","childcount":0,"type":"Field","name":"plus","token":"public const string plus = \"\\uf067\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plus_circle","childcount":0,"type":"Field","name":"plus_circle","token":"public const string plus_circle = \"\\uf055\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plus_square","childcount":0,"type":"Field","name":"plus_square","token":"public const string plus_square = \"\\uf0fe\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.plus_square_o","childcount":0,"type":"Field","name":"plus_square_o","token":"public const string plus_square_o = \"\\uf196\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.podcast","childcount":0,"type":"Field","name":"podcast","token":"public const string podcast = \"\\uf2ce\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.power_off","childcount":0,"type":"Field","name":"power_off","token":"public const string power_off = \"\\uf011\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.print","childcount":0,"type":"Field","name":"print","token":"public const string print = \"\\uf02f\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.product_hunt","childcount":0,"type":"Field","name":"product_hunt","token":"public const string product_hunt = \"\\uf288\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.puzzle_piece","childcount":0,"type":"Field","name":"puzzle_piece","token":"public const string puzzle_piece = \"\\uf12e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.qq","childcount":0,"type":"Field","name":"qq","token":"public const string qq = \"\\uf1d6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.qrcode","childcount":0,"type":"Field","name":"qrcode","token":"public const string qrcode = \"\\uf029\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.question","childcount":0,"type":"Field","name":"question","token":"public const string question = \"\\uf128\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.question_circle","childcount":0,"type":"Field","name":"question_circle","token":"public const string question_circle = \"\\uf059\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.question_circle_o","childcount":0,"type":"Field","name":"question_circle_o","token":"public const string question_circle_o = \"\\uf29c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.quora","childcount":0,"type":"Field","name":"quora","token":"public const string quora = \"\\uf2c4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.quote_left","childcount":0,"type":"Field","name":"quote_left","token":"public const string quote_left = \"\\uf10d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.quote_right","childcount":0,"type":"Field","name":"quote_right","token":"public const string quote_right = \"\\uf10e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ra","childcount":0,"type":"Field","name":"ra","token":"public const string ra = \"\\uf1d0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.random","childcount":0,"type":"Field","name":"random","token":"public const string random = \"\\uf074\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ravelry","childcount":0,"type":"Field","name":"ravelry","token":"public const string ravelry = \"\\uf2d9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rebel","childcount":0,"type":"Field","name":"rebel","token":"public const string rebel = \"\\uf1d0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.recycle","childcount":0,"type":"Field","name":"recycle","token":"public const string recycle = \"\\uf1b8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reddit","childcount":0,"type":"Field","name":"reddit","token":"public const string reddit = \"\\uf1a1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reddit_alien","childcount":0,"type":"Field","name":"reddit_alien","token":"public const string reddit_alien = \"\\uf281\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reddit_square","childcount":0,"type":"Field","name":"reddit_square","token":"public const string reddit_square = \"\\uf1a2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.refresh","childcount":0,"type":"Field","name":"refresh","token":"public const string refresh = \"\\uf021\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.registered","childcount":0,"type":"Field","name":"registered","token":"public const string registered = \"\\uf25d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.remove","childcount":0,"type":"Field","name":"remove","token":"public const string remove = \"\\uf00d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.renren","childcount":0,"type":"Field","name":"renren","token":"public const string renren = \"\\uf18b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reorder","childcount":0,"type":"Field","name":"reorder","token":"public const string reorder = \"\\uf0c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.repeat","childcount":0,"type":"Field","name":"repeat","token":"public const string repeat = \"\\uf01e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reply","childcount":0,"type":"Field","name":"reply","token":"public const string reply = \"\\uf112\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.reply_all","childcount":0,"type":"Field","name":"reply_all","token":"public const string reply_all = \"\\uf122\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.resistance","childcount":0,"type":"Field","name":"resistance","token":"public const string resistance = \"\\uf1d0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.retweet","childcount":0,"type":"Field","name":"retweet","token":"public const string retweet = \"\\uf079\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rmb","childcount":0,"type":"Field","name":"rmb","token":"public const string rmb = \"\\uf157\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.road","childcount":0,"type":"Field","name":"road","token":"public const string road = \"\\uf018\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rocket","childcount":0,"type":"Field","name":"rocket","token":"public const string rocket = \"\\uf135\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rotate_left","childcount":0,"type":"Field","name":"rotate_left","token":"public const string rotate_left = \"\\uf0e2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rotate_right","childcount":0,"type":"Field","name":"rotate_right","token":"public const string rotate_right = \"\\uf01e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rouble","childcount":0,"type":"Field","name":"rouble","token":"public const string rouble = \"\\uf158\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rss","childcount":0,"type":"Field","name":"rss","token":"public const string rss = \"\\uf09e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rss_square","childcount":0,"type":"Field","name":"rss_square","token":"public const string rss_square = \"\\uf143\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rub","childcount":0,"type":"Field","name":"rub","token":"public const string rub = \"\\uf158\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ruble","childcount":0,"type":"Field","name":"ruble","token":"public const string ruble = \"\\uf158\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.rupee","childcount":0,"type":"Field","name":"rupee","token":"public const string rupee = \"\\uf156\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.s15","childcount":0,"type":"Field","name":"s15","token":"public const string s15 = \"\\uf2cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.safari","childcount":0,"type":"Field","name":"safari","token":"public const string safari = \"\\uf267\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.save","childcount":0,"type":"Field","name":"save","token":"public const string save = \"\\uf0c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.scissors","childcount":0,"type":"Field","name":"scissors","token":"public const string scissors = \"\\uf0c4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.scribd","childcount":0,"type":"Field","name":"scribd","token":"public const string scribd = \"\\uf28a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.search","childcount":0,"type":"Field","name":"search","token":"public const string search = \"\\uf002\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.search_minus","childcount":0,"type":"Field","name":"search_minus","token":"public const string search_minus = \"\\uf010\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.search_plus","childcount":0,"type":"Field","name":"search_plus","token":"public const string search_plus = \"\\uf00e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sellsy","childcount":0,"type":"Field","name":"sellsy","token":"public const string sellsy = \"\\uf213\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.send","childcount":0,"type":"Field","name":"send","token":"public const string send = \"\\uf1d8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.send_o","childcount":0,"type":"Field","name":"send_o","token":"public const string send_o = \"\\uf1d9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.server","childcount":0,"type":"Field","name":"server","token":"public const string server = \"\\uf233\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.share","childcount":0,"type":"Field","name":"share","token":"public const string share = \"\\uf064\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.share_alt","childcount":0,"type":"Field","name":"share_alt","token":"public const string share_alt = \"\\uf1e0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.share_alt_square","childcount":0,"type":"Field","name":"share_alt_square","token":"public const string share_alt_square = \"\\uf1e1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.share_square","childcount":0,"type":"Field","name":"share_square","token":"public const string share_square = \"\\uf14d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.share_square_o","childcount":0,"type":"Field","name":"share_square_o","token":"public const string share_square_o = \"\\uf045\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shekel","childcount":0,"type":"Field","name":"shekel","token":"public const string shekel = \"\\uf20b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sheqel","childcount":0,"type":"Field","name":"sheqel","token":"public const string sheqel = \"\\uf20b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shield","childcount":0,"type":"Field","name":"shield","token":"public const string shield = \"\\uf132\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ship","childcount":0,"type":"Field","name":"ship","token":"public const string ship = \"\\uf21a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shirtsinbulk","childcount":0,"type":"Field","name":"shirtsinbulk","token":"public const string shirtsinbulk = \"\\uf214\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shopping_bag","childcount":0,"type":"Field","name":"shopping_bag","token":"public const string shopping_bag = \"\\uf290\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shopping_basket","childcount":0,"type":"Field","name":"shopping_basket","token":"public const string shopping_basket = \"\\uf291\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shopping_cart","childcount":0,"type":"Field","name":"shopping_cart","token":"public const string shopping_cart = \"\\uf07a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.shower","childcount":0,"type":"Field","name":"shower","token":"public const string shower = \"\\uf2cc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sign_in","childcount":0,"type":"Field","name":"sign_in","token":"public const string sign_in = \"\\uf090\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sign_language","childcount":0,"type":"Field","name":"sign_language","token":"public const string sign_language = \"\\uf2a7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sign_out","childcount":0,"type":"Field","name":"sign_out","token":"public const string sign_out = \"\\uf08b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.signal","childcount":0,"type":"Field","name":"signal","token":"public const string signal = \"\\uf012\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.signing","childcount":0,"type":"Field","name":"signing","token":"public const string signing = \"\\uf2a7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.simplybuilt","childcount":0,"type":"Field","name":"simplybuilt","token":"public const string simplybuilt = \"\\uf215\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sitemap","childcount":0,"type":"Field","name":"sitemap","token":"public const string sitemap = \"\\uf0e8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.skyatlas","childcount":0,"type":"Field","name":"skyatlas","token":"public const string skyatlas = \"\\uf216\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.skype","childcount":0,"type":"Field","name":"skype","token":"public const string skype = \"\\uf17e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.slack","childcount":0,"type":"Field","name":"slack","token":"public const string slack = \"\\uf198\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sliders","childcount":0,"type":"Field","name":"sliders","token":"public const string sliders = \"\\uf1de\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.slideshare","childcount":0,"type":"Field","name":"slideshare","token":"public const string slideshare = \"\\uf1e7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.smile_o","childcount":0,"type":"Field","name":"smile_o","token":"public const string smile_o = \"\\uf118\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.snapchat","childcount":0,"type":"Field","name":"snapchat","token":"public const string snapchat = \"\\uf2ab\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.snapchat_ghost","childcount":0,"type":"Field","name":"snapchat_ghost","token":"public const string snapchat_ghost = \"\\uf2ac\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.snapchat_square","childcount":0,"type":"Field","name":"snapchat_square","token":"public const string snapchat_square = \"\\uf2ad\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.snowflake_o","childcount":0,"type":"Field","name":"snowflake_o","token":"public const string snowflake_o = \"\\uf2dc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.soccer_ball_o","childcount":0,"type":"Field","name":"soccer_ball_o","token":"public const string soccer_ball_o = \"\\uf1e3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort","childcount":0,"type":"Field","name":"sort","token":"public const string sort = \"\\uf0dc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_alpha_asc","childcount":0,"type":"Field","name":"sort_alpha_asc","token":"public const string sort_alpha_asc = \"\\uf15d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_alpha_desc","childcount":0,"type":"Field","name":"sort_alpha_desc","token":"public const string sort_alpha_desc = \"\\uf15e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_amount_asc","childcount":0,"type":"Field","name":"sort_amount_asc","token":"public const string sort_amount_asc = \"\\uf160\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_amount_desc","childcount":0,"type":"Field","name":"sort_amount_desc","token":"public const string sort_amount_desc = \"\\uf161\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_asc","childcount":0,"type":"Field","name":"sort_asc","token":"public const string sort_asc = \"\\uf0de\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_desc","childcount":0,"type":"Field","name":"sort_desc","token":"public const string sort_desc = \"\\uf0dd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_down","childcount":0,"type":"Field","name":"sort_down","token":"public const string sort_down = \"\\uf0dd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_numeric_asc","childcount":0,"type":"Field","name":"sort_numeric_asc","token":"public const string sort_numeric_asc = \"\\uf162\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_numeric_desc","childcount":0,"type":"Field","name":"sort_numeric_desc","token":"public const string sort_numeric_desc = \"\\uf163\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sort_up","childcount":0,"type":"Field","name":"sort_up","token":"public const string sort_up = \"\\uf0de\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.soundcloud","childcount":0,"type":"Field","name":"soundcloud","token":"public const string soundcloud = \"\\uf1be\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.space_shuttle","childcount":0,"type":"Field","name":"space_shuttle","token":"public const string space_shuttle = \"\\uf197\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.spinner","childcount":0,"type":"Field","name":"spinner","token":"public const string spinner = \"\\uf110\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.spoon","childcount":0,"type":"Field","name":"spoon","token":"public const string spoon = \"\\uf1b1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.spotify","childcount":0,"type":"Field","name":"spotify","token":"public const string spotify = \"\\uf1bc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.square","childcount":0,"type":"Field","name":"square","token":"public const string square = \"\\uf0c8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.square_o","childcount":0,"type":"Field","name":"square_o","token":"public const string square_o = \"\\uf096\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stack_exchange","childcount":0,"type":"Field","name":"stack_exchange","token":"public const string stack_exchange = \"\\uf18d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stack_overflow","childcount":0,"type":"Field","name":"stack_overflow","token":"public const string stack_overflow = \"\\uf16c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star","childcount":0,"type":"Field","name":"star","token":"public const string star = \"\\uf005\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star_half","childcount":0,"type":"Field","name":"star_half","token":"public const string star_half = \"\\uf089\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star_half_empty","childcount":0,"type":"Field","name":"star_half_empty","token":"public const string star_half_empty = \"\\uf123\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star_half_full","childcount":0,"type":"Field","name":"star_half_full","token":"public const string star_half_full = \"\\uf123\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star_half_o","childcount":0,"type":"Field","name":"star_half_o","token":"public const string star_half_o = \"\\uf123\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.star_o","childcount":0,"type":"Field","name":"star_o","token":"public const string star_o = \"\\uf006\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.steam","childcount":0,"type":"Field","name":"steam","token":"public const string steam = \"\\uf1b6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.steam_square","childcount":0,"type":"Field","name":"steam_square","token":"public const string steam_square = \"\\uf1b7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.step_backward","childcount":0,"type":"Field","name":"step_backward","token":"public const string step_backward = \"\\uf048\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.step_forward","childcount":0,"type":"Field","name":"step_forward","token":"public const string step_forward = \"\\uf051\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stethoscope","childcount":0,"type":"Field","name":"stethoscope","token":"public const string stethoscope = \"\\uf0f1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sticky_note","childcount":0,"type":"Field","name":"sticky_note","token":"public const string sticky_note = \"\\uf249\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sticky_note_o","childcount":0,"type":"Field","name":"sticky_note_o","token":"public const string sticky_note_o = \"\\uf24a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stop","childcount":0,"type":"Field","name":"stop","token":"public const string stop = \"\\uf04d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stop_circle","childcount":0,"type":"Field","name":"stop_circle","token":"public const string stop_circle = \"\\uf28d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stop_circle_o","childcount":0,"type":"Field","name":"stop_circle_o","token":"public const string stop_circle_o = \"\\uf28e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.street_view","childcount":0,"type":"Field","name":"street_view","token":"public const string street_view = \"\\uf21d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.strikethrough","childcount":0,"type":"Field","name":"strikethrough","token":"public const string strikethrough = \"\\uf0cc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stumbleupon","childcount":0,"type":"Field","name":"stumbleupon","token":"public const string stumbleupon = \"\\uf1a4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.stumbleupon_circle","childcount":0,"type":"Field","name":"stumbleupon_circle","token":"public const string stumbleupon_circle = \"\\uf1a3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.subscript","childcount":0,"type":"Field","name":"subscript","token":"public const string subscript = \"\\uf12c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.subway","childcount":0,"type":"Field","name":"subway","token":"public const string subway = \"\\uf239\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.suitcase","childcount":0,"type":"Field","name":"suitcase","token":"public const string suitcase = \"\\uf0f2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.sun_o","childcount":0,"type":"Field","name":"sun_o","token":"public const string sun_o = \"\\uf185\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.superpowers","childcount":0,"type":"Field","name":"superpowers","token":"public const string superpowers = \"\\uf2dd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.superscript","childcount":0,"type":"Field","name":"superscript","token":"public const string superscript = \"\\uf12b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.support","childcount":0,"type":"Field","name":"support","token":"public const string support = \"\\uf1cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.table","childcount":0,"type":"Field","name":"table","token":"public const string table = \"\\uf0ce\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tablet","childcount":0,"type":"Field","name":"tablet","token":"public const string tablet = \"\\uf10a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tachometer","childcount":0,"type":"Field","name":"tachometer","token":"public const string tachometer = \"\\uf0e4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tag","childcount":0,"type":"Field","name":"tag","token":"public const string tag = \"\\uf02b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tags","childcount":0,"type":"Field","name":"tags","token":"public const string tags = \"\\uf02c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tasks","childcount":0,"type":"Field","name":"tasks","token":"public const string tasks = \"\\uf0ae\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.taxi","childcount":0,"type":"Field","name":"taxi","token":"public const string taxi = \"\\uf1ba\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.telegram","childcount":0,"type":"Field","name":"telegram","token":"public const string telegram = \"\\uf2c6\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.television","childcount":0,"type":"Field","name":"television","token":"public const string television = \"\\uf26c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tencent_weibo","childcount":0,"type":"Field","name":"tencent_weibo","token":"public const string tencent_weibo = \"\\uf1d5\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.terminal","childcount":0,"type":"Field","name":"terminal","token":"public const string terminal = \"\\uf120\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.text_height","childcount":0,"type":"Field","name":"text_height","token":"public const string text_height = \"\\uf034\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.text_width","childcount":0,"type":"Field","name":"text_width","token":"public const string text_width = \"\\uf035\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.th","childcount":0,"type":"Field","name":"th","token":"public const string th = \"\\uf00a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.th_large","childcount":0,"type":"Field","name":"th_large","token":"public const string th_large = \"\\uf009\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.th_list","childcount":0,"type":"Field","name":"th_list","token":"public const string th_list = \"\\uf00b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.themeisle","childcount":0,"type":"Field","name":"themeisle","token":"public const string themeisle = \"\\uf2b2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer","childcount":0,"type":"Field","name":"thermometer","token":"public const string thermometer = \"\\uf2c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_0","childcount":0,"type":"Field","name":"thermometer_0","token":"public const string thermometer_0 = \"\\uf2cb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_1","childcount":0,"type":"Field","name":"thermometer_1","token":"public const string thermometer_1 = \"\\uf2ca\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_2","childcount":0,"type":"Field","name":"thermometer_2","token":"public const string thermometer_2 = \"\\uf2c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_3","childcount":0,"type":"Field","name":"thermometer_3","token":"public const string thermometer_3 = \"\\uf2c8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_4","childcount":0,"type":"Field","name":"thermometer_4","token":"public const string thermometer_4 = \"\\uf2c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_empty","childcount":0,"type":"Field","name":"thermometer_empty","token":"public const string thermometer_empty = \"\\uf2cb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_full","childcount":0,"type":"Field","name":"thermometer_full","token":"public const string thermometer_full = \"\\uf2c7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_half","childcount":0,"type":"Field","name":"thermometer_half","token":"public const string thermometer_half = \"\\uf2c9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_quarter","childcount":0,"type":"Field","name":"thermometer_quarter","token":"public const string thermometer_quarter = \"\\uf2ca\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thermometer_three_quarters","childcount":0,"type":"Field","name":"thermometer_three_quarters","token":"public const string thermometer_three_quarters = \"\\uf2c8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thumb_tack","childcount":0,"type":"Field","name":"thumb_tack","token":"public const string thumb_tack = \"\\uf08d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thumbs_down","childcount":0,"type":"Field","name":"thumbs_down","token":"public const string thumbs_down = \"\\uf165\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thumbs_o_down","childcount":0,"type":"Field","name":"thumbs_o_down","token":"public const string thumbs_o_down = \"\\uf088\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thumbs_o_up","childcount":0,"type":"Field","name":"thumbs_o_up","token":"public const string thumbs_o_up = \"\\uf087\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.thumbs_up","childcount":0,"type":"Field","name":"thumbs_up","token":"public const string thumbs_up = \"\\uf164\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.ticket","childcount":0,"type":"Field","name":"ticket","token":"public const string ticket = \"\\uf145\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.times","childcount":0,"type":"Field","name":"times","token":"public const string times = \"\\uf00d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.times_circle","childcount":0,"type":"Field","name":"times_circle","token":"public const string times_circle = \"\\uf057\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.times_circle_o","childcount":0,"type":"Field","name":"times_circle_o","token":"public const string times_circle_o = \"\\uf05c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.times_rectangle","childcount":0,"type":"Field","name":"times_rectangle","token":"public const string times_rectangle = \"\\uf2d3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.times_rectangle_o","childcount":0,"type":"Field","name":"times_rectangle_o","token":"public const string times_rectangle_o = \"\\uf2d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tint","childcount":0,"type":"Field","name":"tint","token":"public const string tint = \"\\uf043\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_down","childcount":0,"type":"Field","name":"toggle_down","token":"public const string toggle_down = \"\\uf150\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_left","childcount":0,"type":"Field","name":"toggle_left","token":"public const string toggle_left = \"\\uf191\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_off","childcount":0,"type":"Field","name":"toggle_off","token":"public const string toggle_off = \"\\uf204\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_on","childcount":0,"type":"Field","name":"toggle_on","token":"public const string toggle_on = \"\\uf205\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_right","childcount":0,"type":"Field","name":"toggle_right","token":"public const string toggle_right = \"\\uf152\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.toggle_up","childcount":0,"type":"Field","name":"toggle_up","token":"public const string toggle_up = \"\\uf151\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.trademark","childcount":0,"type":"Field","name":"trademark","token":"public const string trademark = \"\\uf25c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.train","childcount":0,"type":"Field","name":"train","token":"public const string train = \"\\uf238\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.transgender","childcount":0,"type":"Field","name":"transgender","token":"public const string transgender = \"\\uf224\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.transgender_alt","childcount":0,"type":"Field","name":"transgender_alt","token":"public const string transgender_alt = \"\\uf225\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.trash","childcount":0,"type":"Field","name":"trash","token":"public const string trash = \"\\uf1f8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.trash_o","childcount":0,"type":"Field","name":"trash_o","token":"public const string trash_o = \"\\uf014\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tree","childcount":0,"type":"Field","name":"tree","token":"public const string tree = \"\\uf1bb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.trello","childcount":0,"type":"Field","name":"trello","token":"public const string trello = \"\\uf181\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tripadvisor","childcount":0,"type":"Field","name":"tripadvisor","token":"public const string tripadvisor = \"\\uf262\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.trophy","childcount":0,"type":"Field","name":"trophy","token":"public const string trophy = \"\\uf091\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.truck","childcount":0,"type":"Field","name":"truck","token":"public const string truck = \"\\uf0d1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA._try","childcount":0,"type":"Field","name":"_try","token":"public const string _try = \"\\uf195\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tty","childcount":0,"type":"Field","name":"tty","token":"public const string tty = \"\\uf1e4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tumblr","childcount":0,"type":"Field","name":"tumblr","token":"public const string tumblr = \"\\uf173\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tumblr_square","childcount":0,"type":"Field","name":"tumblr_square","token":"public const string tumblr_square = \"\\uf174\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.turkish_lira","childcount":0,"type":"Field","name":"turkish_lira","token":"public const string turkish_lira = \"\\uf195\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.tv","childcount":0,"type":"Field","name":"tv","token":"public const string tv = \"\\uf26c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.twitch","childcount":0,"type":"Field","name":"twitch","token":"public const string twitch = \"\\uf1e8\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.twitter","childcount":0,"type":"Field","name":"twitter","token":"public const string twitter = \"\\uf099\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.twitter_square","childcount":0,"type":"Field","name":"twitter_square","token":"public const string twitter_square = \"\\uf081\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.umbrella","childcount":0,"type":"Field","name":"umbrella","token":"public const string umbrella = \"\\uf0e9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.underline","childcount":0,"type":"Field","name":"underline","token":"public const string underline = \"\\uf0cd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.undo","childcount":0,"type":"Field","name":"undo","token":"public const string undo = \"\\uf0e2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.universal_access","childcount":0,"type":"Field","name":"universal_access","token":"public const string universal_access = \"\\uf29a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.university","childcount":0,"type":"Field","name":"university","token":"public const string university = \"\\uf19c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.unlink","childcount":0,"type":"Field","name":"unlink","token":"public const string unlink = \"\\uf127\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.unlock","childcount":0,"type":"Field","name":"unlock","token":"public const string unlock = \"\\uf09c\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.unlock_alt","childcount":0,"type":"Field","name":"unlock_alt","token":"public const string unlock_alt = \"\\uf13e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.unsorted","childcount":0,"type":"Field","name":"unsorted","token":"public const string unsorted = \"\\uf0dc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.upload","childcount":0,"type":"Field","name":"upload","token":"public const string upload = \"\\uf093\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.usb","childcount":0,"type":"Field","name":"usb","token":"public const string usb = \"\\uf287\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.usd","childcount":0,"type":"Field","name":"usd","token":"public const string usd = \"\\uf155\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user","childcount":0,"type":"Field","name":"user","token":"public const string user = \"\\uf007\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_circle","childcount":0,"type":"Field","name":"user_circle","token":"public const string user_circle = \"\\uf2bd\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_circle_o","childcount":0,"type":"Field","name":"user_circle_o","token":"public const string user_circle_o = \"\\uf2be\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_md","childcount":0,"type":"Field","name":"user_md","token":"public const string user_md = \"\\uf0f0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_o","childcount":0,"type":"Field","name":"user_o","token":"public const string user_o = \"\\uf2c0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_plus","childcount":0,"type":"Field","name":"user_plus","token":"public const string user_plus = \"\\uf234\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_secret","childcount":0,"type":"Field","name":"user_secret","token":"public const string user_secret = \"\\uf21b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.user_times","childcount":0,"type":"Field","name":"user_times","token":"public const string user_times = \"\\uf235\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.users","childcount":0,"type":"Field","name":"users","token":"public const string users = \"\\uf0c0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vcard","childcount":0,"type":"Field","name":"vcard","token":"public const string vcard = \"\\uf2bb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vcard_o","childcount":0,"type":"Field","name":"vcard_o","token":"public const string vcard_o = \"\\uf2bc\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.venus","childcount":0,"type":"Field","name":"venus","token":"public const string venus = \"\\uf221\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.venus_double","childcount":0,"type":"Field","name":"venus_double","token":"public const string venus_double = \"\\uf226\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.venus_mars","childcount":0,"type":"Field","name":"venus_mars","token":"public const string venus_mars = \"\\uf228\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.viacoin","childcount":0,"type":"Field","name":"viacoin","token":"public const string viacoin = \"\\uf237\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.viadeo","childcount":0,"type":"Field","name":"viadeo","token":"public const string viadeo = \"\\uf2a9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.viadeo_square","childcount":0,"type":"Field","name":"viadeo_square","token":"public const string viadeo_square = \"\\uf2aa\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.video_camera","childcount":0,"type":"Field","name":"video_camera","token":"public const string video_camera = \"\\uf03d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vimeo","childcount":0,"type":"Field","name":"vimeo","token":"public const string vimeo = \"\\uf27d\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vimeo_square","childcount":0,"type":"Field","name":"vimeo_square","token":"public const string vimeo_square = \"\\uf194\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vine","childcount":0,"type":"Field","name":"vine","token":"public const string vine = \"\\uf1ca\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.vk","childcount":0,"type":"Field","name":"vk","token":"public const string vk = \"\\uf189\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.volume_control_phone","childcount":0,"type":"Field","name":"volume_control_phone","token":"public const string volume_control_phone = \"\\uf2a0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.volume_down","childcount":0,"type":"Field","name":"volume_down","token":"public const string volume_down = \"\\uf027\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.volume_off","childcount":0,"type":"Field","name":"volume_off","token":"public const string volume_off = \"\\uf026\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.volume_up","childcount":0,"type":"Field","name":"volume_up","token":"public const string volume_up = \"\\uf028\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.warning","childcount":0,"type":"Field","name":"warning","token":"public const string warning = \"\\uf071\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wechat","childcount":0,"type":"Field","name":"wechat","token":"public const string wechat = \"\\uf1d7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.weibo","childcount":0,"type":"Field","name":"weibo","token":"public const string weibo = \"\\uf18a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.weixin","childcount":0,"type":"Field","name":"weixin","token":"public const string weixin = \"\\uf1d7\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.whatsapp","childcount":0,"type":"Field","name":"whatsapp","token":"public const string whatsapp = \"\\uf232\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wheelchair","childcount":0,"type":"Field","name":"wheelchair","token":"public const string wheelchair = \"\\uf193\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wheelchair_alt","childcount":0,"type":"Field","name":"wheelchair_alt","token":"public const string wheelchair_alt = \"\\uf29b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wifi","childcount":0,"type":"Field","name":"wifi","token":"public const string wifi = \"\\uf1eb\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wikipedia_w","childcount":0,"type":"Field","name":"wikipedia_w","token":"public const string wikipedia_w = \"\\uf266\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.window_close","childcount":0,"type":"Field","name":"window_close","token":"public const string window_close = \"\\uf2d3\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.window_close_o","childcount":0,"type":"Field","name":"window_close_o","token":"public const string window_close_o = \"\\uf2d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.window_maximize","childcount":0,"type":"Field","name":"window_maximize","token":"public const string window_maximize = \"\\uf2d0\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.window_minimize","childcount":0,"type":"Field","name":"window_minimize","token":"public const string window_minimize = \"\\uf2d1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.window_restore","childcount":0,"type":"Field","name":"window_restore","token":"public const string window_restore = \"\\uf2d2\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.windows","childcount":0,"type":"Field","name":"windows","token":"public const string windows = \"\\uf17a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.won","childcount":0,"type":"Field","name":"won","token":"public const string won = \"\\uf159\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wordpress","childcount":0,"type":"Field","name":"wordpress","token":"public const string wordpress = \"\\uf19a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wpbeginner","childcount":0,"type":"Field","name":"wpbeginner","token":"public const string wpbeginner = \"\\uf297\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wpexplorer","childcount":0,"type":"Field","name":"wpexplorer","token":"public const string wpexplorer = \"\\uf2de\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wpforms","childcount":0,"type":"Field","name":"wpforms","token":"public const string wpforms = \"\\uf298\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.wrench","childcount":0,"type":"Field","name":"wrench","token":"public const string wrench = \"\\uf0ad\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.xing","childcount":0,"type":"Field","name":"xing","token":"public const string xing = \"\\uf168\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.xing_square","childcount":0,"type":"Field","name":"xing_square","token":"public const string xing_square = \"\\uf169\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.y_combinator","childcount":0,"type":"Field","name":"y_combinator","token":"public const string y_combinator = \"\\uf23b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.y_combinator_square","childcount":0,"type":"Field","name":"y_combinator_square","token":"public const string y_combinator_square = \"\\uf1d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yahoo","childcount":0,"type":"Field","name":"yahoo","token":"public const string yahoo = \"\\uf19e\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yc","childcount":0,"type":"Field","name":"yc","token":"public const string yc = \"\\uf23b\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yc_square","childcount":0,"type":"Field","name":"yc_square","token":"public const string yc_square = \"\\uf1d4\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yelp","childcount":0,"type":"Field","name":"yelp","token":"public const string yelp = \"\\uf1e9\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yen","childcount":0,"type":"Field","name":"yen","token":"public const string yen = \"\\uf157\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.yoast","childcount":0,"type":"Field","name":"yoast","token":"public const string yoast = \"\\uf2b1\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.youtube","childcount":0,"type":"Field","name":"youtube","token":"public const string youtube = \"\\uf167\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.youtube_play","childcount":0,"type":"Field","name":"youtube_play","token":"public const string youtube_play = \"\\uf16a\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FA.youtube_square","childcount":0,"type":"Field","name":"youtube_square","token":"public const string youtube_square = \"\\uf166\";","scope":"InfinityEngine.Utils.FA"},{"signature":"InfinityEngine.Utils.FAOption","childcount":7,"type":"Class","name":"FAOption","token":"public class FAOption ","scope":"InfinityEngine.Utils","comments":{"summary":"Class used to apply options to a font awesome style in editor mode"}},{"signature":"InfinityEngine.Utils.FAOption.action","childcount":0,"type":"Field","name":"action","token":"private readonly Action<GUIStyle> action = ","scope":"InfinityEngine.Utils.FAOption"},{"signature":"InfinityEngine.Utils.FAOption.FAOption(Action<GUIStyle>)","childcount":0,"type":"Constructor","name":"FAOption","token":"private  FAOption(Action<GUIStyle> action)","scope":"InfinityEngine.Utils.FAOption","params":{"action":"Action<GUIStyle>"}},{"signature":"InfinityEngine.Utils.FAOption.FontSize(int)","childcount":0,"type":"Method","name":"FontSize","token":"public static FAOption FontSize(int size)","scope":"InfinityEngine.Utils.FAOption","params":{"size":"int"}},{"signature":"InfinityEngine.Utils.FAOption.TextColor(Color)","childcount":0,"type":"Method","name":"TextColor","token":"public static FAOption TextColor(Color color)","scope":"InfinityEngine.Utils.FAOption","params":{"color":"Color"}},{"signature":"InfinityEngine.Utils.FAOption.TextAnchor(TextAnchor)","childcount":0,"type":"Method","name":"TextAnchor","token":"public static FAOption TextAnchor(TextAnchor anchor)","scope":"InfinityEngine.Utils.FAOption","params":{"anchor":"TextAnchor"}},{"signature":"InfinityEngine.Utils.FAOption.Padding(RectOffset)","childcount":0,"type":"Method","name":"Padding","token":"public static FAOption Padding(RectOffset padding)","scope":"InfinityEngine.Utils.FAOption","params":{"padding":"RectOffset"}},{"signature":"InfinityEngine.Utils.FAOption.ApplyTo(GUIStyle)","childcount":0,"type":"Method","name":"ApplyTo","token":"internal void ApplyTo(GUIStyle style)","scope":"InfinityEngine.Utils.FAOption","params":{"style":"GUIStyle"}},{"signature":"InfinityEngine.Utils.TranslationInfo","childcount":5,"type":"Struct","name":"TranslationInfo","token":"public struct TranslationInfo ","scope":"InfinityEngine.Utils","comments":{"summary":"A translated text information"}},{"signature":"InfinityEngine.Utils.TranslationInfo.Text","childcount":0,"type":"Property","name":"Text","token":"public string Text { get; set; }","scope":"InfinityEngine.Utils.TranslationInfo","comments":{"summary":"The translated text"}},{"signature":"InfinityEngine.Utils.TranslationInfo.SourceLanguage","childcount":0,"type":"Property","name":"SourceLanguage","token":"public string SourceLanguage { get; set; }","scope":"InfinityEngine.Utils.TranslationInfo","comments":{"summary":"The source language of the translation"}},{"signature":"InfinityEngine.Utils.TranslationInfo.TargetLanguage","childcount":0,"type":"Property","name":"TargetLanguage","token":"public string TargetLanguage { get; set; }","scope":"InfinityEngine.Utils.TranslationInfo","comments":{"summary":"The target language of the translation"}},{"signature":"InfinityEngine.Utils.TranslationInfo.IsValid","childcount":0,"type":"Property","name":"IsValid","token":"public bool IsValid { get; set; }","scope":"InfinityEngine.Utils.TranslationInfo","comments":{"summary":"A value indicating whether the translation is valid"}},{"signature":"InfinityEngine.Utils.TranslationInfo.TranslationInfo(string, string, string, bool)","childcount":0,"type":"Constructor","name":"TranslationInfo","token":"internal  TranslationInfo(string text, string sourceLang, string targetLang, bool isValid)","scope":"InfinityEngine.Utils.TranslationInfo","params":{"text":"string","sourceLang":"string","targetLang":"string","isValid":"bool"}},{"signature":"InfinityEngine.Utils.GoogleTranslate","childcount":5,"type":"Class","name":"GoogleTranslate","token":"public static class GoogleTranslate ","scope":"InfinityEngine.Utils","comments":{"summary":"Provides a static functions allowing to translates a text using Google Translate api ."}},{"signature":"InfinityEngine.Utils.GoogleTranslate.translatedText","childcount":0,"type":"Field","name":"translatedText","token":"private static string translatedText ","scope":"InfinityEngine.Utils.GoogleTranslate"},{"signature":"InfinityEngine.Utils.GoogleTranslate.GetUrl(string, string, string)","childcount":0,"type":"Method","name":"GetUrl","token":"private static string GetUrl(string sourceLang, string targetLang, string sourceText)","scope":"InfinityEngine.Utils.GoogleTranslate","params":{"sourceLang":"string","targetLang":"string","sourceText":"string"}},{"signature":"InfinityEngine.Utils.GoogleTranslate.Translate(string, string, string, Action<TranslationInfo>)","childcount":0,"type":"Method","name":"Translate","token":"public static void Translate(string sourceLang, string targetLang, string sourceText, Action<TranslationInfo> callback)","scope":"InfinityEngine.Utils.GoogleTranslate","comments":{"summary":"Translates the given text from <paramref name=\"sourceLang\" /> to <paramref name=\"targetLang\" />","param-sourceLang":"The source language","param-targetLang":"The target language","param-sourceText":"The text to translate","param-callback":"A callback function invoked after the translation"},"params":{"sourceLang":"string","targetLang":"string","sourceText":"string","callback":"Action<TranslationInfo>"}},{"signature":"InfinityEngine.Utils.GoogleTranslate.Translate(string, string, Action<TranslationInfo>)","childcount":0,"type":"Method","name":"Translate","token":"public static void Translate(string targetLang, string sourceText, Action<TranslationInfo> callback)","scope":"InfinityEngine.Utils.GoogleTranslate","comments":{"summary":"Translates the given text to <paramref name=\"targetLang\" />. The function detects automatically the souce language","param-targetLang":"The target language","param-sourceText":"The text to translate","param-callback":"A callback function invoked after the translation"},"params":{"targetLang":"string","sourceText":"string","callback":"Action<TranslationInfo>"}},{"signature":"InfinityEngine.Utils.GoogleTranslate.Process(string, string, string, Action<TranslationInfo>)","childcount":0,"type":"Method","name":"Process","token":"internal static IEnumerator Process(string sourceLang, string targetLang, string sourceText, Action<TranslationInfo> callback)","scope":"InfinityEngine.Utils.GoogleTranslate","params":{"sourceLang":"string","targetLang":"string","sourceText":"string","callback":"Action<TranslationInfo>"}},{"signature":"InfinityEngine.Utils.ObjectCopier","childcount":1,"type":"Class","name":"ObjectCopier","token":"public static class ObjectCopier ","scope":"InfinityEngine.Utils","comments":{"summary":"Reference Article http://www.codeproject.com/KB/tips/SerializedObjectCloner.aspx\n     Provides a method for performing a deep copy of an object.\n     Binary Serialization is used to perform the copy."}},{"signature":"InfinityEngine.Utils.ObjectCopier.Clone<T>(T)","childcount":0,"type":"Method","name":"Clone<T>","token":"public static T Clone<T>(T source)","scope":"InfinityEngine.Utils.ObjectCopier","comments":{"summary":"Perform a deep Copy of the object.","returns":"The copied object.","typeparam-T":"The type of object being copied.","param-source":"The object instance to copy."},"params":{"source":"T"}},{"signature":"InfinityEngine.Utils.ReflectionUtils","childcount":46,"type":"Class","name":"ReflectionUtils","token":"public static class ReflectionUtils ","scope":"InfinityEngine.Utils","comments":{"summary":"Provides access to useful methods whichs simplify the process of the reflection."}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","childcount":17,"type":"Class","name":"TypeInformation","token":"internal class TypeInformation ","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Wrapper class for <see cref=\"!:TypeInfo\" /> class.\n         The class optimizes the call to the methods of <see cref=\"T:System.Type\" /> class."}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.Flags","childcount":0,"type":"Field","name":"Flags","token":"internal static BindingFlags Flags ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation"},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.isBuiltin","childcount":0,"type":"Field","name":"isBuiltin","token":"internal readonly bool isBuiltin = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation"},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.type","childcount":0,"type":"Field","name":"type","token":"internal readonly Type type = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"The wrapped type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.defaultValue","childcount":0,"type":"Field","name":"defaultValue","token":"internal readonly object defaultValue = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"The default value of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.methodsCache","childcount":0,"type":"Field","name":"methodsCache","token":"internal readonly Dictionary<string, MethodInfo> methodsCache = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"Cached dictionary of all methods of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.fieldsCache","childcount":0,"type":"Field","name":"fieldsCache","token":"internal readonly Dictionary<string, FieldInfo> fieldsCache = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"Cached dictionary of all fields of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.propertiesCache","childcount":0,"type":"Field","name":"propertiesCache","token":"internal readonly Dictionary<string, PropertyInfo> propertiesCache = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"Cached dictionary of all properties of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.decorators","childcount":0,"type":"Field","name":"decorators","token":"internal readonly Dictionary<Type, bool> decorators = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation"},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.methods","childcount":0,"type":"Field","name":"methods","token":"internal readonly MethodInfo[] methods = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"All methods of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.extensionMethods","childcount":0,"type":"Field","name":"extensionMethods","token":"internal readonly MethodInfo[] extensionMethods = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation"},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.fields","childcount":0,"type":"Field","name":"fields","token":"internal readonly FieldInfo[] fields = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"All fields of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.properties","childcount":0,"type":"Field","name":"properties","token":"internal readonly PropertyInfo[] properties = ","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","comments":{"summary":"All properties of the type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.TypeInformation(Type)","childcount":0,"type":"Constructor","name":"TypeInformation","token":"internal  TypeInformation(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.GetExtensionMethods()","childcount":0,"type":"Method","name":"GetExtensionMethods","token":"internal MethodInfo[] GetExtensionMethods()","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation"},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.AddDecorator(Type, bool)","childcount":0,"type":"Method","name":"AddDecorator","token":"internal void AddDecorator(Type decoratorType, bool value)","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","params":{"decoratorType":"Type","value":"bool"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.HasDecorator(Type)","childcount":0,"type":"Method","name":"HasDecorator","token":"internal bool HasDecorator(Type decoratorType)","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","params":{"decoratorType":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.TypeInformation.IsRegisteredDecorator(Type)","childcount":0,"type":"Method","name":"IsRegisteredDecorator","token":"internal bool IsRegisteredDecorator(Type decoratorType)","scope":"InfinityEngine.Utils.ReflectionUtils.TypeInformation","params":{"decoratorType":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.cache","childcount":0,"type":"Field","name":"cache","token":"private static readonly Dictionary<string, Type> cache = new Dictionary<string, Type>();","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.typeInfos","childcount":0,"type":"Field","name":"typeInfos","token":"private static readonly Dictionary<Type, TypeInformation> typeInfos = new Dictionary<Type, TypeInformation>();","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.flags","childcount":0,"type":"Field","name":"flags","token":"private static BindingFlags flags ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.castMethod","childcount":0,"type":"Field","name":"castMethod","token":"private static MethodInfo castMethod ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.defaultValueMethod","childcount":0,"type":"Field","name":"defaultValueMethod","token":"private static MethodInfo defaultValueMethod ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.assemblyNames","childcount":0,"type":"Field","name":"assemblyNames","token":"private static List<string> assemblyNames ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.assemblies","childcount":0,"type":"Field","name":"assemblies","token":"private static Assembly[] assemblies ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.builtins","childcount":0,"type":"Field","name":"builtins","token":"private static HashSet<Type> builtins ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.listType","childcount":0,"type":"Field","name":"listType","token":"private static Type listType ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.dictType","childcount":0,"type":"Field","name":"dictType","token":"private static Type dictType ","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.LoadAssemblies()","childcount":0,"type":"Method","name":"LoadAssemblies","token":"private static void LoadAssemblies()","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.ReflectionUtils.CacheTypeIfNot(Type)","childcount":0,"type":"Method","name":"CacheTypeIfNot","token":"private static TypeInformation CacheTypeIfNot(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetTypesInheritingFrom(Type)","childcount":0,"type":"Method","name":"GetTypesInheritingFrom","token":"public static Type[] GetTypesInheritingFrom(Type baseType)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets all types whuch inherits from the given base type.","returns":"All types whichs inherits from baseType","param-baseType":"The basz type"},"params":{"baseType":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsUnityType(Type)","childcount":0,"type":"Method","name":"IsUnityType","token":"public static bool IsUnityType(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the given type is in UnityEngine or UnityEditor assemblies","returns":"<c>true</c> if the type is in the assemblies UnityEngine or UnityEditor <c>false</c> otherwise","param-type":"The type"},"params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsAutoProperty(PropertyInfo)","childcount":0,"type":"Method","name":"IsAutoProperty","token":"public static bool IsAutoProperty(PropertyInfo property)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the property is an auto property","param-property":"The property"},"params":{"property":"PropertyInfo"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsList(object)","childcount":0,"type":"Method","name":"IsList","token":"public static bool IsList(object obj)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the object is a  <see cref=\"T:System.Collections.Generic.List`1\" /> object.","returns":"<c>true</c> if the object is a List object <c>false</c> otherwise","param-obj":"The object to checks"},"params":{"obj":"object"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsDictionary(object)","childcount":0,"type":"Method","name":"IsDictionary","token":"public static bool IsDictionary(object obj)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the object is a  <see cref=\"T:System.Collections.Generic.Dictionary`2\" /> object.","returns":"<c>true</c> if the object is a Dictionary object <c>false</c> otherwise","param-obj":"The object to checks"},"params":{"obj":"object"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsConst(FieldInfo)","childcount":0,"type":"Method","name":"IsConst","token":"public static bool IsConst(FieldInfo field)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the field is declared <c>const</c> or <c>readonly</c>.","returns":"<c>true</c> if the field is const or readonly <c>false</c> otherwise","param-field":"The field to checks"},"params":{"field":"FieldInfo"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsPrimitive(Type)","childcount":0,"type":"Method","name":"IsPrimitive","token":"public static bool IsPrimitive(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the type is primitive type or a list or array of a primitive type.","returns":"<c>true</c> if the type is a simple data type <c>false</c> otherwise","param-type":"The type"},"params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.HasAttribute(MemberInfo, Type)","childcount":0,"type":"Method","name":"HasAttribute","token":"public static bool HasAttribute(MemberInfo member, Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the member has an attribute of the given type","returns":"<c>true</c> if the member has the given attribute <c>false</c> otherwise","param-member":"The member to checks","param-type":"The type of the attribute to search"},"params":{"member":"MemberInfo","type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsIndexer(PropertyInfo)","childcount":0,"type":"Method","name":"IsIndexer","token":"public static bool IsIndexer(PropertyInfo property)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the property is an indexer '[]'.","param-property":"The property"},"params":{"property":"PropertyInfo"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.IsPublic(PropertyInfo)","childcount":0,"type":"Method","name":"IsPublic","token":"public static bool IsPublic(PropertyInfo property)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets a value indicating whether the property is public.","param-property":"The property"},"params":{"property":"PropertyInfo"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetAttribute<T>(MemberInfo, bool)","childcount":0,"type":"Method","name":"GetAttribute<T>","token":"public static T GetAttribute<T>(MemberInfo member, bool inherit = false)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets the first attribute of the given type from the member.","param-member":"The member to checks","param-inherit":"Includes the type whichs inherits from the attribute type"},"params":{"member":"MemberInfo","inherit":"bool"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetAttribute<T>(Type, bool)","childcount":0,"type":"Method","name":"GetAttribute<T>","token":"public static T GetAttribute<T>(Type type, bool inherit = false)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","inherit":"bool"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetAttributes<T>(Type, bool)","childcount":0,"type":"Method","name":"GetAttributes<T>","token":"public static T[] GetAttributes<T>(Type type, bool inherit = false)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","inherit":"bool"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetAttributes<T>(MemberInfo, bool)","childcount":0,"type":"Method","name":"GetAttributes<T>","token":"public static T[] GetAttributes<T>(MemberInfo member, bool inherit = false)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets all attributes of the given type from the member.","param-member":"The member to checks","param-inherit":"Includes the type whichs inherits from the attribute type"},"params":{"member":"MemberInfo","inherit":"bool"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.FindType(string)","childcount":0,"type":"Method","name":"FindType","token":"public static Type FindType(string name)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Tries to find the Type object with the given name","returns":"The type if it exists <c>null</c> otherwise","param-name":"The name of the type"},"params":{"name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedField(Type, string)","childcount":0,"type":"Method","name":"GetCachedField","token":"public static FieldInfo GetCachedField(Type type, string name)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedFields(Type)","childcount":0,"type":"Method","name":"GetCachedFields","token":"public static FieldInfo[] GetCachedFields(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedProperty(Type, string)","childcount":0,"type":"Method","name":"GetCachedProperty","token":"public static PropertyInfo GetCachedProperty(Type type, string name)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedProperties(Type)","childcount":0,"type":"Method","name":"GetCachedProperties","token":"public static PropertyInfo[] GetCachedProperties(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedMethod(Type, string)","childcount":0,"type":"Method","name":"GetCachedMethod","token":"public static MethodInfo GetCachedMethod(Type type, string name)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedMethod(Type, Func<MethodInfo, bool>)","childcount":0,"type":"Method","name":"GetCachedMethod","token":"public static MethodInfo GetCachedMethod(Type type, Func<MethodInfo, bool> predicate)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","predicate":"Func<MethodInfo, bool>"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedMethods(Type)","childcount":0,"type":"Method","name":"GetCachedMethods","token":"public static MethodInfo[] GetCachedMethods(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedExtensionMethod(Type, string)","childcount":0,"type":"Method","name":"GetCachedExtensionMethod","token":"public static MethodInfo GetCachedExtensionMethod(Type type, string name)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedExtensionMethod(Type, Func<MethodInfo, bool>)","childcount":0,"type":"Method","name":"GetCachedExtensionMethod","token":"public static MethodInfo GetCachedExtensionMethod(Type type, Func<MethodInfo, bool> predicate)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","predicate":"Func<MethodInfo, bool>"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetCachedExtensionMethods(Type)","childcount":0,"type":"Method","name":"GetCachedExtensionMethods","token":"public static MethodInfo[] GetCachedExtensionMethods(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetMethodsIncludingExtensions(Type)","childcount":0,"type":"Method","name":"GetMethodsIncludingExtensions","token":"public static MethodInfo[] GetMethodsIncludingExtensions(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetFieldValue(object, string)","childcount":0,"type":"Method","name":"GetFieldValue","token":"public static object GetFieldValue(object obj, string name)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"obj":"object","name":"string"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.GetValue(object, MemberInfo, object[])","childcount":0,"type":"Method","name":"GetValue","token":"public static object GetValue(object target, MemberInfo member, params object[] args)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"target":"object","member":"MemberInfo","args":"object[]"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.Cast(object, Type)","childcount":0,"type":"Method","name":"Cast","token":"public static object Cast(object obj, Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Try to cast explicitly the given object to an object of the specified type.\n         (The method works only if the object is really castable to the speficied type)","param-obj":"The object to cast","param-type":"The new type of the object"},"params":{"obj":"object","type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.DefaultValue(Type)","childcount":0,"type":"Method","name":"DefaultValue","token":"public static object DefaultValue(Type type)","scope":"InfinityEngine.Utils.ReflectionUtils","comments":{"summary":"Gets the default value of the Type","param-type":"The type"},"params":{"type":"Type"}},{"signature":"InfinityEngine.Utils.ReflectionUtils.MakeStaticGenericMethod(Type, string, Type[])","childcount":0,"type":"Method","name":"MakeStaticGenericMethod","token":"public static MethodInfo MakeStaticGenericMethod(Type type, string name, Type[] typeParams)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"type":"Type","name":"string","typeParams":"Type[]"}},{"signature":"InfinityEngine.Utils.ReflectionUtils._Cast<T>(object)","childcount":0,"type":"Method","name":"_Cast<T>","token":"private static T _Cast<T>(object obj)","scope":"InfinityEngine.Utils.ReflectionUtils","params":{"obj":"object"}},{"signature":"InfinityEngine.Utils.ReflectionUtils._DefaultValue<T>()","childcount":0,"type":"Method","name":"_DefaultValue<T>","token":"private static T _DefaultValue<T>()","scope":"InfinityEngine.Utils.ReflectionUtils"},{"signature":"InfinityEngine.Utils.TypeOF","childcount":46,"type":"Class","name":"TypeOF","token":"public static class TypeOF ","scope":"InfinityEngine.Utils","comments":{"summary":"Static references to System.Type objects"}},{"signature":"InfinityEngine.Utils.TypeOF.Object","childcount":0,"type":"Field","name":"Object","token":"public static Type Object ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Object\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Boolean","childcount":0,"type":"Field","name":"Boolean","token":"public static Type Boolean ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"bool\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Int32","childcount":0,"type":"Field","name":"Int32","token":"public static Type Int32 ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"int\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Long","childcount":0,"type":"Field","name":"Long","token":"public static Type Long ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"long\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Double","childcount":0,"type":"Field","name":"Double","token":"public static Type Double ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"double\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Float","childcount":0,"type":"Field","name":"Float","token":"public static Type Float ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"float\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.String","childcount":0,"type":"Field","name":"String","token":"public static Type String ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"string\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Vector2","childcount":0,"type":"Field","name":"Vector2","token":"public static Type Vector2 ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Vector2\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Vector3","childcount":0,"type":"Field","name":"Vector3","token":"public static Type Vector3 ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Vector3\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Vector4","childcount":0,"type":"Field","name":"Vector4","token":"public static Type Vector4 ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Vector4\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Quaternion","childcount":0,"type":"Field","name":"Quaternion","token":"public static Type Quaternion ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Quaternion\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Color","childcount":0,"type":"Field","name":"Color","token":"public static Type Color ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Color\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Rect","childcount":0,"type":"Field","name":"Rect","token":"public static Type Rect ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Rect\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.RectOffset","childcount":0,"type":"Field","name":"RectOffset","token":"public static Type RectOffset ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.RectOffset\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.GameObject","childcount":0,"type":"Field","name":"GameObject","token":"public static Type GameObject ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.GameObject\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Transform","childcount":0,"type":"Field","name":"Transform","token":"public static Type Transform ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Transform\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.RectTransform","childcount":0,"type":"Field","name":"RectTransform","token":"public static Type RectTransform ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.RectTransform\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Rigidbody","childcount":0,"type":"Field","name":"Rigidbody","token":"public static Type Rigidbody ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Rigidbody\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Rigidbody2D","childcount":0,"type":"Field","name":"Rigidbody2D","token":"public static Type Rigidbody2D ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Rigidbody2D\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Text","childcount":0,"type":"Field","name":"Text","token":"public static Type Text ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.UI.Text\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.CanvasGroup","childcount":0,"type":"Field","name":"CanvasGroup","token":"public static Type CanvasGroup ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.CanvasGroup\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Canvas","childcount":0,"type":"Field","name":"Canvas","token":"public static Type Canvas ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Canvas\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.SpriteRenderer","childcount":0,"type":"Field","name":"SpriteRenderer","token":"public static Type SpriteRenderer ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.SpriteRenderer\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.MeshRenderer","childcount":0,"type":"Field","name":"MeshRenderer","token":"public static Type MeshRenderer ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.MeshRenderer\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Mesh","childcount":0,"type":"Field","name":"Mesh","token":"public static Type Mesh ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Mesh\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Light","childcount":0,"type":"Field","name":"Light","token":"public static Type Light ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Light\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.LineRenderer","childcount":0,"type":"Field","name":"LineRenderer","token":"public static Type LineRenderer ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.LineRenderer\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.TrailRenderer","childcount":0,"type":"Field","name":"TrailRenderer","token":"public static Type TrailRenderer ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.TrailRenderer\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Camera","childcount":0,"type":"Field","name":"Camera","token":"public static Type Camera ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Camera\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Image","childcount":0,"type":"Field","name":"Image","token":"public static Type Image ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.UI.Image\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Texture2D","childcount":0,"type":"Field","name":"Texture2D","token":"public static Type Texture2D ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Texture2D\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.GUISkin","childcount":0,"type":"Field","name":"GUISkin","token":"public static Type GUISkin ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.GUISkin\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Font","childcount":0,"type":"Field","name":"Font","token":"public static Type Font ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Font\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.AudioClip","childcount":0,"type":"Field","name":"AudioClip","token":"public static Type AudioClip ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.AudioClip\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.TextAsset","childcount":0,"type":"Field","name":"TextAsset","token":"public static Type TextAsset ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.TextAsset\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Material","childcount":0,"type":"Field","name":"Material","token":"public static Type Material ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Material\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Sprite","childcount":0,"type":"Field","name":"Sprite","token":"public static Type Sprite ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Sprite\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Shader","childcount":0,"type":"Field","name":"Shader","token":"public static Type Shader ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Shader\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Animation","childcount":0,"type":"Field","name":"Animation","token":"public static Type Animation ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Animation\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.AnimationClip","childcount":0,"type":"Field","name":"AnimationClip","token":"public static Type AnimationClip ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.AnimationClip\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Animator","childcount":0,"type":"Field","name":"Animator","token":"public static Type Animator ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.Animator\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.PhysicMaterial","childcount":0,"type":"Field","name":"PhysicMaterial","token":"public static Type PhysicMaterial ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.PhysicMaterial\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.PhysicsMaterial2D","childcount":0,"type":"Field","name":"PhysicsMaterial2D","token":"public static Type PhysicsMaterial2D ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"UnityEngine.PhysicsMaterial2D\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.XmlDocument","childcount":0,"type":"Field","name":"XmlDocument","token":"public static Type XmlDocument ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"System.Xml.XmlDocument\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.FlagsAttribute","childcount":0,"type":"Field","name":"FlagsAttribute","token":"public static Type FlagsAttribute ","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"typeof(<see cref=\"System.FlagsAttribute\"/>)"}},{"signature":"InfinityEngine.Utils.TypeOF.Find(string)","childcount":0,"type":"Method","name":"Find","token":"public static Type Find(string name)","scope":"InfinityEngine.Utils.TypeOF","comments":{"summary":"Searches for the first field of this class which match for the given name.","returns":"A Type.","param-name":"The name."},"params":{"name":"string"}}
];
const ROOT_MEMBERS = [
{"signature":"InfinityEngine","childcount":52,"type":"Namespace","name":"InfinityEngine","token":"namespace InfinityEngine","scope":"","comments":{"summary":"The main namespace of the API."}},{"signature":"InfinityEngine.Attributes","childcount":22,"type":"Namespace","name":"InfinityEngine.Attributes","token":"namespace InfinityEngine.Attributes","scope":"","comments":{"summary":"This namespace provides access to custom attributes."}},{"signature":"InfinityEngine.DesignPatterns","childcount":4,"type":"Namespace","name":"InfinityEngine.DesignPatterns","token":"namespace InfinityEngine.DesignPatterns","scope":"","comments":{"summary":"This namespace provides access to the implementation of some design patterns."}},{"signature":"InfinityEngine.Extensions","childcount":16,"type":"Namespace","name":"InfinityEngine.Extensions","token":"namespace InfinityEngine.Extensions","scope":"","comments":{"summary":"This namespace provides access to extension methods for unity engines components and c# language.\n Some of these extension methods are usable without coding in unity inspector thanks to the reflection."}},{"signature":"InfinityEngine.ResourceManagement","childcount":3,"type":"Namespace","name":"InfinityEngine.ResourceManagement","token":"namespace InfinityEngine.ResourceManagement","scope":""},{"signature":"InfinityEngine.Serialization","childcount":4,"type":"Namespace","name":"InfinityEngine.Serialization","token":"namespace InfinityEngine.Serialization","scope":""},{"signature":"InfinityEngine.Localization","childcount":1,"type":"Namespace","name":"InfinityEngine.Localization","token":"namespace InfinityEngine.Localization","scope":""},{"signature":"InfinityEngine.Interpolations","childcount":10,"type":"Namespace","name":"InfinityEngine.Interpolations","token":"namespace InfinityEngine.Interpolations","scope":"","comments":{"summary":"This namespace allow to creates smooth animations thanks to interpolation formulas."}},{"signature":"InfinityEngine.Utils","childcount":11,"type":"Namespace","name":"InfinityEngine.Utils","token":"namespace InfinityEngine.Utils","scope":"","comments":{"summary":"This namespace Provides access to useful classes."}}
];
const BUILTIN_WORDS_REGEX = /\b(?:__arglist|abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|Dictionary|do|double|dynamic|else|enum|event|Exception|extern|false|final|finally|fixed|float|for|foreach|from|from|get|get;|goto|grouby|HashSet|if|in|in|int|interface|internal|is|List|lock|long|nameof|namespace|new|null|object|out|params|partial|private|protected|public|readonly|ref|return|sealed|select|select|set|set;|short|Single|Single32|Single64|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|UInt16|UInt32|UInt64|ulong|unchecked|unsafe|ushort|using|var|virtual|void|volatile|where|where|while)\b/g;
